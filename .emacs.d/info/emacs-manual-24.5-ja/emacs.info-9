This is emacs.info, produced by makeinfo version 6.1 from emacs.texi.

This is the ‘GNU Emacs Manual’, updated for Emacs version 24.5.

   Copyright © 2015–2016 Ayanokoji Takesi <ayanokoji.takesi@gmail.com>
Copyright © 1985–1987, 1993–2015 Free Software Foundation, Inc.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.3 or any later version published by the Free Software
     Foundation; with the Invariant Sections being “The GNU Manifesto,”
     “Distribution” and “GNU GENERAL PUBLIC LICENSE,” with the
     Front-Cover Texts being “A GNU Manual,” and with the Back-Cover
     Texts as in (a) below.  A copy of the license is included in the
     section entitled “GNU Free Documentation License.”

     (a) The FSF’s Back-Cover Text is: “You have the freedom to copy and
     modify this GNU manual.  Buying copies from the FSF supports it in
     developing GNU and promoting software freedom.”
INFO-DIR-SECTION Emacs
START-INFO-DIR-ENTRY
* Emacs: (emacs).            拡張可能なセルフドキュメント形式のテキストエディター。
END-INFO-DIR-ENTRY


File: emacs.info,  Node: Windows HOME,  Next: Windows Keyboard,  Prev: ls in Lisp,  Up: Microsoft Windows

G.5 MS-Windowsでのホームと開始ディレクトリー
============================================

Windowsで‘HOME’に相当するのは、“ユーザー固有のアプリケーションデータディ
レクトリー”で、それの実際の位置はWindowsのバージョンに依存します。典型的
な値は、Windows 2000/XP/2003では‘C:\Documents and
Settings\USERNAME\Application Data’、Windows Vista/7/2008では
‘C:\Documents and Settings\USERNAME\Application Data’、そしてWindows
9X/MEでは‘C:\WINDOWS\Application Data’か
‘C:\WINDOWS\Profiles\USERNAME\Application Data’のいずれかです。このディ
レクトリーが存在しない、またはアクセスできない場合、Emacsは‘HOME’のデフ
ォルト値を‘C:\’にフォールバックします。

   環境変数‘HOME’をシステムの他のディレクトリーを指すように明示的にセッ
トすることにより、‘HOME’のデフォルト値をオーバーライドできます。‘HOME’は
コマンドシェルプロンプト、または‘My Computer’の‘Properties’ダイアログか
らセットできます。‘HOME’はシステムレジストリーからもセットできます。
*note MS-Windows Registry::を参照してください。

   古いバージョンのEmacs(1)との互換性のため、ドライブ‘C:’のルートディレ
クトリー‘C:\’に‘.emacs’という名前のファイルが存在する場合、そして
‘HOME’が環境とレジストリーのどちらでもセットされていない場合、Emacsは
‘C:\’をデフォルトの‘HOME’の場所として扱い、たとえアプリケーションデータ
ディレクトリーが存在する場合でも、そこを探しません。古い名前の
‘_emacs’(以下参照)ではなく、‘C:\’の‘.emacs’だけが探されることに注意して
ください。‘C:\.emacs’を使用して‘HOME’を定義する方法は、推奨されていませ
ん。

   最終的な場所がどこであれ、Emacsはその場所を指すように環境変数‘HOME’の
内部値をセットし、通常ホームディレクトリーで探したり作成するファイルとデ
ィレクトリーのために、その場所を使用します。

   Emacsがホームディレクトリーをどこだと認識しているかは、‘C-x d ~/
<RET>’とタイプして常に確認できます。これはホームディレクトリーのファイル
のリストを表示し、最初の行にホームディレクトリーの完全な名前を表示します
。同様にinitファイルをvisitするには、(initファイルの名前が‘.emacs’の場合
)‘C-x C-f ~/.emacs <RET>’とタイプしてください。

   ホームディレクトリーはinitファイルが格納される場所です。*note Init
File::で述べられるとおり、initファイルは任意の名前をもつことができます。

   MS-DOSはドットで始まるファイル名を使用できず、古いWindowsシステムでは
そのような名前のファイルを作成するのが困難だったので、EmacsのWindowsポー
トは、ホームディレクトリーに‘_emacs’が存在して、‘.emacs’が存在しない場合
、‘_emacs’という名前ののinitファイルをサポートします。この名前は時代遅れ
と考えられています。

   ---------- Footnotes ----------

   (1) 古いバージョンのEmacsは、アプリケーションデータディレクトリーをチ
ェックしません。


File: emacs.info,  Node: Windows Keyboard,  Next: Windows Mouse,  Prev: Windows HOME,  Up: Microsoft Windows

G.6 MS-Windowsでのキーボードの使用方法
======================================

このセクションでは、Emacsでのキーボード入力に関するWindows固有の機能につ
いて説明します。

   MS-Windowsプログラムで慣習的に使用されるキー組み合わせ(“キーボードシ
ョートカット”として知られる)の多くが、伝統的なEmacsのキーバインドと衝突
します(これらEmacsのキーバインドは、Microsoftが設立される数年前には確立
されていました)。衝突の例には‘C-c’、‘C-x’、‘C-z’、‘C-a’、‘W-<SPC>’が含ま
れます。CUAモード(*note CUA Bindings::を参照してください)を有効にするこ
とにより、これらのいくつかの意味をMS-Windowsでの意味に近づけるよう再定義
できます。

   デフォルトでは、<Alt>とラベルされたキーは、<META>キーにマップされます
。かわりに‘Alt’修飾を生成したい場合は、変数‘w32-alt-is-meta’に‘nil’をセ
ットしてください。

   MS-Windowsでは、‘<Alt>-<TAB>’のような特定のキー組み合わせは、
Windowsが使用するために予約済みです。これらのキー組み合わせは、Emacsがそ
れを取得する前に、システムにより解釈されます。関数
‘w32-register-hot-key’を使用して、Windowsに横取りされることなく、Emacsが
キーシーケンスを取得できます。このキーシーケンスを“ホットキー(hot key)”と
して登録して、Windowsにたいするそのキー特別な意味をオーバーライドします
(MS-Windowsは、フォーカスがEmacsにあるときだけ、そのキーシーケンスがホッ
トキーだと指示されるので、他のWindowsアプリケーションにたいして、特別な
キーは通常どおりの意味をもちます)。

   ‘w32-register-hot-key’に指定する引数は、‘define-key’で許されるベクタ
ー形式で、修飾キーあり/なしで、ただ1つのキーを指定しなければなりません。
‘w32-alt-is-meta’が‘t’(デフォルト)の場合、メタ修飾は<Alt>キーと解釈され
、ハイパー修飾は常にWindowsキー(通常<start>という文字とWindowsのロゴがラ
ベルされています)と解釈されます。この関数がキーシーケンスの登録に成功す
ると、ホットキーIDを返し、そうでない場合は‘nil’が返されます。

   たとえば‘(w32-register-hot-key [M-tab])’とすると、Emacs内で普通に
‘M-<TAB>’を使用して、トップレベルにあるポイント位置の単語やシンボルを補
完したり、以前にインクリメンタル検索の間に見つけた文字列にたいして、カレ
ント検索文字列を補完することができます。

   関数‘w32-unregister-hot-key’は、引数となるキーシーケンスにたいして、
‘w32-register-hot-key’と逆のことを行ないます。

   デフォルトでは、<CapsLock>キー(このキーは小文字を大文字に変換します
)は通常の文字キーだけに効果をもちます。しかし変数
‘w32-capslock-is-shiftlock’を非‘nil’値にセットした場合、<CapsLock>は非文
字キーにも同様に効果をもつようになり、その非文字キーをタイプするとき、あ
たかも<Shift>キーが押されたかのようになります。

   変数‘w32-enable-caps-lock’に‘nil’値をセットした場合、<CapsLock>キーは
、ある文字にたいするシフトが押されたバージョンのキーではなく、かわりにシ
ンボル‘capslock’を生成します。デフォルト値は‘t’です。

   同様に‘w32-enable-num-lock’が‘nil’の場合、<NumLock>キーはシンボル
‘kp-numlock’を生成します。デフォルトは‘t’で、これは<NumLock>に期待された
動作、すなわちテンキー上のキーのもつ意味の切り替えを行ないます。

   変数‘w32-apps-modifier’は、<Apps>キー(通常は右<Alt>キーと右<Ctrl>キー
の間にあります)の効果を制御します。変数の値には、対応する修飾キーを示す
シンボル‘hyper’、‘super’、‘meta’、‘alt’、‘control’、‘shift’のどれか1つを
指定するか、‘nil’を指定してそれをキー‘apps’として扱います。デフォルトは
‘nil’です。

   変数‘w32-lwindow-modifier’は、左Windowsキー(通常は<start>という文字と
Windowsロゴがラベルされています)の効果を決定します。変数の値が‘nil’(デフ
ォルト)の場合、このキーはシンボル‘lwindow’を生成します。これに‘hyper’、
‘super’、‘meta’、‘alt’、‘control’、‘shift’のどれか1つを指定すると、対応
する修飾キーを生成します。これに似た変数‘w32-rwindow-modifier’は右
Windowsキーの効果を制御し、‘w32-scroll-lock-modifier’は同じことを
<ScrLock>キーにたいして行ないます。これらの変数が‘nil’にセットされている
場合、右Windowsキーはシンボル‘rwindow’を生成し、<ScrLock>はシンボル
‘scroll’を生成します。

   EmacsがネイティブのWindowsアプリケーションとしてコンパイルされている
と、Windowsメニューを呼び出す<Alt>をタップ(tapping: 覗き見)するWindows機
能をオフに切り替えます。これはEmacsでは<Alt>として用いられるからです。
Emacsを使用するとき、ユーザーが1度<META>キーを押して、後で気が変わること
があります。もしこのキーがWindowsメニューを立ち上げる効果をもつ場合、そ
れに続くコマンドの意味が変更されてしまいます。多くのユーザーは、これにイ
ライラするでしょう。

   ‘w32-pass-alt-to-system’を非‘nil’値にセットすることにより、<Alt>キー
の覗き見にたいするWindowsのデフォルトの処理を再び有効にできます。

   変数‘w32-pass-lwindow-to-system’と‘w32-pass-rwindow-to-system’は、左
Windowsキーと右Windowsキーが、Windowsに渡されるか、Emacsに渡されるかを決
定します。値が‘nil’の場合、これらのキーはEmacsに渡され、それ以外の場合は
Windowsに渡されます。両方の変数のデフォルトは‘t’です。これらのキーを
Windowsに渡すことにより、たとえば‘<Lwindow>’は‘Start’メニューを開くなど
の、通常の効果が生成されます。(1)

   変数‘w32-recognize-altgr’は、(もしそれがキーボードにあれば)<AltGr>キ
ー(またはそれと同種のキー)が右<Alt>と左<Ctrl>キーを一緒に押したときの組
み合わせとするか、それともそれを<AltGr>キーとして認識するかを制御します
。デフォルトは‘t’で、これはそれらのキーが‘AltGr’を生成することを意味しま
す。これを‘nil’にセットすることにより、<AltGr>キー(またはそれと同種のキ
ー)との組み合わせは、<Ctrl>修飾と<META>修飾の組み合わせとして解釈されま
す。

   ---------- Footnotes ----------

   (1) 現在のところEmacsでは抑止できないが、低レベルでWindowsにとらえら
れる、“Windows”キーと他のキーの組み合わせがいくつかあります。たとえば
‘<Lwindow> r’は常にWindowsの‘Run’ダイアログをポップアップします。とはい
え変数‘w32-phantom-key-code’をカスタマイズすることが、あるケースでは助け
になるかもしれません。


File: emacs.info,  Node: Windows Mouse,  Next: Windows Processes,  Prev: Windows Keyboard,  Up: Microsoft Windows

G.7 MS-Windowsでのマウスの使用方法
==================================

このセクションでは、マウスに関連したWindows固有の変数について説明します
。

   変数‘w32-mouse-button-tolerance’は、2ボタンマウスで、マウス中央ボタン
を模倣する際の時間間隔を、ミリ秒で指定します。左ボタンと右ボタンの両方の
ボタンが、この時間間隔のうちに離された場合、Emacsはそれらどちらかのボタ
ンのダブルクリックイベントのかわりに、マウス中央ボタンのクリックイベント
を生成します。

   変数‘w32-pass-extra-mouse-buttons-to-system’が非‘nil’の場合、Emacsは
Windowsに第4、第5マウスボタンを渡します。

   変数‘w32-swap-mouse-buttons’、は3ボタンマウスが‘mouse-2’イベントを生
成するかを制御します。これが‘nil’(デフォルト)の場合、中央のボタンは
‘mouse-2’を生成し、右ボタンは‘mouse-3’を生成します。この変数が非‘nil’の
場合、これら2つのボタンの役割は逆になります。


File: emacs.info,  Node: Windows Processes,  Next: Windows Printing,  Prev: Windows Mouse,  Up: Microsoft Windows

G.8 Windows 9X/MEおよびWindows NT/2000/XPでのサブプロセス
=========================================================

WindowsのネイティブアプリケーションとしてコンパイルされたEmacsには、
(DOSバージョンとは対照的に)非同期サブプロセスにたいする完全なサポートが
含まれます。Windowsバージョンでは、同期および非同期サブプロセスは、
Windows 9X/MEおよびWindows NT/2000/XPで、32ビットWindowsアプリケーション
を実行する限りは、うまく動作します。しかしサブプロセスでDOSアプリケーシ
ョンを実行する場合は、問題に遭遇したり、そのアプリケーションを実行できな
いかもしれません。また、2つのサブプロセスで2つのDOSアプリケーションを実
行する場合は、システムを再起動する必要があるかもしれません。

   Windows9X標準のコマンドインプリターはDOSアプリケーションなので、その
ようなシステムを使用する場合に、これらの問題が重要になります。しかしこれ
らの問題についてわたしたちができることはありません。Microsoftだけがこれ
をfixできるのです。

   サブプロセスで1つのDOSアプリケーションを実行する場合、それが“様式に従
って(well-behaved)”いる限り、そしてスクリーンへの直接アクセスや、その他
の異例なことを行なわない限り、そのサブプロセスは期待されたとおりに動作す
べきです。CPUモニターアプリケーションがある場合、そのDOSアプリケーション
がアイドル状態でも、CPUは100%ビジーに見えるかもしれませんが、これは単に
CPUモニターがプロセッサー負荷を計測する方法によるものです。

   他のDOSアプリケーションを別のサブプロセスで開始する前に、DOSアプリケ
ーションを終了しなければなりません。EmacsはDOSサブプロセスに割り込み、ま
たは終了させることができません。プログラムの終了コマンドを与えることだけ
が、そのようなサブプロセスを終了できる唯一の方法です。

   同時に別のサブプロセスで2つのDOSアプリケーションの実行を試みた場合、
それらの一方、または両方が非同期であっても、最初のサブプロセスが終了する
まで、2番目に開始されたサブプロセスはサスペンドされます。

   もし最初のサブプロセスと対話することができ、終了を指示できたら2番目の
プロセスは通常どおり実行を継続するはずです。しかし2番目のサブプロセスが
同期実行されている場合、Emacsは最初のサブプロセスが終了するまでハングす
るでしょう。最初のプロセスがユーザーによる入力なしには終了しない場合、
Windows9Xでは再起動する以外に選択肢はありません。Windows NT/2000/XPで実
行している場合、プロセスビューアーアプリケーションを使用して、適切な
NTVDMのインスタンスをkillすることができます(これにより、両方のDOSサブプ
ロセスが終了します)。

   このような状況でWindows9Xを再起動する場合、‘Start’メニューの
‘Shutdown’コマンドを使用しないでください。これは通常システムをハングさせ
ます。かわりに‘<Ctrl>-<Alt>-<DEL>’とタイプして‘Shutdown’を選択します。こ
れは処理を行なうのに数分かかるかもしれませんが、通常どおり機能します。

   変数‘w32-quote-process-args’は、Emacsがプロセス引数をクォートする方法
を制御します。非‘nil’は文字‘"’でクォートすることを意味します。変数の値が
文字の場合、Emacsは任意のクォート文字をエスケープするのに、その文字を使
用します。それ以外の場合、プログラムのタイプにもとづいて、適切なエスケー
プ文字を選択します。

   関数‘w32-shell-execute’は、特定のタイプのファイルやドキュメントにたい
して、ある種の標準的なWindows操作を処理するために登録された、
MS-Windowsアプリケーションを実行するカスタマイズコマンドを記述するのに有
用かもしれません。この関数はWindows APIの‘ShellExecute’にたいするラッパ
ーです。詳細は、MS-WindowsのAPIドキュメントを参照してください。


File: emacs.info,  Node: Windows Printing,  Next: Windows Fonts,  Prev: Windows Processes,  Up: Microsoft Windows

G.9 MS-Windowsでの印刷
======================

Posixスタイルの‘lpr’プログラムが利用できない場合、MS-DOSとMS-Windowsでは
、‘lpr-buffer’(*note Printing::を参照してください)や
‘ps-print-buffer’(*note PostScript::を参照してください)のような印刷コマ
ンドは、プリンターポートの1つに出力を送ります。同じEmacs変数がすべてのシ
ステムでの印刷を制御しますが、MS-DOSとMS-Windowsでは、それらの変数が異な
るデフォルト値をもつ場合があります。

   MS WindowsのEmacsは、(関数‘default-printer-name’を使用して)デフォルト
プリンターの自動検出を試みます。しかし、これはある稀なケースでは失敗する
ことがあり、Emacsから別のプリンターを使用したいと思うときがあるかもしれ
ません。このセクションの残りの部分では、Emacsに使用するプリンターを指示
する方法を説明します。

   ローカルプリンターを使用したい場合、Lisp変数‘lpr-command’に‘""’(これ
はWindowsではデフォルトです)をセットして、‘printer-name’にプリンターポー
ト、たとえば通常のローカルプリンターポート‘"PRN"’、または‘"LPT2"’、また
はシリアルプリンターにたいする‘"COM1"’などをセットします。
‘printer-name’にファイル名をセットすることもできます。この場合、“印刷”さ
れた出力は、そのファイルに追加されます。‘printer-name’を‘"NUL"’にセット
した場合、印刷された出力は破棄されます(システムのnullデバイスに送られま
す)。

   ‘printer-name’にそのプリンターのUNC共有名 — たとえば
‘"//joes_pc/hp4si"’のような — をセットすることにより、他のマシンで共有さ
れているプリンターを使用することもできます(ここではスラッシュを使用する
か、バックスラッシュを使用するかは問題ではありません)。共有プリンターの
名前を探すには、サーバーのリストを取得するために、コマンドプロンプトでコ
マンド‘net view’を実行して、‘net view SERVER-NAME’でそのサーバーで共有さ
れているプリンター(とディレクトリー)の名前を確認します。かわりにデスクト
ップの‘Network Neighborhood’アイコンをクリックして、ネットワークを通じて
プリンターを共有しているマシンを確認することもできます。

   プリンターが‘net view’で出力されない場合、または‘printer-name’にUNC共
有名をセットしても、そのプリンターからハードコピーが出力されない場合、
‘net use’コマンドを使用して、‘"LPT2"’のようなローカルプリンターポートを
、ネットワークプリンターに接続できます。たとえば‘net use LPT2:
\\joes_pc\hp4si’(1)により、Windowsに‘LPT2’ポートを“キャプチャー”させて、
印刷物をマシン‘joes_pc’に接続されているプリンターにリダイレクトします。
このコマンド後は、‘printer-name’に‘"LPT2"’をセットすることにより、そのネ
ットワークプリンターでハードコピーが印刷されます。

   あるWindowsネットワークソフトウェアーでは、‘"LPT2"’のような特定のプリ
ンターポートをキャプチャーして、‘net use’のかわりに
‘Control Panel->Printers’を通じてネットワークプリンターにリダイレクトす
るよう、Windowsに指示できます。

   ‘printer-name’にファイル名をセットする場合、絶対ファイル名を使用する
のが最良です。Emacsはカレントバッファーのデフォルトディレクトリーに合わ
せて作業ディレクトリーを変更するので、‘printer-name’のファイル名が相対フ
ァイル名の場合、結果として印刷が行なわれたバッファーのディレクトリーごと
に、複数のファイルができてしまいます。

   変数‘printer-name’の値が正しいのに、印刷してもそのプリンターからハー
ドコピーが印刷されない場合、そのプリンターがプレーンテキストの印刷をサポ
ートしない可能性があります(安価なプリンターのいくつかでは、この機能が省
略されています)。そのような場合、以下で説明するPostScriptプリントコマン
ドを試してみてください。

   コマンド‘print-buffer’および‘print-region’は、印刷された各ページにヘ
ッダーを生成するために、‘pr’プログラムを呼び出すか、‘lpr’プログラムの特
別なスイッチを使用します。通常MS-DOSとMS-Windowsにはこれらのプログラムが
ないので、デフォルトでは印刷ページのヘッダーの印刷リクエストは単に無視さ
れるように、‘lpr-headers-switches’がセットされています。したがって
‘print-buffer’と‘print-region’は、‘lpr-buffer’および‘lpr-region’と同じ出
力を生成します。適切な‘pr’プログラム(たとえばGNU Coreutilsのもの)がある
場合は、‘lpr-headers-switches’に‘nil’をセットします。するとEmacsはページ
ヘッダーを生成するために‘pr’を呼び出し、その結果を‘printer-name’で指定さ
れたプリンターで印刷します。

   最後に、もし‘lpr’によく似たものがある場合、変数‘lpr-command’を
‘"lpr"’にセットします。するとEmacsは他のシステムと同じように、印刷に
‘lpr’を使用します(そのプログラムの名前が‘lpr’でない場合は、
‘lpr-command’に適切な値をセットします)。‘lpr-command’が‘""’でないときに
、変数‘lpr-switches’は、その標準的な意味をもちます。変数‘printer-name’の
値が文字列のとき、Unixの場合のように、‘lpr’の‘-P’オプションの値としてそ
の文字列が使用されます。

   類似の変数‘ps-lpr-command’、‘ps-lpr-switches’、‘ps-printer-name’
(*note PostScript Variables::を参照してください)は、PostScriptファイルが
どのように印刷されるかを定義します。これらの変数は、上記で説明した非
PostScript印刷にたいする変数と同じ方法で使用されます。したがって非
PostScript印刷にたいして‘printer-name’が使用される方法と同様に、
‘ps-printer-name’の値はPostScript出力が送られるデバイス(またはファイル
)の名前として使用されます(2つの異なるポートに接続された2つのプリンターが
あり、それらの1つだけがPostScriptプリンターの場合、2つの個別の変数セット
をもつことができます)。

   変数‘ps-lpr-command’のデフォルト値は‘""’で、これはPostScript出力を
‘ps-printer-name’で指定されたプリンターポートに送りますが、
‘ps-lpr-command’にはPostScriptファイルを受け付けるプログラム名をセットす
ることもできます。したがって非PostScriptプリンターがある場合、この変数に
(Ghostscriptのような)PostScriptのインタープリタープログラムをセットでき
ます。インタープリタープログラムに渡す必要があるスイッチを指定するには、
‘ps-lpr-switches’を使用します(‘ps-printer-name’の値が文字列の場合、
‘-P’オプションにたいする値として、スイッチのリストが追加されます。これは
おそらく‘lpr’を使用する場合だけ有用なので、インタープリターを使用すると
きは‘ps-printer-name’に文字列以外の何かをセットすれば、無視させることが
できます)。

   たとえばシステムのデフォルトプリンターで、Ghostscriptを使用して印刷す
るには、以下を‘.emacs’に記述します:

     (setq ps-printer-name t)
     (setq ps-lpr-command "D:/gs6.01/bin/gswin32c.exe")
     (setq ps-lpr-switches '("-q" "-dNOPAUSE" "-dBATCH"
                             "-sDEVICE=mswinpr2"
                             "-sPAPERSIZE=a4"))

(Ghostscriptがディレクトリー‘D:/gs6.01’にインストールされていると仮定し
ます。)

   ---------- Footnotes ----------

   (1) ‘printer-name’の値は、スラッシュとバックスラッシュの両方でセット
できますが、‘net use’コマンドはUNC共有名がWindowsスタイルのバックスラッ
シュでタイプされるのを要求することに注意してください。


File: emacs.info,  Node: Windows Fonts,  Next: Windows Misc,  Prev: Windows Printing,  Up: Microsoft Windows

G.10 MS-Windowsでのフォント指定
===============================

Emacs23からは、フォントはフォント名、サイズ、オプションのプロパティーに
より指定されるようになりました。フォントを指定するフォーマットは、モダン
なフリーデスクトップで使用されているfontconfigライブラリーから由来してい
ます。

       [Family[-PointSize]][:Option1=Value1[:Option2=Value2[...]]]

   後方互換のため、古いXLFDベースのフォーマットもサポートされます。

   Emacs23以降では、いくつかのフォントバックエンドがサポートされています
。現在のところ、Windowsではバックエンドとして、‘gdi’と‘uniscribe’がサポ
ートされます。‘gdi’フォントバックエンドは、すべてのバージョンのWindowsで
利用でき、Windowsでネイティブにサポートされるすべてのフォントをサポート
します。‘uniscribe’フォントバックエンドはWindows 2000以降で利用でき、
TrueTypeフォントとOpenTypeフォントをサポートします。複雑なレイアウトを要
求するいくつかの言語は、Uniscribeバックエンドだけが正しくサポートできる
言語もあります。デフォルトでは、どちらのバックエンドもサポートされていれ
ば有効になり、‘gdi’より‘uniscribe’が優先されます。これをオーバーライドし
て、Uniscribeが利用できる場合もGDIバックエンドを使用するには、コマンドラ
イン引数‘-xrm Emacs.fontBackend:gdi’を指定してEmacsを呼び出すか、レジス
トリーのキー‘HKEY_CURRENT_USER\SOFTWARE\GNU\Emacs’または
‘HKEY_LOCAL_MACHINE\SOFTWARE\GNU\Emacs’のいずれかの下に、リソース
‘Emacs.fontBackend’を追加して値を‘gdi’にセットします(*note Resources::を
参照してください)。

以下は、MS-Windowsのすべてのフォントバックエンドにたいして一般的なオプシ
ョンのプロパティーです:

‘weight’
     フォントのweightを指定します。特別な値‘light’、‘medium’、
     ‘demibold’、‘bold’、‘black’は、‘weight=’を使わずに指定できます(例:
     ‘Courier New-12:bold’)。それ以外の場合、weightは100から900の数字か
     、‘font-weight-table’の中の名前のついたweightを指定します。指定され
     ない場合は、regularフォントが指定されたとみなします。

‘slant’
     フォントがitalicかどうかを指定します。特別な値‘roman’、‘italic’、
     ‘oblique’は、‘slant=’を使わずに指定できます(例: ‘Courier
     New-12:italic’)。それ以外の場合は、数字か、‘font-slant-table’内のな
     まえつきのslantの1つを指定します。Windowsでは、150を越える任意の
     slantはitalicとして扱われ、150以下のものはすべてromanとして扱われま
     す。

‘family’
     フォントファミリーを指定しますが、通常はフォント名の最初でファミリ
     ーを指定します。

‘pixelsize’
     フォントサイズをピクセルで指定します。これはファミリー名の後のポイ
     ントサイズ指定のかわりに使用することができます。

‘adstyle’
     そのフォントにたいする、追加のスタイル情報を指定します。
     MS-Windowsでは、値‘mono’、‘sans’、‘serif’、‘script’、‘decorative’が
     認識されます。これはフォントファミリーが指定されていない場合のフォ
     ールバックとして、もっとも有用です。

‘registry’
     そのフォントがカバーすることを期待される、文字セットregistryを指定
     します。ほとんどのTrueTypeフォントとOpenTypeフォントは、複数の国際
     化文字セット(national character sets)をカバーするUnicodeフォントで
     すが、ここで‘w32-charset-info-alist’から、特定の文字セットをサポー
     トするregistry指定を使用することにより、選択されるフォントを絞り込
     むことができます。

‘spacing’
     フォントがspacingされる方法を指定します。‘p’はプロポーショナルフォ
     ントを指定し、‘m’および‘c’はモノスペースフォントを指定します。

‘foundry’
     Windowsでは使用されませんが、情報的な目的のために、そしてこれをセッ
     トしようとするコードによる問題を防ぐため、ビットマップフォントでは
     ‘raster’、スケーラブルフォントでは‘outline’、どちらともタイプが特定
     できなかった場合は‘unknown’が、内部的にセットされます。

   Options specific to ‘GDI’ fonts:

‘script’
     そのフォントがサポートすべきUnicodeの部分範囲(subrange)を指定します
     。

     Windowsでは‘latin’、‘greek’、‘coptic’、‘cyrillic’、‘armenian’、
     ‘hebrew’、‘arabic’、‘syriac’、‘nko’、‘thaana’、‘devanagari’、
     ‘bengali’、‘gurmukhi’、‘gujarati’、‘oriya’、‘tamil’、‘telugu’、
     ‘kannada’、‘malayam’、‘sinhala’、‘thai’、‘lao’、‘tibetan’、
     ‘myanmar’、‘georgian’、‘hangul’、‘ethiopic’、‘cherokee’、
     ‘canadian-aboriginal’、‘ogham’、‘runic’、‘khmer’、‘mongolian’、
     ‘symbol’、‘braille’、‘han’、‘ideographic-description’、‘cjk-misc’、
     ‘kana’、‘bopomofo’、‘kanbun’、‘yi’、‘byzantine-musical-symbol’、
     ‘musical-symbol’、‘mathematical’のscriptが認識されます。

‘antialias’
     アンチエイリアシング(antialiasing)の方法を指定します。値‘none’は、
     アンチエイリアシングを行なわないことを意味します。‘standard’は、標
     準のアンチエイリアシングを使用することを意味します。‘subpixel’は、
     subpixelアンチエイリアシング(WindowsではCleartypeとして知られます
     )を使用することを意味します。‘natural’は、文字間のspacing調整つきで
     subpixelアンチエイリアシングを使用することを意味します。指定されな
     い場合、そのフォントはシステムのデフォルトのアンチエイリアシングを
     使用します。


File: emacs.info,  Node: Windows Misc,  Next: MS-DOS,  Prev: Windows Fonts,  Up: Microsoft Windows

G.11 その他のWindows固有の機能
==============================

このセクションでは、その他のWindows固有の機能を説明します。

   変数‘w32-use-visible-system-caret’は、システムカレット(system caret)を
可視にするか決定するフラグです。スクリーンリーダーソフトウェアーが使用さ
れていないときのデフォルトは‘nil’で、これはEmacsがポイント位置を示すため
に自分でカーソルを描画することを意味します。非‘nil’値は、Emacsがシステム
カレットでポイント位置を示すことを意味します。これはスクリーンリーダーソ
フトウェアーの使用を容易にし、そのようなソフトウェアーがEmacsの実行を検
知したときのデフォルトになります。この変数が非‘nil’の場合、カーソル表示
に影響を与える他の変数は効果がなくなります。

   変数‘w32-grab-focus-on-raise’が非‘nil’値にセットされている場合、フレ
ームがraiseされるときフォーカスを奪います。デフォルトは‘t’で、これは
Windowsのデフォルトのclick-to-focusポリシーに適合します。


File: emacs.info,  Node: MS-DOS,  Prev: Windows Misc,  Up: Microsoft Windows

G.12 EmacsとMS-DOS
==================

このセクションでは、EmacsをMS-DOS“オペレーティングシステム”(“MS-DOG”とし
ても知られています)で使用する際の特質を、簡単に説明します。 MS-DOSと
Microsoftの現在のオペレーティングシステムのWindows(“Losedows”としても知
られています)についての情報は、*note Microsoft Windows::の中にあります。

   EmacsをMS-DOSにたいしてビルドした場合、そのバイナリーはWindows 3.X、
Windows NT、Windows 9X/ME、Windows 2000/XP、またはOS/2でも、DOSアプリケ
ーションとして実行されます。MS-DOSにたいしてビルドされたEmacsを使用する
場合、このチャプターの内容は、それらすべてのシステムに適用されます。

   MS-DOS(およびWindows)でのテキストファイルにたいするEmacsの特別な処理
については、*note Text and Binary::を参照してください 。

* Menu:

* Keyboard: MS-DOS Keyboard.  MS-DOSでのキーボードの慣習。
* Mouse: MS-DOS Mouse.       MS-DOSでのマウスの慣習。
* Display: MS-DOS Display.   MS-DOSでのフォント、フレーム、ディスプレーのサイズ。
* Files: MS-DOS File Names.  MS-DOSでのファイル名の慣習。
* Printing: MS-DOS Printing.  MS-DOSでの印刷の特性。
* I18N: MS-DOS and MULE.     MS-DOSでの国際化のサポート。
* Processes: MS-DOS Processes.  MS-DOSでのサブプロセスの実行。


File: emacs.info,  Node: MS-DOS Keyboard,  Next: MS-DOS Mouse,  Up: MS-DOS

G.12.1 MS-DOSでのキーボードの使用方法
-------------------------------------

Emacsで<DEL>と呼ばれるキー(ほとんどのワークステーションでそれが指定され
ているのが由来です)は、PCでは<BS>(バックスペース)として知られています。
PC固有の端末の初期化で、<BS>が<DEL>として動作するよう再マップされるのは
、これが理由です。同じ理由により、<Delete>キーは‘C-d’として動作するよう
に、再マップされます。

   MS-DOSにたいしてビルドされたEmacsは、‘C-<Break>’を‘C-g’のような、中止
(quit)文字として認識します。新たな入力にたいして準備ができるまで、
‘C-g’をタイプしてもEmacsが検知できないのは、これが理由です。そのため、実
行中のコマンドを停止させるために、‘C-g’を使用することはできません (*note
Quitting::を参照してください)。 対照的に‘C-<Break>’は、(他のシステムでの
‘C-g’のように)、タイプされるとすぐに検知されるので、実行中のコマンドを停
止したり、緊急エスケープのために使用されます (*note Emergency Escape::を
参照してください)。

   PCのキーボードマップは、左<Alt>キーを<META>キーとして使用します。
<SUPER>キーと<HYPER>キーをエミュレートするために、2つの選択肢があります
。変数‘dos-hyper-key’および‘dos-super-key’に、1または2をセットすることに
より、右<Ctrl>キーと右<Alt>キーのどちらかを選択します。‘dos-super-key’と
‘dos-hyper-key’がどちらも1以外の場合、デフォルトにより右<Alt>キーも
<META>キーにマップされます。しかしMSｰDOSの国際化キーボードサポートプログ
ラム‘KEYB.COM’がインストールされている場合、非US配列のキーボードでは右
<Alt>は‘~’や‘@’のような文字を入力するために使用されるので、Emacsは右
<Alt>を<META>にマップしません。この場合、左<Alt>キーだけを<META>キーとし
て使用することになるでしょう。

   変数‘dos-keypad-mode’は、テンキーにより返されるキーコードを制御するフ
ラグ変数です。以下の行を‘_emacs’ファイルに記述して、テンキーの<ENTER>キ
ーを、‘C-j’のように定義することもできます:

     ;; Make the <ENTER> key from the numeric keypad act as ‘C-j’.
     (define-key function-key-map [kp-enter] [?\C-j])


File: emacs.info,  Node: MS-DOS Mouse,  Next: MS-DOS Display,  Prev: MS-DOS Keyboard,  Up: MS-DOS

G.12.2 MS-DOSでびマウスの使用方法
---------------------------------

MS-DOSのEmacsはマウスをサポートします(デフォルト端末のみ)。メニューやメ
ニューバーの使用を含めて、マウスコマンドはドキュメントされているように機
能します (*note Menu Bar::を参照してください)。 MS-DOSのEmacsではスクロ
ールバーは機能しません。PCマウスには通常2つしかボタンがありません。これ
らは‘Mouse-1’、‘Mouse-2’として機能しますが、これらのボタンを一緒に押すと
、‘Mouse-3’の効果をもちます。マウスにボタンが3つある場合、Emacsは開始時
にそれを検知し、Xのようにすべての3ボタンは通常のように機能します。

   メニューアイテムの上にマウスポインターが移動すると、メニューバーとポ
ップアップメニューにたいするヘルプ文字列が、エコーエリアに表示されます。
マウスに反応するテキストはハイライト (*note Mouse References::を参照して
ください) もサポートされます。

   マウスドライバーのいくつかのバージョンは、マウスのボタン数を正しく報
告しません。たとえばホイールつきのマウスは3つボタンがあると報告されます
が、Emacsに渡されるのはそのうち2つだけです。真ん中のボタンとして使用され
るホイールのクリックも渡されません。このような場合、マウスボタンがいくつ
あるかEmacsに指示するために、‘M-x msdos-set-mouse-buttons’コマンドを使用
できます。initファイル‘_emacs’に以下の行を追加することにより、そのような
セッティングを永続化できます:

     ;; Treat the mouse like a 2-button mouse.
     (msdos-set-mouse-buttons 2)

   MS-DOSにたいしてビルドされたEmacsは、Windows上で実行されているときは
、クリップボード操作をサポートします。killリングにテキストを置くコマンド
、またはkillリングからテキストをyankするコマンドは、EmacsがXウィンドウシ
ステムで行なうように、最初にWindowsのクリップボードをチェックします
(*note Mouse Commands::を参照してください)。 Windows上でのMS-DOS版の
Emacsは、プライマリー選択とカットバッファーだけをサポートします。セカン
ダリー選択は常に空になります。

   クリップボードに対するアクセス方法はWindowsにより実装されているため、
クリップボードに置くことができるテキストの長さは、Emacsが利用可能なDOSメ
モリー量により制限されます。通常はクリップボードに最大620KBのテキストを
置くことができますが、この制限はシステム設定に依存し、Emacsを他のプログ
ラムのサブプロセスとして実行している場合は、もっと少なくなります。killし
たテキストが一致しない場合、Emacsはその旨を告げるメッセージを出力して、
クリップボードにテキストを置きません。

   ヌル文字をWindowsクリップボードに置くこともできません。killされたテキ
ストにヌル文字が含まれる場合、Emacsはそのようなテキストをクリップボード
に置かず、その結果にたいするメッセージをエコーエリアに表示します。

   変数‘dos-display-scancodes’が非‘nil’の場合、Emacsは各キーストロークの
ASCII値とキーボードのスキャンコードを表示します。この機能は、デバッグの
ための‘view-lossage’コマンドを補足するためのものです。


File: emacs.info,  Node: MS-DOS Display,  Next: MS-DOS File Names,  Prev: MS-DOS Mouse,  Up: MS-DOS

G.12.3 MS-DOSでの表示
---------------------

MS-DOSのディスプレーでは、boldやitalicのようなフォントの変種が使用できま
せんが、複数のフェイスをサポートしており、それぞれのフェイスでフォアグラ
ウンドとバックグラウンドのカラーを指定できます。したがってm異なるカラー
を使用するために関連するフェイスを定義することにより、フォントを使用する
Emacsパッケージ(‘font-lock’やEnriched Textモードなそ)の完全な機能を使用
することができます。利用できるカラーとフェイスと、それらの外観を確認する
には、‘list-colors-display’コマンド (*note Colors::を参照してください) 、
および‘list-faces-display’ (*note Faces::を参照してください) を使用して
ください。

   DOSディスプレーでネイティブにサポートされていないグリフと文字を
Emacsが表示する方法については、このチャプターの後のほうの、*note MS-DOS
and MULE::を参照してください。

   Emacsを開始したとき、Emacsはカーソルの形状を塗りつぶしたボックスに変
更します。他のシステムではボックスカーソルがEmacsのデフォルトなので、こ
れは互換性のためです。デフォルトのカーソル形状は、変数
‘default-frame-alist’の中の‘cursor-type’パラメーターでbarを指定すること
により変更できます (*note Creating Frames::を参照してください)。 MS-DOS端
末は垂直バーのカーソルをサポートしないので、カーソルは水平バーになり、フ
レームのパラメターで‘WIDTH’パラメーターが指定された場合、それは実際には
水平バーの高さになります。この理由により、MS-DOSではカーソルタイプ
‘bar’と‘hbar’は同じ効果を生みます。拡張として、以下のようにして、バーカ
ーソル指定にはwidthと同様に、カーソルが行を読み取る開始位置を含めること
ができます:

      '(cursor-type bar WIDTH . START)

これに加えて、WIDTHパラメーターが負の場合、カーソルバーはその文字セルの
最上部から開始されます。

   MS-DOS端末は1度に1つのフレームだけを表示できます。MS-DOSで動作する
Emacsのフレーム機能は、Emacsがテキスト端末で動作する場合と同じように機能
します (*note Frames::を参照してください)。 MS-WindowsでDOS窓からEmacsを
実行した場合、フルスクリーンより小さい可視フレームを作成できますが、それ
でもEmacsは1度に1つのフレームしか表示できません。

   ‘dos-mode4350’コマンドはディスプレーを43行または50行に切り替え、それ
はハードウェアーに依存します。‘dos-mode25’コマンドはスクリーンサイズをデ
フォルトの80x25に切り替えます。

   デフォルトではEmacsが理解するするスクリーンサイズは、列を80列、行を
25、28、35、40、43、50行にセットする方法だけです。しかしビデオアダプター
が、ディスプレーを他のサイズに切り替える特別なビデオモードをもつ場合、
Emacsもそれをサポートするようにできます。EmacsにフレームをN行M列のサイズ
に切り替えるように指示した場合、Emacsは‘screen-dimensions-NxM’という名前
があるかチェックして、もしあれば切り替えるビデオモードの値(整数でなけれ
ばなりません)としてそれを使用します(Emacsは‘AL’レジスターに
‘screen-dimensions-NxM’の値をセットして、BIOS関数の‘Set Video Mode’を呼
び出すことによりそのビデオモードに切り替えます)。たとえばビデオアダプタ
ーがビデオモードを85にしたとき、サイズ66x80に切り替わるとしましょう。そ
の場合、以下を‘_emacs’ファイルに記述して、Emacsにそれをサポートさせるこ
とができます:

     (setq screen-dimensions-66x80 85)

   MS-DOSのEmacsは特定のサポートされたフレームサイズだけしかセットできな
いので、可能性のあるすべてのフレームのサイズ変更要求に従うことはできませ
ん。サポートされていないサイズが要求された場合、Emacsは指定されたサイズ
を越える、次に大きなサポートされたサイズを選択します。この場合、たとえば
36x80フレームを要求して、かわりに40x80を得ることになります。

   変数‘screen-dimensions-NxM’は、指定されたサイズに正確にマッチするとき
だけ使用され、サポートされた次に大きなサイズを検索するときには、無視され
ます。上記の例ではVGAは38x80のサイズをサポートし、
‘screen-dimensions-38x80’を適切な値で定義していても、36x80フレームを要求
すると40x80のスクリーンになります。この場合サイズを38x80にするには、
‘screen-dimensions-36x80’という名前の変数に、‘screen-dimensions-38x80’と
同じビデオもーどの値をセットして、これを行なうことができます。

   MS-DOSでフレームサイズを変更すると、他のすべてのフレームも新しいサイ
ズに変更されます。


File: emacs.info,  Node: MS-DOS File Names,  Next: MS-DOS Printing,  Prev: MS-DOS Display,  Up: MS-DOS

G.12.4 MS-DOSでのファイル名
---------------------------

MS-DOSでは、ファイル名は大文字小文字を区別せず8文字に制限され、それに加
えてオプションでピリオドと追加の3文字を使用できます。Emacsは他のオペレー
ティングシステムで、ファイル名を処理するためのこれらの制限を充分認識して
います。たとえばファイル名の前のドット‘.’はMS-DOSでは無効なので、Emacsは
それらを透過的にアンダースコアー‘_’に変換します。したがって、MS-DOSでは
デフォルトのinitファイル (*note Init File::を参照してください) は
‘_emacs’と呼ばれます。ピリオドの前後の余分な文字は、一般的にMS-DOS自身に
より無視されます。したがってファイル‘LongFileName.EvenLongerExtension’を
visitした場合、それは暗黙に‘longfile.eve’となりますが、それでもEmacsはモ
ードラインに長いファイル名を表示し続けます。それ以外ではMS-DOSで有効なフ
ァイル名を指定するのはユーザーの責任です。上記の透過的な変換は、Emacsに
組み込まれたファイル名だけにたいして機能します。

   MS-DOSでのファイル名にたいする上記の制限は、オリジナルのファイル名の
文字を失うことなしにバックアップファイルの名前を構築するのを、ほとんど不
可能にします (*note Backup Names::を参照してください)。 たとえば
‘docs.txt’というファイルにたいするバックアップファイルの名前は、単一のバ
ックアップを使用しているときでさえ‘docs.tx~’になります。

   Windows 9X、Windows ME、Windows 2000/XPでEmacsをDOSアプリケーションと
して実行する場合、長いファイル名のサポートをオンに切り替えることができま
す。これを行なうと、Emacsはファイル名を切り詰めたり、ファイル名を小文字
に変換するかわりに、指定された文字通りのファイル名を使用します。長いファ
イル名のサポートを有効にするには、Emacsを開始する前に、環境変数‘LFN’を
‘y’にセットします。残念なことにWindows NTはDOSプログラムが長いファイル名
にアクセスすることを許さないので、MS-DOSにたいしてビルドされたEmacsは、
短い8+3のエイリアスだけを見ることになります。

   MS-DOSにはホームディレクトリーという概念がないので、MS-DOS上のEmacsは
Emacsがインストールされた場所が、環境変数‘HOME’の値であるかのように振る
舞います。つまりEmacsのバイナリー‘emacs.exe’がディレクトリー
‘c:/utils/emacs/bin’にある場合、Emacsは‘HOME’が‘c:/utils/emacs’にセット
されているかのように動作します。この場所は特に、Emacsがinitファイル
‘_emacs’を探す場所でもあります。これを念頭におけば、GNUやUnixのように、
ファイル名の中で‘~’をホームディレクトリーのエイリアスとして使用できます
。Emacsを開始する前に、その環境で‘HOME’変数をセットすることもできます。
この変数の値は、上記のデフォルトの振る舞いをオーバーライドします。

   MS-DOSのEmacsは、‘/dev’というディレクトリー名を特別に使います。なぜな
らGJGPPのエミュレーターライブラリーの機能は、I/Oデバイスの名前がそのディ
レクトリーにあるかのように振る舞うからです。わたしたちは任意のディスクに
たいして、‘/dev’という名前のディレクトリーの使用を避けることを推奨します
。


File: emacs.info,  Node: MS-DOS Printing,  Next: MS-DOS and MULE,  Prev: MS-DOS File Names,  Up: MS-DOS

G.12.5 印刷とMS-DOS
-------------------

‘lpr-buffer’ (*note Printing::を参照してください)や、‘ps-print-buffer’
(*note PostScript::を参照してください) のようなコマンドは、Posixスタイル
の‘lpr’プログラムが利用できない場合、出力を1つのプリンターポートに送るこ
とにより、MS-DOSで機能します。同じEmacs変数がすべてのシステムでの印刷を
制御しますが、MS-DOSでは異なるデフォルト値をもつ場合もあります。

   ネットワークプリンターでの印刷のセットアップに関する詳細は、*note
Windows Printing::を参照してください 。

   プリンターが同じlocaleにたいして異なるエンコーディングを使用する
Windows機に接続されている場合にも、非ASCIIテキストのDOSコードページによ
るエンコーディングを期待するプリンターがいくつかあります。たとえば
localeがLatin-1のとき、Windowsはコードページ1252を使用しますが、DOSはコ
ードページ850を使用します。*note MS-DOS and MULE::を参照してください。
Windowsからそのようなプリンターで印刷する場合、‘M-x lpr-buffer’の前に、
‘C-x <RET> c’ (‘universal-coding-system-argument’)を使用することができま
す。その場合、Emacsは指定したDOSコードページにテキストを変換します。たと
えば‘C-x <RET> c cp850-dos <RET> M-x lpr-region <RET>’は、リージョンをコ
ードページ850のエンコーディングに変換して印刷します。

   MS-DOSでは後方互換のため、‘dos-printer’ (‘dos-ps-printer’)に値がセッ
トされている場合、‘printer-name’ (‘ps-printer-name’)の値をオーバーライド
します。


File: emacs.info,  Node: MS-DOS and MULE,  Next: MS-DOS Processes,  Prev: MS-DOS Printing,  Up: MS-DOS

G.12.6 MS-DOSでの国際化サポート
-------------------------------

MS-DOSのEmacsは、異なる文字セット同士を変換するためのコーディングシステ
ムを含む、GNU、Unix、その他のプラットフォームでサポートされているのと同
じ国際化文字セットをサポートします (*note International::を参照してくだ
さい)。 しかしMS-DOSと、MS-Windowsや他のシステムとの間の非互換により、こ
のサポートには知っておくべきいくつかのDOS特有の状況があります。このセク
ションではこれらの状況について説明します。

   以下の説明では、主にEmacsのMS-DOSポートについて、特に経験豊富な
Emacsユーザーにとって密接に関係する部分について説明します。

‘M-x dos-codepage-setup’
     カレントDOSコードページにたいして、適切なEmacsディスプレーとコーデ
     ィングシステムをセットアップします。

   MS-DOSは常に256文字の文字セットをサポートするようにデザインされていま
すが、それからさまざまな文字セットを選択できます。選択できる文字セットは
“DOSコードページ”として知られます。各コードページはすべて128文字の
ASCII文字を含みますが、それ以外の128文字(コード128から255)は、コードペー
ジごとに異なります。各コードページは850、862のように3桁の数字で識別され
ます。

   同時に複数のフォントを使用できるXとは対照的に、通常MS-DOSは1つのセッ
ションで複数のコードページを使用できません。MS-DOSはシステムの開始時に
1つのコードページをロードするようにデザインされており、それを変更するに
は再起動が必要です(1)。MS-Windowsのような他のシステムでDOSの実行可能ファ
イルを実行するときも、ほぼ同じ制限が適用されます。

   MS-DOSでのマルチバイト処理にたいして、Emacsは選択されたDOSコードペー
ジで表示できる文字を知る必要があります。そのため起動後に、選択されたコー
ドページ番号を得るためにシステムに問い合わせを行い、その番号を変数
‘dos-codepage’に格納します。実際のコードページは異なっていても、カレント
コードページにたいしてデフォルト値437を返すシステムがいくつかあります(通
常これはディスプレーハードウェアーに組み込まれているコードページを使用し
ているとき発生します)。initファイルで変数‘dos-codepage’をセットすること
により、Emacsに別のコードページを指定できます。

   マルチバイトのEmacsは特定のDOSコードページ — 日本語コードページ932の
ような極東アジアのスクリプトを表示できるものや、1つのISO 8859文字セット
をエンコードするものがあります。

   極東アジアのコードページは、それらの国々にたいするMULE文字セットの1つ
を直接表示できるので、Emacsはそのコードページでサポートされる適切な端末
コーディングシステムを使用するためにセットアップを行なうだけです。このセ
クションの残りの部分で説明する特別な機能は、主にISO 8859文字セットをエン
コードするコードページに関するものです。

   ISO文字セットの1つに対応するコードページにたいして、Emacsはそのコード
ページ番号にもとづいた文字セットを認識します。Emacsは、カレントコードペ
ージを使用したファイルの読み書きをサポートするためのコーディングシステム
を自動的に作成して、そのコーディングシステムをデフォルトとして使用します
。このコーディングシステムの名前は‘cpNNN’で、NNNはコードページ番号です。
(2)

   ‘cpNNN’というコーディングシステムはすべて、モードラインのニーモニック
に文字‘D’ (“DOS”)を使用します。端末のコーディングシステムと、ファイル
I/Oにたいするデフォルトのコーディングシステムは、開始時に適切な‘cpNNN’コ
ーディングシステムにセットされているので、普通はMS-DOSのモードラインは
‘-DD\-’で始まります。 *note Mode Line::を参照してください。 極東アジアの
DOS端末は‘cpNNN’コーディングシステムを使用しないので、Emacsデフォルトの
モードラインが初期表示されます。

   コードページ番号は使用しているスクリプトも示すので、Emacsはそのスクリ
プトにたいする言語環境を選択するために、自動的に
‘set-language-environment’を実行します (*note Language Environments::を
参照してください)。

   バッファーにISO 8859文字セット以外の文字が含まれていて、それが選択さ
れたDOSコードページでサポートされていない場合、EmacsはASCII文字のシーケ
ンスを使用して、それを表示します。たとえばカレントコードページが文字
‘ò’(grave accentつきの小文字の‘o’)にたいするグリフをもたない場合、その文
字は‘{`o}’と表示されます。ここで中カッコ(braces)はそれが1つの文字である
ことを示す指標です(これはギリシャ文字やヘブライのアルファベットのような
非ラテン文字にたいして不格好に見えるかもしれませんが、その言語を知る人は
これを読むことができます)。その文字がスクリーンの複数列を占めていても、
それは単なる1つの文字であり、Emacsコマンドは、それを1文字として扱います
。

   MS-Windowsは独自のコードページを提供し、同じロケールにたいするDOSコー
ドページとは異なります。たとえばDOSコードページと同じ文字をサポートする
Windowsコードページは1252で、DOSコードページ855と同じ文字をサポートする
Windowsコードページは1252、などです。EmacsのMS-Windowsバージョンを
‘-nw’オプションで呼び出したとき、Emacsはカレントコードページを使用して表
示を行ないます。

   ---------- Footnotes ----------

   (1) 通常1つの特定のコードページがディスプレーメモリーに組み込まれてい
て、‘CONFIG.SYS’のようなシステム設定ファイルを変更して再起動することによ
り他のコードページをインストールできます。再起動なしでコードページを変更
できるサードパーティーのソフトウェアーもありますが、ここでは普通の
MS-DOSシステムが振る舞う方法を説明します。

   (2) ISO 8859にたいすEmacsの標準コーディングシステムは、この目的に完全
に沿っているとは言えません。なぜならDOSコードページは通常、標準ISO文字コ
ードにマッチしないからです。たとえば文字‘ç’(cedillaつきの‘c’)は標準
Latin-1文字セットのコード231ですが、それに対応するDOSコードページ850はこ
のグリフにコード135を使用します。


File: emacs.info,  Node: MS-DOS Processes,  Prev: MS-DOS and MULE,  Up: MS-DOS

G.12.7 MS-DOSでのサブプロセス
-----------------------------

MS-DOSは単一プロセスの“オペレーティングシステム”なので、非同期サブプロセ
スは利用できません。特にShellモードと、その変種は機能しません。非同期サ
ブプロセスを使用するEmacs機能のほとんどは、ShellモードやGUDを含めて、
MS-DOSでは動作しません。疑わしいときは、コマンドを実行してみれば、機能し
ない場合は非同期プロセスがサポートされない旨を告げるメッセージが出力され
ます。

   ‘M-x compile’によるEmacsでのコンパイル、‘M-x grep’によるファイル検索
、‘M-x diff’によるファイル間の相違の表示は、同期的に内部プロセスを実行す
ることにより機能します。これはその内部プロセスが終了するまで、編集を行な
うことができないことを意味します。

   ‘ispell’プログラムの同期呼び出しにたいする特別なサポートにより、スペ
ルチェックも機能します。これは他のプラットフォームでの非同期呼び出しより
遅くなります。

   MS-DOSでは、機能しないShellモードのかわりに、‘M-x eshell’コマンドを使
用することができます。これはPosix-likeなシェルを、Emacs Lispで実装した
Eshellパッケージを呼び出します。

   対照的に、ネイティブなWindowsアプリケーションとしてコンパイルされた
Emacsは、非同期サブプロセスを*サポートします* *note Windows Processes::を
参照してください。

   ‘lpr-buffer’ (*note Printing::を参照してください)と、
‘ps-print-buffer’ (*note PostScript::を参照してください)は、プリンターポ
ートの1つに出力を送ることにより、MS-DOSでも機能します。*note MS-DOS
Printing::を参照してください。

   MS-DOSでサブプロセスを同期実行する場合は、そのプログラムが終了するこ
とと、そのプログラムがキーボード入力の読み取りを試みないことを確認してく
ださい。プログラムが自分で終了しない場合、それを終了させることはできませ
ん。なぜならMS-DOSはプロセスを終了させる一般的な方法を提供しないからです
。このような場合、‘C-c’や‘C-<Break>’を押すことが助けになる場合もあります
。

   MS-DOSでは、他のマシンにあるファイルへのアクセスもサポートされません
。何らかのネットワークリダイレクト処理により、MS-DOSにネットワークアクセ
ス機能が組み込まれていない限り、メール送信、ウェブ閲覧、リモートログイン
などのようなネットワーク指向のコマンドは機能しません。

   MS-DOSのDiredは‘ls-lisp’パッケージを使用します (*note ls in Lisp::を
参照してください)。 したがってMS-DOSのDiredは、変数
‘dired-listing-switches’に記述できる、利用可能なオプションは限られます。
機能するオプションは‘-A’、‘-a’、‘-c’、‘-i’、‘-r’、‘-S’、‘-s’、‘-t’、
‘-u’です。


File: emacs.info,  Node: Manifesto,  Next: Glossary,  Prev: Microsoft Windows,  Up: Top

The GNU Manifesto
*****************

     The GNU Manifesto which appears below was written by Richard
     Stallman at the beginning of the GNU project, to ask for
     participation and support.  For the first few years, it was updated
     in minor ways to account for developments, but now it seems best to
     leave it unchanged as most people have seen it.

     Since that time, we have learned about certain common
     misunderstandings that different wording could help avoid.
     Footnotes added in 1993 help clarify these points.

     For up-to-date information about available GNU software, please see
     our web site, <http://www.gnu.org>.  For software tasks and other
     ways to contribute, see <http://www.gnu.org/help>.

What’s GNU? Gnu’s Not Unix!
===========================

GNU, which stands for Gnu’s Not Unix, is the name for the complete
Unix-compatible software system which I am writing so that I can give it
away free to everyone who can use it.(1)  Several other volunteers are
helping me.  Contributions of time, money, programs and equipment are
greatly needed.

   So far we have an Emacs text editor with Lisp for writing editor
commands, a source level debugger, a yacc-compatible parser generator, a
linker, and around 35 utilities.  A shell (command interpreter) is
nearly completed.  A new portable optimizing C compiler has compiled
itself and may be released this year.  An initial kernel exists but many
more features are needed to emulate Unix.  When the kernel and compiler
are finished, it will be possible to distribute a GNU system suitable
for program development.  We will use TeX as our text formatter, but an
nroff is being worked on.  We will use the free, portable X window
system as well.  After this we will add a portable Common Lisp, an
Empire game, a spreadsheet, and hundreds of other things, plus on-line
documentation.  We hope to supply, eventually, everything useful that
normally comes with a Unix system, and more.

   GNU will be able to run Unix programs, but will not be identical to
Unix.  We will make all improvements that are convenient, based on our
experience with other operating systems.  In particular, we plan to have
longer file names, file version numbers, a crashproof file system, file
name completion perhaps, terminal-independent display support, and
perhaps eventually a Lisp-based window system through which several Lisp
programs and ordinary Unix programs can share a screen.  Both C and Lisp
will be available as system programming languages.  We will try to
support UUCP, MIT Chaosnet, and Internet protocols for communication.

   GNU is aimed initially at machines in the 68000/16000 class with
virtual memory, because they are the easiest machines to make it run on.
The extra effort to make it run on smaller machines will be left to
someone who wants to use it on them.

   To avoid horrible confusion, please pronounce the ‘G’ in the word
‘GNU’ when it is the name of this project.

Why I Must Write GNU
====================

I consider that the golden rule requires that if I like a program I must
share it with other people who like it.  Software sellers want to divide
the users and conquer them, making each user agree not to share with
others.  I refuse to break solidarity with other users in this way.  I
cannot in good conscience sign a nondisclosure agreement or a software
license agreement.  For years I worked within the Artificial
Intelligence Lab to resist such tendencies and other inhospitalities,
but eventually they had gone too far: I could not remain in an
institution where such things are done for me against my will.

   So that I can continue to use computers without dishonor, I have
decided to put together a sufficient body of free software so that I
will be able to get along without any software that is not free.  I have
resigned from the AI lab to deny MIT any legal excuse to prevent me from
giving GNU away.

Why GNU Will Be Compatible with Unix
====================================

Unix is not my ideal system, but it is not too bad.  The essential
features of Unix seem to be good ones, and I think I can fill in what
Unix lacks without spoiling them.  And a system compatible with Unix
would be convenient for many other people to adopt.

How GNU Will Be Available
=========================

GNU is not in the public domain.  Everyone will be permitted to modify
and redistribute GNU, but no distributor will be allowed to restrict its
further redistribution.  That is to say, proprietary modifications will
not be allowed.  I want to make sure that all versions of GNU remain
free.

Why Many Other Programmers Want to Help
=======================================

I have found many other programmers who are excited about GNU and want
to help.

   Many programmers are unhappy about the commercialization of system
software.  It may enable them to make more money, but it requires them
to feel in conflict with other programmers in general rather than feel
as comrades.  The fundamental act of friendship among programmers is the
sharing of programs; marketing arrangements now typically used
essentially forbid programmers to treat others as friends.  The
purchaser of software must choose between friendship and obeying the
law.  Naturally, many decide that friendship is more important.  But
those who believe in law often do not feel at ease with either choice.
They become cynical and think that programming is just a way of making
money.

   By working on and using GNU rather than proprietary programs, we can
be hospitable to everyone and obey the law.  In addition, GNU serves as
an example to inspire and a banner to rally others to join us in
sharing.  This can give us a feeling of harmony which is impossible if
we use software that is not free.  For about half the programmers I talk
to, this is an important happiness that money cannot replace.

How You Can Contribute
======================

I am asking computer manufacturers for donations of machines and money.
I’m asking individuals for donations of programs and work.

   One consequence you can expect if you donate machines is that GNU
will run on them at an early date.  The machines should be complete,
ready to use systems, approved for use in a residential area, and not in
need of sophisticated cooling or power.

   I have found very many programmers eager to contribute part-time work
for GNU.  For most projects, such part-time distributed work would be
very hard to coordinate; the independently-written parts would not work
together.  But for the particular task of replacing Unix, this problem
is absent.  A complete Unix system contains hundreds of utility
programs, each of which is documented separately.  Most interface
specifications are fixed by Unix compatibility.  If each contributor can
write a compatible replacement for a single Unix utility, and make it
work properly in place of the original on a Unix system, then these
utilities will work right when put together.  Even allowing for Murphy
to create a few unexpected problems, assembling these components will be
a feasible task.  (The kernel will require closer communication and will
be worked on by a small, tight group.)

   If I get donations of money, I may be able to hire a few people full
or part time.  The salary won’t be high by programmers’ standards, but
I’m looking for people for whom building community spirit is as
important as making money.  I view this as a way of enabling dedicated
people to devote their full energies to working on GNU by sparing them
the need to make a living in another way.

Why All Computer Users Will Benefit
===================================

Once GNU is written, everyone will be able to obtain good system
software free, just like air.(2)

   This means much more than just saving everyone the price of a Unix
license.  It means that much wasteful duplication of system programming
effort will be avoided.  This effort can go instead into advancing the
state of the art.

   Complete system sources will be available to everyone.  As a result,
a user who needs changes in the system will always be free to make them
himself, or hire any available programmer or company to make them for
him.  Users will no longer be at the mercy of one programmer or company
which owns the sources and is in sole position to make changes.

   Schools will be able to provide a much more educational environment
by encouraging all students to study and improve the system code.
Harvard’s computer lab used to have the policy that no program could be
installed on the system if its sources were not on public display, and
upheld it by actually refusing to install certain programs.  I was very
much inspired by this.

   Finally, the overhead of considering who owns the system software and
what one is or is not entitled to do with it will be lifted.

   Arrangements to make people pay for using a program, including
licensing of copies, always incur a tremendous cost to society through
the cumbersome mechanisms necessary to figure out how much (that is,
which programs) a person must pay for.  And only a police state can
force everyone to obey them.  Consider a space station where air must be
manufactured at great cost: charging each breather per liter of air may
be fair, but wearing the metered gas mask all day and all night is
intolerable even if everyone can afford to pay the air bill.  And the TV
cameras everywhere to see if you ever take the mask off are outrageous.
It’s better to support the air plant with a head tax and chuck the
masks.

   Copying all or parts of a program is as natural to a programmer as
breathing, and as productive.  It ought to be as free.

Some Easily Rebutted Objections to GNU’s Goals
==============================================

     “Nobody will use it if it is free, because that means they can’t
     rely on any support.”

     “You have to charge for the program to pay for providing the
     support.”

   If people would rather pay for GNU plus service than get GNU free
without service, a company to provide just service to people who have
obtained GNU free ought to be profitable.(3)

   We must distinguish between support in the form of real programming
work and mere handholding.  The former is something one cannot rely on
from a software vendor.  If your problem is not shared by enough people,
the vendor will tell you to get lost.

   If your business needs to be able to rely on support, the only way is
to have all the necessary sources and tools.  Then you can hire any
available person to fix your problem; you are not at the mercy of any
individual.  With Unix, the price of sources puts this out of
consideration for most businesses.  With GNU this will be easy.  It is
still possible for there to be no available competent person, but this
problem cannot be blamed on distribution arrangements.  GNU does not
eliminate all the world’s problems, only some of them.

   Meanwhile, the users who know nothing about computers need
handholding: doing things for them which they could easily do themselves
but don’t know how.

   Such services could be provided by companies that sell just
hand-holding and repair service.  If it is true that users would rather
spend money and get a product with service, they will also be willing to
buy the service having got the product free.  The service companies will
compete in quality and price; users will not be tied to any particular
one.  Meanwhile, those of us who don’t need the service should be able
to use the program without paying for the service.

     “You cannot reach many people without advertising, and you must
     charge for the program to support that.”

     “It’s no use advertising a program people can get free.”

   There are various forms of free or very cheap publicity that can be
used to inform numbers of computer users about something like GNU.  But
it may be true that one can reach more microcomputer users with
advertising.  If this is really so, a business which advertises the
service of copying and mailing GNU for a fee ought to be successful
enough to pay for its advertising and more.  This way, only the users
who benefit from the advertising pay for it.

   On the other hand, if many people get GNU from their friends, and
such companies don’t succeed, this will show that advertising was not
really necessary to spread GNU.  Why is it that free market advocates
don’t want to let the free market decide this?(4)

     “My company needs a proprietary operating system to get a
     competitive edge.”

   GNU will remove operating system software from the realm of
competition.  You will not be able to get an edge in this area, but
neither will your competitors be able to get an edge over you.  You and
they will compete in other areas, while benefiting mutually in this one.
If your business is selling an operating system, you will not like GNU,
but that’s tough on you.  If your business is something else, GNU can
save you from being pushed into the expensive business of selling
operating systems.

   I would like to see GNU development supported by gifts from many
manufacturers and users, reducing the cost to each.(5)

     “Don’t programmers deserve a reward for their creativity?”

   If anything deserves a reward, it is social contribution.  Creativity
can be a social contribution, but only in so far as society is free to
use the results.  If programmers deserve to be rewarded for creating
innovative programs, by the same token they deserve to be punished if
they restrict the use of these programs.

     “Shouldn’t a programmer be able to ask for a reward for his
     creativity?”

   There is nothing wrong with wanting pay for work, or seeking to
maximize one’s income, as long as one does not use means that are
destructive.  But the means customary in the field of software today are
based on destruction.

   Extracting money from users of a program by restricting their use of
it is destructive because the restrictions reduce the amount and the
ways that the program can be used.  This reduces the amount of wealth
that humanity derives from the program.  When there is a deliberate
choice to restrict, the harmful consequences are deliberate destruction.

   The reason a good citizen does not use such destructive means to
become wealthier is that, if everyone did so, we would all become poorer
from the mutual destructiveness.  This is Kantian ethics; or, the Golden
Rule.  Since I do not like the consequences that result if everyone
hoards information, I am required to consider it wrong for one to do so.
Specifically, the desire to be rewarded for one’s creativity does not
justify depriving the world in general of all or part of that
creativity.

     “Won’t programmers starve?”

   I could answer that nobody is forced to be a programmer.  Most of us
cannot manage to get any money for standing on the street and making
faces.  But we are not, as a result, condemned to spend our lives
standing on the street making faces, and starving.  We do something
else.

   But that is the wrong answer because it accepts the questioner’s
implicit assumption: that without ownership of software, programmers
cannot possibly be paid a cent.  Supposedly it is all or nothing.

   The real reason programmers will not starve is that it will still be
possible for them to get paid for programming; just not paid as much as
now.

   Restricting copying is not the only basis for business in software.
It is the most common basis because it brings in the most money.  If it
were prohibited, or rejected by the customer, software business would
move to other bases of organization which are now used less often.
There are always numerous ways to organize any kind of business.

   Probably programming will not be as lucrative on the new basis as it
is now.  But that is not an argument against the change.  It is not
considered an injustice that sales clerks make the salaries that they
now do.  If programmers made the same, that would not be an injustice
either.  (In practice they would still make considerably more than
that.)

     “Don’t people have a right to control how their creativity is
     used?”

   “Control over the use of one’s ideas” really constitutes control over
other people’s lives; and it is usually used to make their lives more
difficult.

   People who have studied the issue of intellectual property rights(6)
carefully (such as lawyers) say that there is no intrinsic right to
intellectual property.  The kinds of supposed intellectual property
rights that the government recognizes were created by specific acts of
legislation for specific purposes.

   For example, the patent system was established to encourage inventors
to disclose the details of their inventions.  Its purpose was to help
society rather than to help inventors.  At the time, the life span of 17
years for a patent was short compared with the rate of advance of the
state of the art.  Since patents are an issue only among manufacturers,
for whom the cost and effort of a license agreement are small compared
with setting up production, the patents often do not do much harm.  They
do not obstruct most individuals who use patented products.

   The idea of copyright did not exist in ancient times, when authors
frequently copied other authors at length in works of non-fiction.  This
practice was useful, and is the only way many authors’ works have
survived even in part.  The copyright system was created expressly for
the purpose of encouraging authorship.  In the domain for which it was
invented—books, which could be copied economically only on a printing
press—it did little harm, and did not obstruct most of the individuals
who read the books.

   All intellectual property rights are just licenses granted by society
because it was thought, rightly or wrongly, that society as a whole
would benefit by granting them.  But in any particular situation, we
have to ask: are we really better off granting such license?  What kind
of act are we licensing a person to do?

   The case of programs today is very different from that of books a
hundred years ago.  The fact that the easiest way to copy a program is
from one neighbor to another, the fact that a program has both source
code and object code which are distinct, and the fact that a program is
used rather than read and enjoyed, combine to create a situation in
which a person who enforces a copyright is harming society as a whole
both materially and spiritually; in which a person should not do so
regardless of whether the law enables him to.

     “Competition makes things get done better.”

   The paradigm of competition is a race: by rewarding the winner, we
encourage everyone to run faster.  When capitalism really works this
way, it does a good job; but its defenders are wrong in assuming it
always works this way.  If the runners forget why the reward is offered
and become intent on winning, no matter how, they may find other
strategies—such as, attacking other runners.  If the runners get into a
fist fight, they will all finish late.

   Proprietary and secret software is the moral equivalent of runners in
a fist fight.  Sad to say, the only referee we’ve got does not seem to
object to fights; he just regulates them (“For every ten yards you run,
you can fire one shot”).  He really ought to break them up, and penalize
runners for even trying to fight.

     “Won’t everyone stop programming without a monetary incentive?”

   Actually, many people will program with absolutely no monetary
incentive.  Programming has an irresistible fascination for some people,
usually the people who are best at it.  There is no shortage of
professional musicians who keep at it even though they have no hope of
making a living that way.

   But really this question, though commonly asked, is not appropriate
to the situation.  Pay for programmers will not disappear, only become
less.  So the right question is, will anyone program with a reduced
monetary incentive?  My experience shows that they will.

   For more than ten years, many of the world’s best programmers worked
at the Artificial Intelligence Lab for far less money than they could
have had anywhere else.  They got many kinds of non-monetary rewards:
fame and appreciation, for example.  And creativity is also fun, a
reward in itself.

   Then most of them left when offered a chance to do the same
interesting work for a lot of money.

   What the facts show is that people will program for reasons other
than riches; but if given a chance to make a lot of money as well, they
will come to expect and demand it.  Low-paying organizations do poorly
in competition with high-paying ones, but they do not have to do badly
if the high-paying ones are banned.

     “We need the programmers desperately.  If they demand that we stop
     helping our neighbors, we have to obey.”

   You’re never so desperate that you have to obey this sort of demand.
Remember: millions for defense, but not a cent for tribute!

     “Programmers need to make a living somehow.”

   In the short run, this is true.  However, there are plenty of ways
that programmers could make a living without selling the right to use a
program.  This way is customary now because it brings programmers and
businessmen the most money, not because it is the only way to make a
living.  It is easy to find other ways if you want to find them.  Here
are a number of examples.

   A manufacturer introducing a new computer will pay for the porting of
operating systems onto the new hardware.

   The sale of teaching, hand-holding and maintenance services could
also employ programmers.

   People with new ideas could distribute programs as freeware(7),
asking for donations from satisfied users, or selling hand-holding
services.  I have met people who are already working this way
successfully.

   Users with related needs can form users’ groups, and pay dues.  A
group would contract with programming companies to write programs that
the group’s members would like to use.

   All sorts of development can be funded with a Software Tax:

     Suppose everyone who buys a computer has to pay x percent of the
     price as a software tax.  The government gives this to an agency
     like the NSF to spend on software development.

     But if the computer buyer makes a donation to software development
     himself, he can take a credit against the tax.  He can donate to
     the project of his own choosing—often, chosen because he hopes to
     use the results when it is done.  He can take a credit for any
     amount of donation up to the total tax he had to pay.

     The total tax rate could be decided by a vote of the payers of the
     tax, weighted according to the amount they will be taxed on.

     The consequences:

        • The computer-using community supports software development.
        • This community decides what level of support is needed.
        • Users who care which projects their share is spent on can
          choose this for themselves.

   In the long run, making programs free is a step toward the
post-scarcity world, where nobody will have to work very hard just to
make a living.  People will be free to devote themselves to activities
that are fun, such as programming, after spending the necessary ten
hours a week on required tasks such as legislation, family counseling,
robot repair and asteroid prospecting.  There will be no need to be able
to make a living from programming.

   We have already greatly reduced the amount of work that the whole
society must do for its actual productivity, but only a little of this
has translated itself into leisure for workers because much
nonproductive activity is required to accompany productive activity.
The main causes of this are bureaucracy and isometric struggles against
competition.  Free software will greatly reduce these drains in the area
of software production.  We must do this, in order for technical gains
in productivity to translate into less work for us.

   ---------- Footnotes ----------

   (1) The wording here was careless.  The intention was that nobody
would have to pay for _permission_ to use the GNU system.  But the words
don’t make this clear, and people often interpret them as saying that
copies of GNU should always be distributed at little or no charge.  That
was never the intent; later on, the manifesto mentions the possibility
of companies providing the service of distribution for a profit.
Subsequently I have learned to distinguish carefully between “free” in
the sense of freedom and “free” in the sense of price.  Free software is
software that users have the freedom to distribute and change.  Some
users may obtain copies at no charge, while others pay to obtain
copies—and if the funds help support improving the software, so much the
better.  The important thing is that everyone who has a copy has the
freedom to cooperate with others in using it.

   (2) This is another place I failed to distinguish carefully between
the two different meanings of “free.” The statement as it stands is not
false—you can get copies of GNU software at no charge, from your friends
or over the net.  But it does suggest the wrong idea.

   (3) Several such companies now exist.

   (4) The Free Software Foundation raises most of its funds from a
distribution service, although it is a charity rather than a company.
If _no one_ chooses to obtain copies by ordering from the FSF, it will
be unable to do its work.  But this does not mean that proprietary
restrictions are justified to force every user to pay.  If a small
fraction of all the users order copies from the FSF, that is sufficient
to keep the FSF afloat.  So we ask users to choose to support us in this
way.  Have you done your part?

   (5) A group of computer companies recently pooled funds to support
maintenance of the GNU C Compiler.

   (6) In the 80s I had not yet realized how confusing it was to speak
of “the issue” of “intellectual property.” That term is obviously
biased; more subtle is the fact that it lumps together various disparate
laws which raise very different issues.  Nowadays I urge people to
reject the term “intellectual property” entirely, lest it lead others to
suppose that those laws form one coherent issue.  The way to be clear is
to discuss patents, copyrights, and trademarks separately.  See
<http://www.gnu.org/philosophy/not-ipr.xhtml> for more explanation of
how this term spreads confusion and bias.

   (7) Subsequently we have discovered the need to distinguish between
“free software” and “freeware”.  The term “freeware” means software you
are free to redistribute, but usually you are not free to study and
change the source code, so most of it is not free software.  See
<http://www.gnu.org/philosophy/words-to-avoid.html> for more
explanation.


File: emacs.info,  Node: Glossary,  Next: Acknowledgments,  Prev: Manifesto,  Up: Top

Glossary
********

Abbrev
     An abbrev is a text string that expands into a different text
     string when present in the buffer.  For example, you might define a
     few letters as an abbrev for a long phrase that you want to insert
     frequently.  *Note Abbrevs::.

Aborting
     Aborting means getting out of a recursive edit (q.v.).  The
     commands ‘C-]’ and ‘M-x top-level’ are used for this.  *Note
     Quitting::.

Active Region
     Setting the mark (q.v.) at a position in the text also activates
     it.  When the mark is active, we call the region an active region.
     *Note Mark::.

Alt
     Alt is the name of a modifier bit that a keyboard input character
     may have.  To make a character Alt, type it while holding down the
     <Alt> key.  Such characters are given names that start with
     ‘<Alt>-’ (usually written ‘A-’ for short).  (Note that many
     terminals have a key labeled <Alt> that is really a <META> key.)
     *Note Alt: User Input.

Argument
     *Note Glossary---Numeric Argument::.

ASCII character
     An ASCII character is either an ASCII control character or an ASCII
     printing character.  *Note User Input::.

ASCII control character
     An ASCII control character is the Control version of an upper-case
     letter, or the Control version of one of the characters ‘@[\]^_?’.

ASCII printing character
     ASCII letters, digits, space, and the following punctuation
     characters: ‘!@#$%^&*()_-+=|\~`{}[]:;"'<>,.?/’.

Auto Fill Mode
     Auto Fill mode is a minor mode (q.v.) in which text that you insert
     is automatically broken into lines of a given maximum width.  *Note
     Filling::.

Auto Saving
     Auto saving is the practice of periodically saving the contents of
     an Emacs buffer in a specially-named file, so that the information
     will be preserved if the buffer is lost due to a system error or
     user error.  *Note Auto Save::.

Autoloading
     Emacs can automatically load Lisp libraries when a Lisp program
     requests a function from those libraries.  This is called
     ‘autoloading’.  *Note Lisp Libraries::.

Backtrace
     A backtrace is a trace of a series of function calls showing how a
     program arrived at a certain point.  It is used mainly for finding
     and correcting bugs (q.v.).  Emacs can display a backtrace when it
     signals an error or when you type ‘C-g’ (*note
     Glossary---Quitting::).  *Note Checklist::.

Backup File
     A backup file records the contents that a file had before the
     current editing session.  Emacs makes backup files automatically to
     help you track down or cancel changes you later regret making.
     *Note Backup::.

Balancing Parentheses
     Emacs can balance parentheses (or other matching delimiters) either
     manually or automatically.  You do manual balancing with the
     commands to move over parenthetical groupings (*note Moving by
     Parens::).  Automatic balancing works by blinking or highlighting
     the delimiter that matches the one you just inserted, or inserting
     the matching delimiter for you (*note Matching Parens: Matching.).

Balanced Expressions
     A balanced expression is a syntactically recognizable expression,
     such as a symbol, number, string constant, block, or parenthesized
     expression in C.  *Note Balanced Expressions: Expressions.

Balloon Help
     *Note Glossary---Tooltips::.

Base Buffer
     A base buffer is a buffer whose text is shared by an indirect
     buffer (q.v.).

Bidirectional Text
     Some human languages, such as English, are written from left to
     right.  Others, such as Arabic, are written from right to left.
     Emacs supports both of these forms, as well as any mixture of
     them—this is ‘bidirectional text’.  *Note Bidirectional Editing::.

Bind
     To bind a key sequence means to give it a binding (q.v.).  *Note
     Rebinding::.

Binding
     A key sequence gets its meaning in Emacs by having a binding, which
     is a command (q.v.), a Lisp function that is run when you type that
     sequence.  *Note Binding: Commands.  Customization often involves
     rebinding a character to a different command function.  The
     bindings of all key sequences are recorded in the keymaps (q.v.).
     *Note Keymaps::.

Blank Lines
     Blank lines are lines that contain only whitespace.  Emacs has
     several commands for operating on the blank lines in the buffer.
     *Note Blank Lines::.

Bookmark
     Bookmarks are akin to registers (q.v.) in that they record
     positions in buffers to which you can return later.  Unlike
     registers, bookmarks persist between Emacs sessions.  *Note
     Bookmarks::.

Border
     A border is a thin space along the edge of the frame, used just for
     spacing, not for displaying anything.  An Emacs frame has an
     ordinary external border, outside of everything including the menu
     bar, plus an internal border that surrounds the text windows, their
     scroll bars and fringes, and separates them from the menu bar and
     tool bar.  You can customize both borders with options and
     resources (*note Borders X::).  Borders are not the same as fringes
     (q.v.).

Buffer
     The buffer is the basic editing unit; one buffer corresponds to one
     text being edited.  You normally have several buffers, but at any
     time you are editing only one, the ‘current buffer’, though several
     can be visible when you are using multiple windows or frames
     (q.v.).  Most buffers are visiting (q.v.) some file.  *Note
     Buffers::.

Buffer Selection History
     Emacs keeps a buffer selection history that records how recently
     each Emacs buffer has been selected.  This is used for choosing a
     buffer to select.  *Note Buffers::.

Bug
     A bug is an incorrect or unreasonable behavior of a program, or
     inaccurate or confusing documentation.  Emacs developers treat bug
     reports, both in Emacs code and its documentation, very seriously
     and ask you to report any bugs you find.  *Note Bugs::.

Button Down Event
     A button down event is the kind of input event (q.v.) generated
     right away when you press down on a mouse button.  *Note Mouse
     Buttons::.

By Default
     *Note Glossary---Default::.

Byte Compilation
     *Note Glossary---Compilation::.

‘C-’
     ‘C-’ in the name of a character is an abbreviation for Control.
     *Note C-: User Input.

‘C-M-’
     ‘C-M-’ in the name of a character is an abbreviation for
     Control-Meta.  If your terminal lacks a real <META> key, you type a
     Control-Meta character by typing <ESC> and then typing the
     corresponding Control character.  *Note C-M-: User Input.

Case Conversion
     Case conversion means changing text from upper case to lower case
     or vice versa.  *Note Case::.

Character
     Characters form the contents of an Emacs buffer.  Also, key
     sequences (q.v.) are usually made up of characters (though they may
     include other input events as well).  *Note User Input::.

Character Set
     Emacs supports a number of character sets, each of which represents
     a particular alphabet or script.  *Note International::.

Character Terminal
     *Note Glossary---Text Terminal::.

Click Event
     A click event is the kind of input event (q.v.) generated when you
     press a mouse button and release it without moving the mouse.
     *Note Mouse Buttons::.

Client
     *Note Glossary---Server::.

Clipboard
     A clipboard is a buffer provided by the window system for
     transferring text between applications.  On the X Window System,
     the clipboard is provided in addition to the primary selection
     (q.v.); on MS-Windows and Mac, the clipboard is used _instead_ of
     the primary selection.  *Note Clipboard::.

Coding System
     A coding system is an encoding for representing text characters in
     a file or in a stream of information.  Emacs has the ability to
     convert text to or from a variety of coding systems when reading or
     writing it.  *Note Coding Systems::.

Command
     A command is a Lisp function specially defined to be able to serve
     as a key binding in Emacs.  When you type a key sequence (q.v.),
     its binding (q.v.) is looked up in the relevant keymaps (q.v.) to
     find the command to run.  *Note Commands::.

Command History
     *Note Glossary---Minibuffer History::.

Command Name
     A command name is the name of a Lisp symbol that is a command
     (*note Commands::).  You can invoke any command by its name using
     ‘M-x’ (*note M-x: M-x.).

Comment
     A comment is text in a program which is intended only for humans
     reading the program, and which is specially marked so that it will
     be ignored when the program is loaded or compiled.  Emacs offers
     special commands for creating, aligning and killing comments.
     *Note Comments::.

Common Lisp
     Common Lisp is a dialect of Lisp (q.v.) much larger and more
     powerful than Emacs Lisp.  Emacs provides a subset of Common Lisp
     in the CL package.  *Note Common Lisp: (cl)Top.

Compilation
     Compilation is the process of creating an executable program from
     source code.  Emacs has commands for compiling files of Emacs Lisp
     code (*note (elisp)Byte Compilation::) and programs in C and other
     languages (*note Compilation::).

Complete Key
     A complete key is a key sequence that fully specifies one action to
     be performed by Emacs.  For example, ‘X’ and ‘C-f’ and ‘C-x m’ are
     complete keys.  Complete keys derive their meanings from being
     bound (q.v.) to commands (q.v.).  Thus, ‘X’ is conventionally bound
     to a command to insert ‘X’ in the buffer; ‘C-x m’ is conventionally
     bound to a command to begin composing a mail message.  *Note
     Keys::.

Completion
     Completion is what Emacs does when it automatically expands an
     abbreviation for a name into the entire name.  Completion is done
     for minibuffer (q.v.) arguments when the set of possible valid
     inputs is known; for example, on command names, buffer names, and
     file names.  Completion usually occurs when <TAB>, <SPC> or <RET>
     is typed.  *Note Completion::.

Continuation Line
     When a line of text is longer than the width of the window, it
     normally (but see *note Glossary---Truncation::) takes up more than
     one screen line when displayed.  We say that the text line is
     continued, and all screen lines used for it after the first are
     called continuation lines.  *Note Continuation Lines::.  A related
     Emacs feature is ‘filling’ (q.v.).

Control Character
     A control character is a character that you type by holding down
     the <Ctrl> key.  Some control characters also have their own keys,
     so that you can type them without using <Ctrl>.  For example,
     <RET>, <TAB>, <ESC> and <DEL> are all control characters.  *Note
     User Input::.

Copyleft
     A copyleft is a notice giving the public legal permission to
     redistribute and modify a program or other work of art, but
     requiring modified versions to carry similar permission.  Copyright
     is normally used to keep users divided and helpless; with copyleft
     we turn that around to empower users and encourage them to
     cooperate.

     The particular form of copyleft used by the GNU project is called
     the GNU General Public License.  *Note Copying::.

<Ctrl>
     The <Ctrl> or “control” key is what you hold down in order to enter
     a control character (q.v.).  *Note Glossary---C-::.

Current Buffer
     The current buffer in Emacs is the Emacs buffer on which most
     editing commands operate.  You can select any Emacs buffer as the
     current one.  *Note Buffers::.

Current Line
     The current line is the line that point is on (*note Point::).

Current Paragraph
     The current paragraph is the paragraph that point is in.  If point
     is between two paragraphs, the current paragraph is the one that
     follows point.  *Note Paragraphs::.

Current Defun
     The current defun is the defun (q.v.) that point is in.  If point
     is between defuns, the current defun is the one that follows point.
     *Note Defuns::.

Cursor
     The cursor is the rectangle on the screen which indicates the
     position (called point; q.v.) at which insertion and deletion takes
     place.  The cursor is on or under the character that follows point.
     Often people speak of ‘the cursor’ when, strictly speaking, they
     mean ‘point’.  *Note Cursor: Point.

Customization
     Customization is making minor changes in the way Emacs works, to
     reflect your preferences or needs.  It is often done by setting
     variables (*note Variables::) or faces (*note Face
     Customization::), or by rebinding key sequences (*note Keymaps::).

Cut and Paste
     *Note Glossary---Killing::, and *note Glossary---Yanking::.

Daemon
     A daemon is a standard term for a system-level process that runs in
     the background.  Daemons are often started when the system first
     starts up.  When Emacs runs in daemon-mode, it runs in the
     background and does not open a display.  You can then connect to it
     with the ‘emacsclient’ program.  *Note Emacs Server::.

Default Argument
     The default for an argument is the value that will be assumed if
     you do not specify one.  When the minibuffer is used to read an
     argument, the default argument is used if you just type <RET>.
     *Note Minibuffer::.

Default
     A default is the value that is used for a certain purpose when you
     do not explicitly specify a value to use.

Default Directory
     When you specify a file name that does not start with ‘/’ or ‘~’,
     it is interpreted relative to the current buffer’s default
     directory.  (On MS systems, file names that start with a drive
     letter ‘X:’ are treated as absolute, not relative.)  *Note Default
     Directory: Minibuffer File.

Defun
     A defun is a major definition at the top level in a program.  The
     name ‘defun’ comes from Lisp, where most such definitions use the
     construct ‘defun’.  *Note Defuns::.

<DEL>
     <DEL> is a character that runs the command to delete one character
     of text before the cursor.  It is typically either the <Delete> key
     or the <BACKSPACE> key, whichever one is easy to type.  *Note DEL:
     Erasing.

Deletion
     Deletion means erasing text without copying it into the kill ring
     (q.v.).  The alternative is killing (q.v.).  *Note Deletion:
     Killing.

Deletion of Files
     Deleting a file means erasing it from the file system.  (Note that
     some systems use the concept of a “trash can”, or “recycle bin”, to
     allow you to “undelete” files.)  *Note Misc File Ops: Misc File
     Ops.

Deletion of Messages
     Deleting a message (in Rmail, and other mail clients) means
     flagging it to be eliminated from your mail file.  Until you
     expunge (q.v.) the Rmail file, you can still undelete the messages
     you have deleted.  *Note Rmail Deletion::.

Deletion of Windows
     Deleting a window means eliminating it from the screen.  Other
     windows expand to use up the space.  The text that was in the
     window is not lost, and you can create a new window with the same
     dimensions as the old if you wish.  *Note Windows::.

Directory
     File directories are named collections in the file system, within
     which you can place individual files or subdirectories.  They are
     sometimes referred to as “folders”.  *Note Directories::.

Directory Local Variable
     A directory local variable is a local variable (q.v.) that applies
     to all the files within a certain directory.  *Note Directory
     Variables::.

Dired
     Dired is the Emacs facility that displays the contents of a file
     directory and allows you to “edit the directory”, performing
     operations on the files in the directory.  *Note Dired::.

Disabled Command
     A disabled command is one that you may not run without special
     confirmation.  The usual reason for disabling a command is that it
     is confusing for beginning users.  *Note Disabling::.

Down Event
     Short for ‘button down event’ (q.v.).

Drag Event
     A drag event is the kind of input event (q.v.) generated when you
     press a mouse button, move the mouse, and then release the button.
     *Note Mouse Buttons::.

Dribble File
     A dribble file is a file into which Emacs writes all the characters
     that you type on the keyboard.  Dribble files can be used to make a
     record for debugging Emacs bugs.  Emacs does not make a dribble
     file unless you tell it to.  *Note Bugs::.

Echo Area
     The echo area is the bottom line of the screen, used for echoing
     the arguments to commands, for asking questions, and showing brief
     messages (including error messages).  The messages are stored in
     the buffer ‘*Messages*’ so you can review them later.  *Note Echo
     Area::.

Echoing
     Echoing is acknowledging the receipt of input events by displaying
     them (in the echo area).  Emacs never echoes single-character key
     sequences; longer key sequences echo only if you pause while typing
     them.

Electric
     We say that a character is electric if it is normally
     self-inserting (q.v.), but the current major mode (q.v.) redefines
     it to do something else as well.  For example, some programming
     language major modes define particular delimiter characters to
     reindent the line, or insert one or more newlines in addition to
     self-insertion.

End Of Line
     End of line is a character or a sequence of characters that
     indicate the end of a text line.  On GNU and Unix systems, this is
     a newline (q.v.), but other systems have other conventions.  *Note
     end-of-line: Coding Systems.  Emacs can recognize several
     end-of-line conventions in files and convert between them.

Environment Variable
     An environment variable is one of a collection of variables stored
     by the operating system, each one having a name and a value.  Emacs
     can access environment variables set by its parent shell, and it
     can set variables in the environment it passes to programs it
     invokes.  *Note Environment::.

EOL
     *Note Glossary---End Of Line::.

Error
     An error occurs when an Emacs command cannot execute in the current
     circumstances.  When an error occurs, execution of the command
     stops (unless the command has been programmed to do otherwise) and
     Emacs reports the error by displaying an error message (q.v.).

Error Message
     An error message is output displayed by Emacs when you ask it to do
     something impossible (such as, killing text forward when point is
     at the end of the buffer), or when a command malfunctions in some
     way.  Such messages appear in the echo area, accompanied by a beep.

<ESC>
     <ESC> is a character used as a prefix for typing Meta characters on
     keyboards lacking a <META> key.  Unlike the <META> key (which, like
     the <SHIFT> key, is held down while another character is typed),
     you press the <ESC> key as you would press a letter key, and it
     applies to the next character you type.

Expression
     *Note Glossary---Balanced Expression::.

Expunging
     Expunging an Rmail, Gnus newsgroup, or Dired buffer is an operation
     that truly discards the messages or files you have previously
     flagged for deletion.

Face
     A face is a style of displaying characters.  It specifies
     attributes such as font family and size, foreground and background
     colors, underline and strike-through, background stipple, etc.
     Emacs provides features to associate specific faces with portions
     of buffer text, in order to display that text as specified by the
     face attributes.  *Note Faces::.

File Local Variable
     A file local variable is a local variable (q.v.) specified in a
     given file.  *Note File Variables::, and *note Glossary---Directory
     Local Variable::.

File Locking
     Emacs uses file locking to notice when two different users start to
     edit one file at the same time.  *Note Interlocking::.

File Name
     A file name is a name that refers to a file.  File names may be
     relative or absolute; the meaning of a relative file name depends
     on the current directory, but an absolute file name refers to the
     same file regardless of which directory is current.  On GNU and
     Unix systems, an absolute file name starts with a slash (the root
     directory) or with ‘~/’ or ‘~USER/’ (a home directory).  On
     MS-Windows/MS-DOS, an absolute file name can also start with a
     drive letter and a colon, e.g., ‘D:’.

     Some people use the term “pathname” for file names, but we do not;
     we use the word “path” only in the term “search path” (q.v.).

File-Name Component
     A file-name component names a file directly within a particular
     directory.  On GNU and Unix systems, a file name is a sequence of
     file-name components, separated by slashes.  For example, ‘foo/bar’
     is a file name containing two components, ‘foo’ and ‘bar’; it
     refers to the file named ‘bar’ in the directory named ‘foo’ in the
     current directory.  MS-DOS/MS-Windows file names can also use
     backslashes to separate components, as in ‘foo\bar’.

Fill Prefix
     The fill prefix is a string that should be expected at the
     beginning of each line when filling is done.  It is not regarded as
     part of the text to be filled.  *Note Filling::.

Filling
     Filling text means adjusting the position of line-breaks to shift
     text between consecutive lines, so that all the lines are
     approximately the same length.  *Note Filling::.  Some other
     editors call this feature “line wrapping”.

Font Lock
     Font Lock is a mode that highlights parts of buffer text in
     different faces, according to the syntax.  Some other editors refer
     to this as “syntax highlighting”.  For example, all comments (q.v.)
     might be colored red.  *Note Font Lock::.

Fontset
     A fontset is a named collection of fonts.  A fontset specification
     lists character sets and which font to use to display each of them.
     Fontsets make it easy to change several fonts at once by specifying
     the name of a fontset, rather than changing each font separately.
     *Note Fontsets::.

Formfeed Character
     *Note Glossary---Page::.

Frame
     A frame is a rectangular cluster of Emacs windows.  Emacs starts
     out with one frame, but you can create more.  You can subdivide
     each frame into Emacs windows (q.v.).  When you are using a window
     system (q.v.), more than one frame can be visible at the same time.
     *Note Frames::.  Some other editors use the term “window” for this,
     but in Emacs a window means something else.

Free Software
     Free software is software that gives you the freedom to share,
     study and modify it.  Emacs is free software, part of the GNU
     project (q.v.), and distributed under a copyleft (q.v.) license
     called the GNU General Public License.  *Note Copying::.

Free Software Foundation
     The Free Software Foundation (FSF) is a charitable foundation
     dedicated to promoting the development of free software (q.v.).
     For more information, see the FSF website (http://fsf.org/).

Fringe
     On a graphical display (q.v.), there’s a narrow portion of the
     frame (q.v.) between the text area and the window’s border.  These
     “fringes” are used to display symbols that provide information
     about the buffer text (*note Fringes::).  Emacs displays the fringe
     using a special face (q.v.) called ‘fringe’.  *Note fringe: Faces.

FSF
     *Note Glossary---Free Software Foundation::.

FTP
     FTP is an acronym for File Transfer Protocol.  This is one standard
     method for retrieving remote files (q.v.).

Function Key
     A function key is a key on the keyboard that sends input but does
     not correspond to any character.  *Note Function Keys::.

Global
     Global means “independent of the current environment; in effect
     throughout Emacs”.  It is the opposite of local (q.v.).  Particular
     examples of the use of ‘global’ appear below.

Global Abbrev
     A global definition of an abbrev (q.v.) is effective in all major
     modes that do not have local (q.v.) definitions for the same
     abbrev.  *Note Abbrevs::.

Global Keymap
     The global keymap (q.v.) contains key bindings that are in effect
     everywhere, except when overridden by local key bindings in a major
     mode’s local keymap (q.v.).  *Note Keymaps::.

Global Mark Ring
     The global mark ring records the series of buffers you have
     recently set a mark (q.v.) in.  In many cases you can use this to
     backtrack through buffers you have been editing, or in which you
     have found tags (*note Glossary---Tags Table::).  *Note Global Mark
     Ring::.

Global Substitution
     Global substitution means replacing each occurrence of one string
     by another string throughout a large amount of text.  *Note
     Replace::.

Global Variable
     The global value of a variable (q.v.) takes effect in all buffers
     that do not have their own local (q.v.) values for the variable.
     *Note Variables::.

GNU
     GNU is a recursive acronym for GNU’s Not Unix, and it refers to a
     Unix-compatible operating system which is free software (q.v.).
     *Note Manifesto::.  GNU is normally used with Linux as the kernel
     since Linux works better than the GNU kernel.  For more
     information, see the GNU website (http://www.gnu.org/).

Graphic Character
     Graphic characters are those assigned pictorial images rather than
     just names.  All the non-Meta (q.v.) characters except for the
     Control (q.v.) characters are graphic characters.  These include
     letters, digits, punctuation, and spaces; they do not include <RET>
     or <ESC>.  In Emacs, typing a graphic character inserts that
     character (in ordinary editing modes).  *Note Inserting Text::.

Graphical Display
     A graphical display is one that can display images and multiple
     fonts.  Usually it also has a window system (q.v.).

Highlighting
     Highlighting text means displaying it with a different foreground
     and/or background color to make it stand out from the rest of the
     text in the buffer.

     Emacs uses highlighting in several ways.  It highlights the region
     whenever it is active (*note Mark::).  Incremental search also
     highlights matches (*note Incremental Search::).  *Note
     Glossary---Font Lock::.

Hardcopy
     Hardcopy means printed output.  Emacs has various commands for
     printing the contents of Emacs buffers.  *Note Printing::.

<HELP>
     <HELP> is the Emacs name for ‘C-h’ or <F1>.  You can type <HELP> at
     any time to ask what options you have, or to ask what a command
     does.  *Note Help::.

Help Echo
     Help echo is a short message displayed in the echo area (q.v.) when
     the mouse pointer is located on portions of display that require
     some explanations.  Emacs displays help echo for menu items, parts
     of the mode line, tool-bar buttons, etc.  On graphical displays,
     the messages can be displayed as tooltips (q.v.).  *Note
     Tooltips::.

Home Directory
     Your home directory contains your personal files.  On a multi-user
     GNU or Unix system, each user has his or her own home directory.
     When you start a new login session, your home directory is the
     default directory in which to start.  A standard shorthand for your
     home directory is ‘~’.  Similarly, ‘~USER’ represents the home
     directory of some other user.

Hook
     A hook is a list of functions to be called on specific occasions,
     such as saving a buffer in a file, major mode activation, etc.  By
     customizing the various hooks, you can modify Emacs’s behavior
     without changing any of its code.  *Note Hooks::.

Hyper
     Hyper is the name of a modifier bit that a keyboard input character
     may have.  To make a character Hyper, type it while holding down
     the <Hyper> key.  Such characters are given names that start with
     ‘Hyper-’ (usually written ‘H-’ for short).  *Note User Input::.

Iff
     “Iff” means “if and only if”.  This terminology comes from
     mathematics.  Try to avoid using this term in documentation, since
     many are unfamiliar with it and mistake it for a typo.

Inbox
     An inbox is a file in which mail is delivered by the operating
     system.  Rmail transfers mail from inboxes to Rmail files in which
     the mail is then stored permanently or until explicitly deleted.
     *Note Rmail Inbox::.

Incremental Search
     Emacs provides an incremental search facility, whereby Emacs begins
     searching for a string as soon as you type the first character.  As
     you type more characters, it refines the search.  *Note Incremental
     Search::.

Indentation
     Indentation means blank space at the beginning of a line.  Most
     programming languages have conventions for using indentation to
     illuminate the structure of the program, and Emacs has special
     commands to adjust indentation.  *Note Indentation::.

Indirect Buffer
     An indirect buffer is a buffer that shares the text of another
     buffer, called its base buffer (q.v.).  *Note Indirect Buffers::.

Info
     Info is the hypertext format used by the GNU project for writing
     documentation.

Input Event
     An input event represents, within Emacs, one action taken by the
     user on the terminal.  Input events include typing characters,
     typing function keys, pressing or releasing mouse buttons, and
     switching between Emacs frames.  *Note User Input::.

Input Method
     An input method is a system for entering non-ASCII text characters
     by typing sequences of ASCII characters (q.v.).  *Note Input
     Methods::.

Insertion
     Insertion means adding text into the buffer, either from the
     keyboard or from some other place in Emacs.

Interlocking
     *Note Glossary---File Locking::.

Isearch
     *Note Glossary---Incremental Search::.

Justification
     Justification means adding extra spaces within lines of text in
     order to adjust the position of the text edges.  *Note Fill
     Commands::.

Key Binding
     *Note Glossary---Binding::.

Keyboard Macro
     Keyboard macros are a way of defining new Emacs commands from
     sequences of existing ones, with no need to write a Lisp program.
     You can use a macro to record a sequence of commands, then play
     them back as many times as you like.  *Note Keyboard Macros::.

Keyboard Shortcut
     A keyboard shortcut is a key sequence (q.v.) that invokes a
     command.  What some programs call “assigning a keyboard shortcut”,
     Emacs calls “binding a key sequence”.  *Note Glossary---Binding::.

Key Sequence
     A key sequence (key, for short) is a sequence of input events
     (q.v.) that are meaningful as a single unit.  If the key sequence
     is enough to specify one action, it is a complete key (q.v.); if it
     is not enough, it is a prefix key (q.v.).  *Note Keys::.

Keymap
     The keymap is the data structure that records the bindings (q.v.)
     of key sequences to the commands that they run.  For example, the
     global keymap binds the character ‘C-n’ to the command function
     ‘next-line’.  *Note Keymaps::.

Keyboard Translation Table
     The keyboard translation table is an array that translates the
     character codes that come from the terminal into the character
     codes that make up key sequences.

Kill Ring
     The kill ring is where all text you have killed (*note
     Glossary---Killing::) recently is saved.  You can reinsert any of
     the killed text still in the ring; this is called yanking (q.v.).
     *Note Yanking::.

Killing
     Killing means erasing text and saving it on the kill ring so it can
     be yanked (q.v.) later.  Some other systems call this “cutting”.
     Most Emacs commands that erase text perform killing, as opposed to
     deletion (q.v.).  *Note Killing::.

Killing a Job
     Killing a job (such as, an invocation of Emacs) means making it
     cease to exist.  Any data within it, if not saved in a file, is
     lost.  *Note Exiting::.

Language Environment
     Your choice of language environment specifies defaults for the
     input method (q.v.) and coding system (q.v.).  *Note Language
     Environments::.  These defaults are relevant if you edit non-ASCII
     text (*note International::).

Line Wrapping
     *Note Glossary---Filling::.

Lisp
     Lisp is a programming language.  Most of Emacs is written in a
     dialect of Lisp, called Emacs Lisp, which is extended with special
     features that make it especially suitable for text editing tasks.

List
     A list is, approximately, a text string beginning with an open
     parenthesis and ending with the matching close parenthesis.  In C
     mode and other non-Lisp modes, groupings surrounded by other kinds
     of matched delimiters appropriate to the language, such as braces,
     are also considered lists.  Emacs has special commands for many
     operations on lists.  *Note Moving by Parens::.

Local
     Local means “in effect only in a particular context”; the relevant
     kind of context is a particular function execution, a particular
     buffer, or a particular major mode.  It is the opposite of ‘global’
     (q.v.).  Specific uses of ‘local’ in Emacs terminology appear
     below.

Local Abbrev
     A local abbrev definition is effective only if a particular major
     mode is selected.  In that major mode, it overrides any global
     definition for the same abbrev.  *Note Abbrevs::.

Local Keymap
     A local keymap is used in a particular major mode; the key bindings
     (q.v.) in the current local keymap override global bindings of the
     same key sequences.  *Note Keymaps::.

Local Variable
     A local value of a variable (q.v.) applies to only one buffer.
     *Note Locals::.

‘M-’
     ‘M-’ in the name of a character is an abbreviation for <Meta>, one
     of the modifier keys that can accompany any character.  *Note M-:
     User Input.

‘M-C-’
     ‘M-C-’ in the name of a character is an abbreviation for
     Control-Meta; it means the same thing as ‘‘C-M-’’ (q.v.).

‘M-x’
     ‘M-x’ is the key sequence that is used to call an Emacs command by
     name.  This is how you run commands that are not bound to key
     sequences.  *Note M-x: M-x.

Mail
     Mail means messages sent from one user to another through the
     computer system, to be read at the recipient’s convenience.  Emacs
     has commands for composing and sending mail, and for reading and
     editing the mail you have received.  *Note Sending Mail::.  *Note
     Rmail::, for one way to read mail with Emacs.

Mail Composition Method
     A mail composition method is a program runnable within Emacs for
     editing and sending a mail message.  Emacs lets you select from
     several alternative mail composition methods.  *Note Mail
     Methods::.

Major Mode
     The Emacs major modes are a mutually exclusive set of options, each
     of which configures Emacs for editing a certain sort of text.
     Ideally, each programming language has its own major mode.  *Note
     Major Modes::.

Margin
     The space between the usable part of a window (including the
     fringe) and the window edge.

Mark
     The mark points to a position in the text.  It specifies one end of
     the region (q.v.), point being the other end.  Many commands
     operate on all the text from point to the mark.  Each buffer has
     its own mark.  *Note Mark::.

Mark Ring
     The mark ring is used to hold several recent previous locations of
     the mark, in case you want to move back to them.  Each buffer has
     its own mark ring; in addition, there is a single global mark ring
     (q.v.).  *Note Mark Ring::.

Menu Bar
     The menu bar is a line at the top of an Emacs frame.  It contains
     words you can click on with the mouse to bring up menus, or you can
     use a keyboard interface to navigate it.  *Note Menu Bars::.

Message
     *Note Glossary---Mail::.

Meta
     Meta is the name of a modifier bit which you can use in a command
     character.  To enter a meta character, you hold down the <Meta> key
     while typing the character.  We refer to such characters with names
     that start with ‘Meta-’ (usually written ‘M-’ for short).  For
     example, ‘M-<’ is typed by holding down <Meta> and at the same time
     typing ‘<’ (which itself is done, on most terminals, by holding
     down <SHIFT> and typing ‘,’).  *Note Meta: User Input.

     On some terminals, the <Meta> key is actually labeled <Alt> or
     <Edit>.

Meta Character
     A Meta character is one whose character code includes the Meta bit.

Minibuffer
     The minibuffer is the window that appears when necessary inside the
     echo area (q.v.), used for reading arguments to commands.  *Note
     Minibuffer::.

Minibuffer History
     The minibuffer history records the text you have specified in the
     past for minibuffer arguments, so you can conveniently use the same
     text again.  *Note Minibuffer History::.

Minor Mode
     A minor mode is an optional feature of Emacs, which can be switched
     on or off independently of all other features.  Each minor mode has
     a command to turn it on or off.  Some minor modes are global
     (q.v.), and some are local (q.v.).  *Note Minor Modes::.

Minor Mode Keymap
     A minor mode keymap is a keymap that belongs to a minor mode and is
     active when that mode is enabled.  Minor mode keymaps take
     precedence over the buffer’s local keymap, just as the local keymap
     takes precedence over the global keymap.  *Note Keymaps::.

Mode Line
     The mode line is the line at the bottom of each window (q.v.),
     giving status information on the buffer displayed in that window.
     *Note Mode Line::.

Modified Buffer
     A buffer (q.v.) is modified if its text has been changed since the
     last time the buffer was saved (or since it was created, if it has
     never been saved).  *Note Saving::.

Moving Text
     Moving text means erasing it from one place and inserting it in
     another.  The usual way to move text is by killing (q.v.) it and
     then yanking (q.v.) it.  *Note Killing::.

MULE
     Prior to Emacs 23, MULE was the name of a software package which
     provided a “MULtilingual Enhancement” to Emacs, by adding support
     for multiple character sets (q.v.).  MULE was later integrated into
     Emacs, and much of it was replaced when Emacs gained internal
     Unicode support in version 23.

     Some parts of Emacs that deal with character set support still use
     the MULE name.  *Note International::.

Multibyte Character
     A multibyte character is a character that takes up several bytes in
     a buffer.  Emacs uses multibyte characters to represent non-ASCII
     text, since the number of non-ASCII characters is much more than
     256.  *Note International Characters: International Chars.

Named Mark
     A named mark is a register (q.v.), in its role of recording a
     location in text so that you can move point to that location.
     *Note Registers::.

Narrowing
     Narrowing means creating a restriction (q.v.) that limits editing
     in the current buffer to only a part of the text.  Text outside
     that part is inaccessible for editing (or viewing) until the
     boundaries are widened again, but it is still there, and saving the
     file saves it all.  *Note Narrowing::.

Newline
     Control-J characters in the buffer terminate lines of text and are
     therefore also called newlines.  *Note Glossary---End Of Line::.

‘nil’
     ‘nil’ is a value usually interpreted as a logical “false”.  Its
     opposite is ‘t’, interpreted as “true”.

Numeric Argument
     A numeric argument is a number, specified before a command, to
     change the effect of the command.  Often the numeric argument
     serves as a repeat count.  *Note Arguments::.

Overwrite Mode
     Overwrite mode is a minor mode.  When it is enabled, ordinary text
     characters replace the existing text after point rather than
     pushing it to one side.  *Note Minor Modes::.

Package
     A package is a collection of Lisp code that you download and
     automatically install from within Emacs.  Packages provide a
     convenient way to add new features.  *Note Packages::.

Page
     A page is a unit of text, delimited by formfeed characters (ASCII
     control-L, code 014) at the beginning of a line.  Some Emacs
     commands are provided for moving over and operating on pages.
     *Note Pages::.

Paragraph
     Paragraphs are the medium-size unit of human-language text.  There
     are special Emacs commands for moving over and operating on
     paragraphs.  *Note Paragraphs::.

Parsing
     We say that certain Emacs commands parse words or expressions in
     the text being edited.  Really, all they know how to do is find the
     other end of a word or expression.

Point
     Point is the place in the buffer at which insertion and deletion
     occur.  Point is considered to be between two characters, not at
     one character.  The terminal’s cursor (q.v.) indicates the location
     of point.  *Note Point::.

Prefix Argument
     *Note Glossary---Numeric Argument::.

Prefix Key
     A prefix key is a key sequence (q.v.) whose sole function is to
     introduce a set of longer key sequences.  ‘C-x’ is an example of
     prefix key; any two-character sequence starting with ‘C-x’ is
     therefore a legitimate key sequence.  *Note Keys::.

Primary Selection
     The primary selection is one particular X selection (q.v.); it is
     the selection that most X applications use for transferring text to
     and from other applications.

     The Emacs kill commands set the primary selection and the yank
     command uses the primary selection when appropriate.  *Note
     Killing::.

Prompt
     A prompt is text used to ask you for input.  Displaying a prompt is
     called prompting.  Emacs prompts always appear in the echo area
     (q.v.).  One kind of prompting happens when the minibuffer is used
     to read an argument (*note Minibuffer::); the echoing that happens
     when you pause in the middle of typing a multi-character key
     sequence is also a kind of prompting (*note Echo Area::).

Query-Replace
     Query-replace is an interactive string replacement feature provided
     by Emacs.  *Note Query Replace::.

Quitting
     Quitting means canceling a partially typed command or a running
     command, using ‘C-g’ (or ‘C-<BREAK>’ on MS-DOS). *Note Quitting::.

Quoting
     Quoting means depriving a character of its usual special
     significance.  The most common kind of quoting in Emacs is with
     ‘C-q’.  What constitutes special significance depends on the
     context and on convention.  For example, an “ordinary” character as
     an Emacs command inserts itself; so in this context, a special
     character is any character that does not normally insert itself
     (such as <DEL>, for example), and quoting it makes it insert itself
     as if it were not special.  Not all contexts allow quoting.  *Note
     Quoting: Inserting Text.

Quoting File Names
     Quoting a file name turns off the special significance of
     constructs such as ‘$’, ‘~’ and ‘:’.  *Note Quoted File Names::.

Read-Only Buffer
     A read-only buffer is one whose text you are not allowed to change.
     Normally Emacs makes buffers read-only when they contain text which
     has a special significance to Emacs; for example, Dired buffers.
     Visiting a file that is write-protected also makes a read-only
     buffer.  *Note Buffers::.

Rectangle
     A rectangle consists of the text in a given range of columns on a
     given range of lines.  Normally you specify a rectangle by putting
     point at one corner and putting the mark at the diagonally opposite
     corner.  *Note Rectangles::.

Recursive Editing Level
     A recursive editing level is a state in which part of the execution
     of a command involves asking you to edit some text.  This text may
     or may not be the same as the text to which the command was
     applied.  The mode line indicates recursive editing levels with
     square brackets (‘[’ and ‘]’).  *Note Recursive Edit::.

Redisplay
     Redisplay is the process of correcting the image on the screen to
     correspond to changes that have been made in the text being edited.
     *Note Redisplay: Screen.

Regexp
     *Note Glossary---Regular Expression::.

Region
     The region is the text between point (q.v.) and the mark (q.v.).
     Many commands operate on the text of the region.  *Note Region:
     Mark.

Register
     Registers are named slots in which text, buffer positions, or
     rectangles can be saved for later use.  *Note Registers::.  A
     related Emacs feature is ‘bookmarks’ (q.v.).

Regular Expression
     A regular expression is a pattern that can match various text
     strings; for example, ‘a[0-9]+’ matches ‘a’ followed by one or more
     digits.  *Note Regexps::.

Remote File
     A remote file is a file that is stored on a system other than your
     own.  Emacs can access files on other computers provided that they
     are connected to the same network as your machine, and (obviously)
     that you have a supported method to gain access to those files.
     *Note Remote Files::.

Repeat Count
     *Note Glossary---Numeric Argument::.

Replacement
     *Note Glossary---Global Substitution::.

Restriction
     A buffer’s restriction is the amount of text, at the beginning or
     the end of the buffer, that is temporarily inaccessible.  Giving a
     buffer a nonzero amount of restriction is called narrowing (q.v.);
     removing a restriction is called widening (q.v.).  *Note
     Narrowing::.

<RET>
     <RET> is a character that in Emacs runs the command to insert a
     newline into the text.  It is also used to terminate most arguments
     read in the minibuffer (q.v.).  *Note Return: User Input.

Reverting
     Reverting means returning to the original state.  Emacs lets you
     revert a buffer by re-reading its file from disk.  *Note
     Reverting::.

Saving
     Saving a buffer means copying its text into the file that was
     visited (q.v.) in that buffer.  This is the way text in files
     actually gets changed by your Emacs editing.  *Note Saving::.

Scroll Bar
     A scroll bar is a tall thin hollow box that appears at the side of
     a window.  You can use mouse commands in the scroll bar to scroll
     the window.  The scroll bar feature is supported only under
     windowing systems.  *Note Scroll Bars::.

Scrolling
     Scrolling means shifting the text in the Emacs window so as to see
     a different part of the buffer.  *Note Scrolling::.

Searching
     Searching means moving point to the next occurrence of a specified
     string or the next match for a specified regular expression.  *Note
     Search::.

Search Path
     A search path is a list of directory names, to be used for
     searching for files for certain purposes.  For example, the
     variable ‘load-path’ holds a search path for finding Lisp library
     files.  *Note Lisp Libraries::.

Secondary Selection
     The secondary selection is one particular X selection (q.v.); some
     X applications can use it for transferring text to and from other
     applications.  Emacs has special mouse commands for transferring
     text using the secondary selection.  *Note Secondary Selection::.

Selected Frame
     The selected frame is the one your input currently operates on.
     *Note Frames::.

Selected Window
     The selected window is the one your input currently operates on.
     *Note Basic Window::.

Selecting a Buffer
     Selecting a buffer means making it the current (q.v.) buffer.
     *Note Select Buffer::.

Selection
     Windowing systems allow an application program to specify
     selections whose values are text.  A program can also read the
     selections that other programs have set up.  This is the principal
     way of transferring text between window applications.  Emacs has
     commands to work with the primary (q.v.) selection and the
     secondary (q.v.) selection, and also with the clipboard (q.v.).

Self-Documentation
     Self-documentation is the feature of Emacs that can tell you what
     any command does, or give you a list of all commands related to a
     topic you specify.  You ask for self-documentation with the help
     character, ‘C-h’.  *Note Help::.

Self-Inserting Character
     A character is self-inserting if typing that character inserts that
     character in the buffer.  Ordinary printing and whitespace
     characters are self-inserting in Emacs, except in certain special
     major modes.

Sentences
     Emacs has commands for moving by or killing by sentences.  *Note
     Sentences::.

Server
     Within Emacs, you can start a ‘server’ process, which listens for
     connections from ‘clients’.  This offers a faster alternative to
     starting several Emacs instances.  *Note Emacs Server::, and *note
     Glossary---Daemon::.

Sexp
     A sexp (short for “s-expression”) is the basic syntactic unit of
     Lisp in its textual form: either a list, or Lisp atom.  Sexps are
     also the balanced expressions (q.v.) of the Lisp language; this is
     why the commands for editing balanced expressions have ‘sexp’ in
     their name.  *Note Sexps: Expressions.

Simultaneous Editing
     Simultaneous editing means two users modifying the same file at
     once.  Simultaneous editing, if not detected, can cause one user to
     lose his or her work.  Emacs detects all cases of simultaneous
     editing, and warns one of the users to investigate.  *Note
     Interlocking: Interlocking.

<SPC>
     <SPC> is the space character, which you enter by pressing the space
     bar.

Speedbar
     The speedbar is a special tall frame that provides fast access to
     Emacs buffers, functions within those buffers, Info nodes, and
     other interesting parts of text within Emacs.  *Note Speedbar::.

Spell Checking
     Spell checking means checking correctness of the written form of
     each one of the words in a text.  Emacs can use various external
     spelling-checker programs to check the spelling of parts of a
     buffer via a convenient user interface.  *Note Spelling::.

String
     A string is a kind of Lisp data object that contains a sequence of
     characters.  Many Emacs variables are intended to have strings as
     values.  The Lisp syntax for a string consists of the characters in
     the string with a ‘"’ before and another ‘"’ after.  A ‘"’ that is
     part of the string must be written as ‘\"’ and a ‘\’ that is part
     of the string must be written as ‘\\’.  All other characters,
     including newline, can be included just by writing them inside the
     string; however, backslash sequences as in C, such as ‘\n’ for
     newline or ‘\241’ using an octal character code, are allowed as
     well.

String Substitution
     *Note Glossary---Global Substitution::.

Syntax Highlighting
     *Note Glossary---Font Lock::.

Syntax Table
     The syntax table tells Emacs which characters are part of a word,
     which characters balance each other like parentheses, etc.  *Note
     Syntax Tables: (elisp)Syntax Tables.

Super
     Super is the name of a modifier bit that a keyboard input character
     may have.  To make a character Super, type it while holding down
     the <SUPER> key.  Such characters are given names that start with
     ‘Super-’ (usually written ‘s-’ for short).  *Note User Input::.

Suspending
     Suspending Emacs means stopping it temporarily and returning
     control to its parent process, which is usually a shell.  Unlike
     killing a job (q.v.), you can later resume the suspended Emacs job
     without losing your buffers, unsaved edits, undo history, etc.
     *Note Exiting::.

<TAB>
     <TAB> is the tab character.  In Emacs it is typically used for
     indentation or completion.

Tags Table
     A tags table is a file that serves as an index to the function
     definitions in one or more other files.  *Note Tags::.

Termscript File
     A termscript file contains a record of all characters sent by Emacs
     to the terminal.  It is used for tracking down bugs in Emacs
     redisplay.  Emacs does not make a termscript file unless you tell
     it to.  *Note Bugs::.

Text
     ‘Text’ has two meanings (*note Text::):

        • Data consisting of a sequence of characters, as opposed to
          binary numbers, executable programs, and the like.  The basic
          contents of an Emacs buffer (aside from the text properties,
          q.v.) are always text in this sense.
        • Data consisting of written human language (as opposed to
          programs), or following the stylistic conventions of human
          language.

Text Terminal
     A text terminal, or character terminal, is a display that is
     limited to displaying text in character units.  Such a terminal
     cannot control individual pixels it displays.  Emacs supports a
     subset of display features on text terminals.

Text Properties
     Text properties are annotations recorded for particular characters
     in the buffer.  Images in the buffer are recorded as text
     properties; they also specify formatting information.  *Note
     Editing Format Info::.

Theme
     A theme is a set of customizations (q.v.) that give Emacs a
     particular appearance or behavior.  For example, you might use a
     theme for your favorite set of faces (q.v.).

Tool Bar
     The tool bar is a line (sometimes multiple lines) of icons at the
     top of an Emacs frame.  Clicking on one of these icons executes a
     command.  You can think of this as a graphical relative of the menu
     bar (q.v.).  *Note Tool Bars::.

Tooltips
     Tooltips are small windows displaying a help echo (q.v.) text,
     which explains parts of the display, lists useful options available
     via mouse clicks, etc.  *Note Tooltips::.

Top Level
     Top level is the normal state of Emacs, in which you are editing
     the text of the file you have visited.  You are at top level
     whenever you are not in a recursive editing level (q.v.) or the
     minibuffer (q.v.), and not in the middle of a command.  You can get
     back to top level by aborting (q.v.) and quitting (q.v.).  *Note
     Quitting::.

Transient Mark Mode
     The default behavior of the mark (q.v.) and region (q.v.), in which
     setting the mark activates it and highlights the region, is called
     Transient Mark mode.  In GNU Emacs 23 and onwards, it is enabled by
     default.  *Note Disabled Transient Mark::.

Transposition
     Transposing two units of text means putting each one into the place
     formerly occupied by the other.  There are Emacs commands to
     transpose two adjacent characters, words, balanced expressions
     (q.v.) or lines (*note Transpose::).

Trash Can
     *Note Glossary---Deletion of Files::.

Truncation
     Truncating text lines in the display means leaving out any text on
     a line that does not fit within the right margin of the window
     displaying it.  *Note Truncation: Continuation Lines, and *note
     Glossary---Continuation Line::.

TTY
     *Note Glossary---Text Terminal::.

Undoing
     Undoing means making your previous editing go in reverse, bringing
     back the text that existed earlier in the editing session.  *Note
     Undo::.

Unix
     Unix is a class of multi-user computer operating systems with a
     long history.  There are several implementations today.  The GNU
     project (q.v.) aims to develop a complete Unix-like operating
     system that is free software (q.v.).

User Option
     A user option is a face (q.v.) or a variable (q.v.) that exists so
     that you can customize Emacs by setting it to a new value.  *Note
     Easy Customization::.

Variable
     A variable is an object in Lisp that can store an arbitrary value.
     Emacs uses some variables for internal purposes, and has others
     (known as ‘user options’; q.v.) just so that you can set their
     values to control the behavior of Emacs.  The variables used in
     Emacs that you are likely to be interested in are listed in the
     Variables Index in this manual (*note Variable Index::).  *Note
     Variables::, for information on variables.

Version Control
     Version control systems keep track of multiple versions of a source
     file.  They provide a more powerful alternative to keeping backup
     files (q.v.).  *Note Version Control::.

Visiting
     Visiting a file means loading its contents into a buffer (q.v.)
     where they can be edited.  *Note Visiting::.

Whitespace
     Whitespace is any run of consecutive formatting characters (space,
     tab, newline, and backspace).

Widening
     Widening is removing any restriction (q.v.) on the current buffer;
     it is the opposite of narrowing (q.v.).  *Note Narrowing::.

Window
     Emacs divides a frame (q.v.) into one or more windows, each of
     which can display the contents of one buffer (q.v.) at any time.
     *Note Screen::, for basic information on how Emacs uses the screen.
     *Note Windows::, for commands to control the use of windows.  Some
     other editors use the term “window” for what we call a ‘frame’
     (q.v.) in Emacs.

Window System
     A window system is software that operates on a graphical display
     (q.v.), to subdivide the screen so that multiple applications can
     have their] own windows at the same time.  All modern operating
     systems include a window system.

Word Abbrev
     *Note Glossary---Abbrev::.

Word Search
     Word search is searching for a sequence of words, considering the
     punctuation between them as insignificant.  *Note Word Search::.

Yanking
     Yanking means reinserting text previously killed (q.v.).  It can be
     used to undo a mistaken kill, or for copying or moving text.  Some
     other systems call this “pasting”.  *Note Yanking::.


File: emacs.info,  Node: Acknowledgments,  Next: Key Index,  Prev: Glossary,  Up: Top

Acknowledgments
***************

Many people have contributed code included in the Free Software
Foundation’s distribution of GNU Emacs.  To show our appreciation for
their public spirit, we list here in alphabetical order those who have
written substantial portions.  Others too numerous to mention have
reported and fixed bugs, and added features to many parts of Emacs.  We
thank them for their generosity as well.

   This list is intended to mention every contributor of a major package
or feature we currently distribute; if you know of someone we have
omitted, please make a bug report.  More comprehensive information is
available in the ‘ChangeLog’ files, summarized in the file ‘etc/AUTHORS’
in the distribution.

   • Per Abrahamsen wrote the customization facilities, as well as
     ‘double.el’, for typing accented characters not normally available
     from the keyboard; ‘xt-mouse.el’, which allows mouse commands
     through Xterm; ‘gnus-cus.el’, which implements customization
     commands for Gnus; ‘gnus-cite.el’, a citation-parsing facility for
     news articles; ‘gnus-score.el’, scoring for Gnus; ‘cpp.el’, which
     hides or highlights parts of C programs according to preprocessor
     conditionals; and the widget library files ‘wid-browse.el’,
     ‘wid-edit.el’, ‘widget.el’.  He also co-wrote ‘gnus-soup.el’.

   • Tomas Abrahamsson wrote ‘artist.el’, a package for producing ASCII
     art with a mouse or with keyboard keys.

   • Jay K. Adams wrote ‘jka-compr.el’ and ‘jka-cmpr-hook.el’, providing
     automatic decompression and recompression for compressed files.

   • Michael Albinus wrote ‘dbus.el’, a package that implements the
     D-Bus message bus protocol; ‘zeroconf.el’, a mode for browsing
     Avahi services; ‘secrets.el’, an interface to keyring daemons for
     storing confidential data; and ‘filenotify.el’ and the associated
     low-level interface routines, for watching file status changes.  He
     and Kai Großjohann wrote the Tramp package, which provides
     transparent remote file editing using ssh, ftp, and other network
     protocols.  He and Daniel Pittman wrote ‘tramp-cache.el’.

   • Ralf Angeli wrote ‘scroll-lock.el’, a minor mode which keeps the
     point vertically fixed by scrolling the window when moving up and
     down in the buffer.

   • Joe Arceneaux wrote the original text property implementation, and
     implemented support for X11.

   • Emil Åström, Milan Zamaza, and Stefan Bruda wrote ‘prolog.el’, a
     mode for editing Prolog (and Mercury) code.

   • Miles Bader wrote ‘image-file.el’, support code for visiting image
     files; ‘minibuf-eldef.el’, a minor mode that hides the minibuffer
     default value when appropriate; ‘rfn-eshadow.el’, shadowing of
     ‘read-file-name’ input; ‘mb-depth.el’, display of minibuffer depth;
     ‘button.el’, the library that implements clickable buttons;
     ‘face-remap.el’, a package for changing the default face in
     individual buffers; and ‘macroexp.el’ for macro-expansion.  He also
     worked on an early version of the lexical binding code.

   • David Bakhash wrote ‘strokes.el’, a mode for controlling Emacs by
     moving the mouse in particular patterns.

   • Juanma Barranquero wrote ‘emacs-lock.el’ (based on the original
     version by Tom Wurgler), which makes it harder to exit with
     valuable buffers unsaved; and ‘frameset.el’, for saving and
     restoring the frame/window setup.  He also made many other
     contributions to other areas, including MS Windows support.

   • Eli Barzilay wrote ‘calculator.el’, a desktop calculator for Emacs.

   • Steven L. Baur wrote ‘footnote.el’ which lets you include footnotes
     in email messages; and ‘gnus-audio.el’ and ‘earcon.el’, which
     provide sound effects for Gnus.  He also wrote ‘gnus-setup.el’.

   • Alexander L. Belikoff, Sergey Berezin, Sacha Chua, David Edmondson,
     Noah Friedman, Andreas Fuchs, Mario Lang, Ben Mesander, Lawrence
     Mitchell, Gergely Nagy, Michael Olson, Per Persson, Jorgen Schäfer,
     Alex Schroeder, and Tom Tromey wrote ERC, an advanced Internet
     Relay Chat client (for more information, see the file ‘CREDITS’ in
     the ERC distribution).

   • Scott Bender, Michael Brouwer, Christophe de Dinechin, Carl Edman,
     Christian Limpach and Adrian Robert developed and maintained the
     NeXTstep port of Emacs.

   • Stephen Berman wrote ‘todo-mode.el’ (based on the original version
     by Oliver Seidel), a package for maintaining ‘TODO’ list files.

   • Anna M. Bigatti wrote ‘cal-html.el’, which produces HTML calendars.

   • Ray Blaak and Simon South wrote ‘opascal.el’, a mode for editing
     Object Pascal source code.

   • Martin Blais, Stefan Merten, and David Goodger wrote ‘rst.el’, a
     mode for editing reStructuredText documents.

   • Jim Blandy wrote Emacs 19’s input system, brought its configuration
     and build process up to the GNU coding standards, and contributed
     to the frame support and multi-face support.  Jim also wrote
     ‘tvi970.el’, terminal support for the TeleVideo 970 terminals; and
     co-wrote ‘wyse50.el’ (q.v.).

   • Per Bothner wrote ‘term.el’, a terminal emulator in an Emacs
     buffer.

   • Terrence M. Brannon wrote ‘landmark.el’, a neural-network robot
     that learns landmarks.

   • Frank Bresz wrote ‘diff.el’, a program to display ‘diff’ output.

   • Peter Breton implemented ‘dirtrack.el’, a library for tracking
     directory changes in shell buffers; ‘filecache.el’, which records
     which directories your files are in; ‘locate.el’, which interfaces
     to the ‘locate’ command; ‘find-lisp.el’, an Emacs Lisp emulation of
     the ‘find’ program; ‘net-utils.el’; and the “generic mode” feature.

   • Emmanuel Briot wrote ‘xml.el’, an XML parser for Emacs; and
     ‘ada-prj.el’, editing of Ada mode project files, as well as
     co-authoring ‘ada-mode.el’ and ‘ada-xref.el’.

   • Kevin Broadey wrote ‘foldout.el’, providing folding extensions to
     Emacs’s outline modes.

   • David M. Brown wrote ‘array.el’, for editing arrays and other
     tabular data.

   • Włodek Bzyl and Ryszard Kubiak wrote ‘ogonek.el’, a package for
     changing the encoding of Polish characters.

   • Bill Carpenter provided ‘feedmail.el’, a package for massaging
     outgoing mail messages and sending them through various popular
     mailers.

   • Per Cederqvist and Inge Wallin wrote ‘ewoc.el’, an Emacs widget for
     manipulating object collections.  Per Cederqvist, Inge Wallin, and
     Thomas Bellman wrote ‘avl-tree.el’, for balanced binary trees.

   • Hans Chalupsky wrote ‘advice.el’, an overloading mechanism for
     Emacs Lisp functions; and ‘trace.el’, a tracing facility for Emacs
     Lisp.

   • Chris Chase, Carsten Dominik, and J. D. Smith wrote IDLWAVE mode,
     for editing IDL and WAVE CL.

   • Bob Chassell wrote ‘texnfo-upd.el’, ‘texinfo.el’, and
     ‘makeinfo.el’, modes and utilities for working with Texinfo files;
     and ‘page-ext.el’, commands for extended page handling.  He also
     wrote the “Introduction to programming in Emacs Lisp” manual.

   • Jihyun Cho wrote ‘hanja-util.el’ and ‘hangul.el’, utilities for
     Korean Hanja.

   • Andrew Choi and Yamamoto Mitsuharu wrote the Carbon support, used
     prior to Emacs 23 for Mac OS. Yamamoto Mitsuharu continued to
     contribute to Mac OS support in the newer Nextstep port; and also
     improved support for multi-monitor displays.

   • Chong Yidong was the Emacs co-maintainer from Emacs 23 to 24.3.  He
     made many improvements to the Emacs display engine.  He also wrote
     ‘tabulated-list.el’, a generic major mode for lists of data; and
     improved support for themes and packages.

   • James Clark wrote SGML mode, a mode for editing SGML documents; and
     nXML mode, a mode for editing XML documents.  He also contributed
     to Emacs’s dumping procedures.

   • Mike Clarkson wrote ‘edt.el’, an emulation of DEC’s EDT editor.

   • Glynn Clements provided ‘gamegrid.el’ and a couple of games that
     use it, Snake and Tetris.

   • Andrew Cohen wrote ‘spam-wash.el’, to decode and clean email before
     it is analyzed for spam.

   • Edward O’Connor wrote ‘json.el’, a file for parsing and generating
     JSON files.

   • Georges Brun-Cottan and Stefan Monnier wrote ‘easy-mmode.el’, a
     package for easy definition of major and minor modes.

   • Andrew Csillag wrote M4 mode (‘m4-mode.el’).

   • Doug Cutting and Jamie Zawinski wrote ‘disass.el’, a disassembler
     for compiled Emacs Lisp code.

   • Mathias Dahl wrote ‘image-dired.el’, a package for viewing image
     files as “thumbnails”.

   • Julien Danjou wrote an implementation of “Desktop Notifications”
     (‘notifications.el’, and related packages for ERC and Gnus); and
     ‘color.el’, a library for general color manipulation.  He also made
     various contributions to Gnus.

   • Vivek Dasmohapatra wrote ‘htmlfontify.el’, to convert a buffer or
     source tree to HTML.

   • Matthieu Devin wrote ‘delsel.el’, a package to make newly-typed
     text replace the current selection.

   • Eric Ding wrote ‘goto-addr.el’,

   • Jan Djärv added support for the GTK+ toolkit and X drag-and-drop.
     He also wrote ‘dynamic-setting.el’.

   • Carsten Dominik wrote RefTeX, a package for setting up labels and
     cross-references in LaTeX documents; and co-wrote IDLWAVE mode
     (q.v.).  He was the original author of Org mode, for maintaining
     notes, todo lists, and project planning.  Bastien Guerry
     subsequently took over maintainership.  Benjamin Andresen, Thomas
     Baumann, Joel Boehland, Jan Böcker, Lennart Borgman, Baoqiu Cui,
     Dan Davison, Christian Egli, Eric S. Fraga, Daniel German, Chris
     Gray, Konrad Hinsen, Tassilo Horn, Philip Jackson, Martyn Jago,
     Thorsten Jolitz, Jambunathan K, Tokuya Kameshima, Sergey Litvinov,
     David Maus, Ross Patterson, Juan Pechiar, Sebastian Rose, Eric
     Schulte, Paul Sexton, Ulf Stegemann, Andy Stewart, Christopher
     Suckling, David O’Toole, John Wiegley, Zhang Weize, Piotr
     Zieliński, and others also wrote various Org mode components.  For
     more information, *note (org)History and Acknowledgments::.

   • Scott Draves wrote ‘tq.el’, help functions for maintaining
     transaction queues between Emacs and its subprocesses.

   • Benjamin Drieu wrote ‘pong.el’, an implementation of the classical
     pong game.

   • Viktor Dukhovni wrote support for dumping under SunOS version 4.

   • John Eaton and Kurt Hornik wrote Octave mode.

   • Rolf Ebert, Markus Heritsch, and Emmanuel Briot wrote Ada mode.

   • Paul Eggert integrated the Gnulib portability library, and made
     many other portability fixes to the C code; as well as his
     contributions to VC and the calendar.

   • Stephen Eglen wrote ‘mspools.el’, which tells you which Procmail
     folders have mail waiting in them.

   • Torbjörn Einarsson wrote ‘f90.el’, a mode for Fortran 90 files.

   • Tsugutomo Enami co-wrote the support for international character
     sets.

   • David Engster wrote ‘mairix.el’ and ‘nnmairix.el’, an interface to
     the Mairix indexing tool.

   • Hans Henrik Eriksen wrote ‘simula.el’, a mode for editing SIMULA 87
     code.

   • Michael Ernst wrote ‘reposition.el’, a command for recentering a
     function’s source code and preceding comment on the screen.

   • Ata Etemadi wrote ‘cdl.el’, functions for working with Common Data
     Language source code.

   • Frederick Farnbach implemented ‘morse.el’, which converts text to
     Morse code.

   • Oscar Figueiredo wrote EUDC, the Emacs Unified Directory Client,
     which is an interface to directory servers via LDAP, CCSO PH/QI, or
     BBDB; and ‘ldap.el’, the LDAP client interface.

   • Fred Fish wrote the support for dumping COFF executable files.

   • Karl Fogel wrote ‘bookmark.el’, which implements named
     placeholders; ‘mail-hist.el’, a history mechanism for outgoing mail
     messages; and ‘saveplace.el’, for preserving point’s location in
     files between editing sessions.

   • Gary Foster wrote ‘scroll-all.el’, a mode for scrolling several
     buffers together.

   • Romain Francoise contributed ACL (Access Control List) support, for
     preserving extended file attributes on backup and copy.

   • Noah Friedman wrote ‘rlogin.el’, an interface to Rlogin,
     ‘type-break.el’, which reminds you to take periodic breaks from
     typing, and ‘eldoc-mode’, a mode to show the defined parameters or
     the doc string for the Lisp function near point.

   • Shigeru Fukaya wrote a testsuite for the byte-compiler.

   • Keith Gabryelski wrote ‘hexl.el’, a mode for editing binary files.

   • Kevin Gallagher rewrote and enhanced the EDT emulation, and wrote
     ‘flow-ctrl.el’, a package for coping with unsuppressible XON/XOFF
     flow control.

   • Fabián E. Gallina rewrote ‘python.el’, the major mode for the
     Python programming language used in Emacs 24.3 onwards.

   • Kevin Gallo added multiple-frame support for Windows NT and wrote
     ‘w32-win.el’, support functions for the MS-Windows window system.

   • Juan León Lahoz García wrote ‘wdired.el’, a package for performing
     file operations by directly editing Dired buffers.

   • Howard Gayle wrote much of the C and Lisp code for display tables
     and case tables.  He also wrote ‘rot13.el’, a command to display
     the plain-text form of a buffer encoded with the Caesar cipher;
     ‘vt100-led.el’, a package for controlling the LEDs on
     VT100-compatible terminals; and much of the support for ISO-8859
     European character sets (which includes ‘iso-ascii.el’,
     ‘iso-insert.el’, ‘iso-swed.el’, ‘iso-syntax.el’, ‘iso-transl.el’,
     and ‘swedish.el’).

   • Stephen Gildea made the Emacs quick reference card, and made many
     contributions for ‘time-stamp.el’, a package for maintaining
     last-change time stamps in files.

   • Julien Gilles wrote ‘gnus-ml.el’, a mailing list minor mode for
     Gnus.

   • David Gillespie wrote the Common Lisp compatibility packages;
     ‘Calc’, an advanced calculator and mathematical tool, since
     maintained and developed by Jay Belanger; ‘complete.el’, a partial
     completion mechanism; and ‘edmacro.el’, a package for editing
     keyboard macros.

   • Bob Glickstein wrote ‘sregex.el’, a facility for writing regexps
     using a Lisp-like syntax.

   • Boris Goldowsky wrote ‘avoid.el’, a package to keep the mouse
     cursor out of the way of the text cursor; ‘shadowfile.el’, a
     package for keeping identical copies of files in more than one
     place; ‘format.el’, a package for reading and writing files in
     various formats; ‘enriched.el’, a package for saving text
     properties in files; ‘facemenu.el’, a package for specifying faces;
     and ‘descr-text.el’, describing text and character properties.

   • Michelangelo Grigni wrote ‘ffap.el’ which visits a file, taking the
     file name from the buffer.

   • Odd Gripenstam wrote ‘dcl-mode.el’ for editing DCL command files.

   • Michael Gschwind wrote ‘iso-cvt.el’, a package to convert between
     the ISO 8859-1 character set and the notations for non-ASCII
     characters used by TeX and net tradition.

   • Bastien Guerry wrote ‘gnus-bookmark.el’, bookmark support for Gnus;
     as well as helping to maintain Org mode (q.v.).

   • Henry Guillaume wrote ‘find-file.el’, a package to visit files
     related to the currently visited file.

   • Doug Gwyn wrote the portable ‘alloca’ implementation.

   • Ken’ichi Handa implemented most of the support for international
     character sets, and wrote most of the Emacs 23 font handling code.
     He also wrote ‘composite.el’, which provides a minor mode that
     composes characters automatically when they are displayed;
     ‘isearch-x.el’, a facility for searching non-ASCII text; and
     ‘ps-bdf.el’, a BDF font support for printing non-ASCII text on a
     PostScript printer.  Together with Naoto Takahashi, he wrote
     ‘quail.el’, an input facility for typing non-ASCII text from an
     ASCII keyboard.

   • Jesper Harder wrote ‘yenc.el’, for decoding yenc encoded messages.

   • Alexandru Harsanyi wrote a library for accessing SOAP web services.

   • K. Shane Hartman wrote ‘chistory.el’ and ‘echistory.el’, packages
     for browsing command history lists; ‘electric.el’ and ‘helper.el’,
     which provide an alternative command loop and appropriate help
     facilities; ‘emacsbug.el’, a package for reporting Emacs bugs;
     ‘picture.el’, a mode for editing ASCII pictures; and ‘view.el’, a
     package for perusing files and buffers without editing them.

   • John Heidemann wrote ‘mouse-copy.el’ and ‘mouse-drag.el’, which
     provide alternative mouse-based editing and scrolling features.

   • Jon K Hellan wrote ‘utf7.el’, support for mail-safe transformation
     format of Unicode.

   • Karl Heuer wrote the original blessmail script, implemented the
     ‘intangible’ text property, and rearranged the structure of the
     ‘Lisp_Object’ type to allow for more data bits.

   • Manabu Higashida ported Emacs to MS-DOS.

   • Anders Holst wrote ‘hippie-exp.el’, a versatile completion and
     expansion package.

   • Tassilo Horn wrote DocView mode, allowing viewing of PDF,
     PostScript and DVI documents.

   • Tom Houlder wrote ‘mantemp.el’, which generates manual C++ template
     instantiations.

   • Joakim Hove wrote ‘html2text.el’, a html to plain text converter.

   • Denis Howe wrote ‘browse-url.el’, a package for invoking a WWW
     browser to display a URL.

   • Lars Magne Ingebrigtsen did a major redesign of the Gnus
     news-reader and wrote many of its parts.  Several of these are now
     general components of Emacs, including: ‘dns.el’ for Domain Name
     Service lookups; ‘format-spec.el’ for formatting arbitrary format
     strings; ‘netrc.el’ for parsing of ‘.netrc’ files; and
     ‘time-date.el’ for general date and time handling.  He also wrote
     ‘network-stream.el’, for opening network processes; ‘url-queue.el’,
     for controlling parallel downloads of URLs; and implemented libxml2
     support.  He also wrote ‘eww.el’, an Emacs Lisp web browser; and
     implemented native zlib decompression.  Components of Gnus have
     also been written by: Nagy Andras, David Blacka, Scott Byer,
     Ludovic Courtès, Julien Danjou, Kevin Greiner, Kai Großjohann, Joe
     Hildebrand, Paul Jarc, Simon Josefsson, Sascha Lüdecke, David
     Moore, Jim Radford, Benjamin Rutt, Raymond Scholz, Thomas Steffen,
     Reiner Steib, Jan Tatarik, Didier Verna, Ilja Weis, Katsumi
     Yamaoka, Teodor Zlatanov, and others (*note (gnus)Contributors::).

   • Andrew Innes contributed extensively to the MS-Windows support.

   • Seiichiro Inoue improved Emacs’s XIM support.

   • Philip Jackson wrote ‘find-cmd.el’, to build a ‘find’ command-line.

   • Ulf Jasper wrote ‘icalendar.el’, a package for converting Emacs
     diary entries to and from the iCalendar format; ‘newsticker.el’, an
     RSS and Atom based Newsticker; and ‘bubbles.el’, a puzzle game.

   • Kyle Jones wrote ‘life.el’, a package to play Conway’s “life” game.

   • Terry Jones wrote ‘shadow.el’, a package for finding potential
     load-path problems when some Lisp file “shadows” another.

   • Simon Josefsson wrote ‘dns-mode.el’, an editing mode for Domain
     Name System master files; ‘dig.el’, a Domain Name System interface;
     ‘flow-fill.el’, a package for interpreting RFC2646 formatted text
     in messages; ‘fringe.el’, a package for customizing the fringe;
     ‘imap.el’, an Emacs Lisp library for talking to IMAP servers;
     ‘password-cache.el’, a password reader; ‘nnimap.el’, the IMAP
     back-end for Gnus; ‘url-imap.el’ for the URL library; ‘rfc2104.el’,
     a hashed message authentication facility; the Gnus S/MIME and Sieve
     components; and ‘tls.el’ and ‘starttls.el’ for the Transport Layer
     Security protocol.

   • Arne Jørgensen wrote ‘latexenc.el’, a package to automatically
     guess the correct coding system in LaTeX files.

   • Alexandre Julliard wrote ‘vc-git.el’, support for the Git version
     control system.

   • Tomoji Kagatani implemented ‘smtpmail.el’, used for sending out
     mail with SMTP.

   • Ivan Kanis wrote ‘vc-hg.el’, support for the Mercurial version
     control system.

   • Henry Kautz wrote ‘bib-mode.el’, a mode for maintaining
     bibliography databases compatible with ‘refer’ (the ‘troff’
     version) and ‘lookbib’, and ‘refbib.el’, a package to convert those
     databases to the format used by the LaTeX text formatting package.

   • Taichi Kawabata added support for Devanagari script and the Indian
     languages, and wrote ‘ucs-normalize.el’ for Unicode normalization.

   • Taro Kawagishi implemented the MD4 Message Digest Algorithm in
     Lisp; and wrote ‘ntlm.el’ and ‘sasl-ntlm.el’ for NT LanManager
     authentication support.

   • Howard Kaye wrote ‘sort.el’, commands to sort text in Emacs
     buffers.

   • Michael Kifer wrote ‘ediff’, an interactive interface to the
     ‘diff’, ‘patch’, and ‘merge’ programs; and Viper, an emulator of
     the VI editor.

   • Richard King wrote the first version of ‘userlock.el’ and
     ‘filelock.c’, which provide simple support for multiple users
     editing the same file.  He also wrote the initial version of
     ‘uniquify.el’, a facility to make buffer names unique by adding
     parts of the file’s name to the buffer name.

   • Peter Kleiweg wrote ‘ps-mode.el’, a mode for editing PostScript
     files and running a PostScript interpreter interactively from
     within Emacs.

   • Karel Klíč contributed SELinux support, for preserving the
     Security-Enhanced Linux context of files on backup and copy.

   • Shuhei Kobayashi wrote ‘hex-util.el’, for operating on hexadecimal
     strings; and support for HMAC (Keyed-Hashing for Message
     Authentication).

   • Pavel Kobyakov wrote ‘flymake.el’, a minor mode for performing
     on-the-fly syntax checking.

   • David M. Koppelman wrote ‘hi-lock.el’, a minor mode for interactive
     automatic highlighting of parts of the buffer text.

   • Koseki Yoshinori wrote ‘iimage.el’, a minor mode for displaying
     inline images.

   • Robert Krawitz wrote the original ‘xmenu.c’, part of Emacs’s pop-up
     menu support.

   • Sebastian Kremer wrote ‘dired-mode’, with contributions by Lawrence
     R. Dodd.  He also wrote ‘ls-lisp.el’, a Lisp emulation of the ‘ls’
     command for platforms that don’t have ‘ls’ as a standard program.

   • David Kågedal wrote ‘tempo.el’, providing support for easy
     insertion of boilerplate text and other common constructions.

   • Igor Kuzmin wrote ‘cconv.el’, providing closure conversion for
     statically scoped Emacs lisp.

   • Daniel LaLiberte wrote ‘edebug.el’, a source-level debugger for
     Emacs Lisp; ‘cl-specs.el’, specifications to help ‘edebug’ debug
     code written using David Gillespie’s Common Lisp support; and
     ‘isearch.el’, Emacs’s incremental search minor mode.  He also
     co-wrote ‘hideif.el’ (q.v.).

   • Karl Landstrom and Daniel Colascione wrote ‘js.el’, a mode for
     editing JavaScript.

   • Vinicius Jose Latorre wrote the Emacs printing facilities, as well
     as ‘ps-print’ (with Jim Thompson, Jacques Duthen, and Kenichi
     Handa), a package for pretty-printing Emacs buffers to PostScript
     printers; ‘delim-col.el’, a package to arrange text into columns;
     ‘ebnf2ps.el’, a package that translates EBNF grammar to a syntactic
     chart that can be printed to a PostScript printer; and
     ‘whitespace.el’, a package that detects and cleans up excess
     whitespace in a file (building on an earlier version by Rajesh
     Vaidheeswarran).

   • Frederic Lepied wrote ‘expand.el’, which uses the abbrev mechanism
     for inserting programming constructs.

   • Peter Liljenberg wrote ‘elint.el’, a Lint-style code checker for
     Emacs Lisp programs.

   • Lars Lindberg wrote ‘msb.el’, which provides more flexible menus
     for buffer selection; co-wrote ‘imenu.el’ (q.v.); and rewrote
     ‘dabbrev.el’, originally written by Don Morrison.

   • Anders Lindgren wrote ‘autorevert.el’, a package for automatically
     reverting files visited by Emacs that were changed on disk;
     ‘cwarn.el’, a package to highlight suspicious C and C++ constructs;
     and ‘follow.el’, a minor mode to synchronize windows that show the
     same buffer.

   • Thomas Link wrote ‘filesets.el’, a package for handling sets of
     files.

   • Juri Linkov wrote ‘misearch.el’, extending isearch to multi-buffer
     searches; the code in ‘files-x.el’ for handling file- and
     directory-local variables; and the ‘info-finder’ feature that
     creates a virtual Info manual of package keywords.

   • Leo Liu wrote ‘pcmpl-x.el’, providing completion for miscellaneous
     external tools; and revamped support for Octave in Emacs 24.4.

   • Károly Lőrentey wrote the “multi-terminal” code, which allows Emacs
     to run on graphical and text terminals simultaneously.

   • Martin Lorentzon wrote ‘vc-annotate.el’, support for version
     control annotation.

   • Dave Love wrote much of the code dealing with Unicode support and
     Latin-N unification.  He added support for many coding systems,
     including the various UTF-7 and UTF-16 coding systems.  He also
     wrote ‘autoarg-mode’, a global minor mode whereby digit keys supply
     prefix arguments; ‘autoarg-kp-mode’, which redefines the keypad
     numeric keys to digit arguments; ‘autoconf.el’, a mode for editing
     Autoconf files; ‘cfengine.el’, a mode for editing Cfengine files;
     ‘elide-head.el’, a package for eliding boilerplate text from file
     headers; ‘hl-line.el’, a minor mode for highlighting the line in
     the current window on which point is; ‘cap-words.el’, a minor mode
     for motion in “CapitalizedWordIdentifiers”; ‘latin1-disp.el’, a
     package that lets you display ISO 8859 characters on Latin-1
     terminals by setting up appropriate display tables; the version of
     ‘python.el’ used prior to Emacs 24.3; ‘smiley.el’, a facility for
     displaying smiley faces; ‘sym-comp.el’, a library for performing
     mode-dependent symbol completion; ‘benchmark.el’ for timing code
     execution; and ‘tool-bar.el’, a mode to control the display of the
     Emacs tool bar.  With Riccardo Murri he wrote ‘vc-bzr.el’, support
     for the Bazaar version control system.

   • Eric Ludlam wrote the Speedbar package; ‘checkdoc.el’, for checking
     doc strings in Emacs Lisp programs; ‘dframe.el’, providing
     dedicated frame support modes; ‘ezimage.el’, a generalized way to
     place images over text; ‘chart.el’ for drawing bar charts etc.; and
     the EIEIO (Enhanced Implementation of Emacs Interpreted Objects)
     package.  He was also the main author of the CEDET (Collection of
     Emacs Development Environment Tools) package.  Portions were also
     written by Jan Moringen, David Ponce, and Joakim Verona.

   • Roland McGrath wrote ‘compile.el’ (since updated by Daniel
     Pfeiffer), a package for running compilations in a buffer, and then
     visiting the locations reported in error messages; ‘etags.el’, a
     package for jumping to function definitions and searching or
     replacing in all the files mentioned in a ‘TAGS’ file; with
     Sebastian Kremer ‘find-dired.el’, for using ‘dired’ commands on
     output from the ‘find’ program; ‘grep.el’ for running the ‘grep’
     command; ‘map-ynp.el’, a general purpose boolean question-asker;
     ‘autoload.el’, providing semi-automatic maintenance of autoload
     files.

   • Alan Mackenzie wrote the integrated AWK support in CC Mode, and
     maintained CC Mode from Emacs 22 onwards.

   • Michael McNamara and Wilson Snyder wrote Verilog mode.

   • Christopher J. Madsen wrote ‘decipher.el’, a package for cracking
     simple substitution ciphers.

   • Neil M. Mager wrote ‘appt.el’, functions to notify users of their
     appointments.  It finds appointments recorded in the diary files
     used by the ‘calendar’ package.

   • Ken Manheimer wrote ‘allout.el’, a mode for manipulating and
     formatting outlines, and ‘icomplete.el’, which provides incremental
     completion feedback in the minibuffer.

   • Bill Mann wrote ‘perl-mode.el’, a mode for editing Perl code.

   • Brian Marick and Daniel LaLiberte wrote ‘hideif.el’, support for
     hiding selected code within C ‘#ifdef’ clauses.

   • Simon Marshall wrote ‘regexp-opt.el’, which generates a regular
     expression from a list of strings; and the fast-lock and lazy-lock
     font-lock support modes.  He also extended ‘comint.el’ and
     ‘shell.el’, originally written by Olin Shivers.

   • Bengt Martensson, Dirk Herrmann, Marc Shapiro, Mike Newton, Aaron
     Larson, and Stefan Schoef, wrote ‘bibtex.el’, a mode for editing
     BibTeX bibliography files.

   • Charlie Martin wrote ‘autoinsert.el’, which provides automatic
     mode-sensitive insertion of text into new files.

   • Yukihiro Matsumoto and Nobuyoshi Nakada wrote Ruby-mode.

   • Tomohiro Matsuyama wrote the native Elisp profiler.

   • Thomas May wrote ‘blackbox.el’, a version of the traditional
     blackbox game.

   • David Megginson wrote ‘derived.el’, which allows one to define new
     major modes by inheriting key bindings and commands from existing
     major modes.

   • Will Mengarini wrote ‘repeat.el’, a command to repeat the preceding
     command with its arguments.

   • Richard Mlynarik wrote ‘cl-indent.el’, a package for indenting
     Common Lisp code; ‘ebuff-menu.el’, an “electric” browser for buffer
     listings; ‘ehelp.el’, bindings for browsing help screens; and
     ‘rfc822.el’, a parser for E-mail addresses in the RFC-822 format,
     used in mail messages and news articles.

   • Gerd Möllmann was the Emacs maintainer from the beginning of Emacs
     21 development until the release of 21.1.  He wrote the new display
     engine used from Emacs 21 onwards, and the asynchronous timers
     facility.  He also wrote ‘ebrowse’, the C++ browser; ‘jit-lock.el’,
     the Just-In-Time font-lock support mode; ‘tooltip.el’, a package
     for displaying tooltips; ‘authors.el’, a package for maintaining
     the ‘AUTHORS’ file; and ‘rx.el’, a regular expression constructor.

   • Stefan Monnier was the Emacs (co-)maintainer from Emacs 23 onwards.
     He added support for Arch and Subversion to VC, re-wrote much of
     the Emacs server to use the built-in networking primitives, and
     re-wrote the abbrev and minibuffer completion code for Emacs 23.
     He also wrote ‘PCL-CVS’, a directory-level front end to the CVS
     version control system; ‘reveal.el’, a minor mode for automatically
     revealing invisible text; ‘smerge-mode.el’, a minor mode for
     resolving ‘diff3’ conflicts; ‘diff-mode.el’, a mode for viewing and
     editing context diffs; ‘css-mode.el’ for Cascading Style Sheets;
     ‘bibtex-style.el’ for BibTeX Style files; ‘mpc.el’, a client for
     the “Music Player Daemon”; ‘smie.el’, a generic indentation engine;
     and ‘pcase.el’, implementing ML-style pattern matching.  In Emacs
     24, he integrated the lexical binding code, cleaned up the CL
     namespace (making it acceptable to use CL functions at runtime),
     added generalized variables to core Emacs Lisp, and implemented a
     new lightweight advice mechanism.

   • Morioka Tomohiko wrote several packages for MIME support in Gnus
     and elsewhere.

   • Sen Nagata wrote ‘crm.el’, a package for reading multiple strings
     with completion, and ‘rfc2368.el’, support for ‘mailto:’ URLs.

   • Erik Naggum wrote the time-conversion functions.  He also wrote
     ‘disp-table.el’, for dealing with display tables; ‘mailheader.el’,
     for parsing email headers; and ‘parse-time.el’, for parsing time
     strings.

   • Takahashi Naoto co-wrote ‘quail.el’ (q.v.), and wrote ‘robin.el’,
     another input method.

   • Thomas Neumann and Eric Raymond wrote ‘make-mode.el’, a mode for
     editing makefiles.

   • Thien-Thi Nguyen and Dan Nicolaescu wrote ‘hideshow.el’, a minor
     mode for selectively displaying blocks of text.

   • Dan Nicolaescu added support for running Emacs as a daemon.  He
     also wrote ‘romanian.el’, support for editing Romanian text;
     ‘iris-ansi.el’, support for running Emacs on SGI’s ‘xwsh’ and
     ‘winterm’ terminal emulators; and ‘vc-dir.el’, displaying the
     status of version-controlled directories.

   • Hrvoje Nikšić wrote ‘savehist.el’, for saving the minibuffer
     history between Emacs sessions.

   • Jeff Norden wrote ‘kermit.el’, a package to help the Kermit dialup
     communications program run comfortably in an Emacs shell buffer.

   • Andrew Norman wrote ‘ange-ftp.el’, providing transparent FTP
     support.

   • Kentaro Ohkouchi created the Emacs icons used beginning with Emacs
     23.

   • Christian Ohler wrote ‘ert.el’, a library for automated regression
     testing.

   • Alexandre Oliva wrote ‘gnus-mlspl.el’, a group params-based mail
     splitting mechanism.

   • Takaaki Ota wrote ‘table.el’, a package for creating and editing
     embedded text-based tables.

   • Pieter E. J. Pareit wrote ‘mixal-mode.el’, an editing mode for the
     MIX assembly language.

   • David Pearson wrote ‘quickurl.el’, a simple method of inserting a
     URL into the current buffer based on text at point; ‘5x5.el’, a
     game to fill all squares on the field.

   • Jeff Peck wrote ‘sun.el’, key bindings for sunterm keys.

   • Damon Anton Permezel wrote ‘hanoi.el’, an animated demonstration of
     the “Towers of Hanoi” puzzle.

   • William M. Perry wrote ‘mailcap.el’ (with Lars Magne Ingebrigtsen),
     a MIME media types configuration facility; ‘mwheel.el’, a package
     for supporting mouse wheels; co-wrote (with Dave Love) ‘socks.el’,
     a Socks v5 client; and developed the URL package.

   • Per Persson wrote ‘gnus-vm.el’, the VM interface for Gnus.

   • Jens Petersen wrote ‘find-func.el’, which makes it easy to find the
     source code for an Emacs Lisp function or variable.

   • Daniel Pfeiffer wrote ‘conf-mode.el’, a mode for editing
     configuration files; ‘copyright.el’, a package for updating
     copyright notices in files; ‘executable.el’, a package for
     executing interpreter scripts; ‘sh-script.el’, a mode for editing
     shell scripts; ‘skeleton.el’, implementing a concise language for
     writing statement skeletons; and ‘two-column.el’, a minor mode for
     simultaneous two-column editing.

     Daniel also rewrote ‘apropos.el’ (originally written by Joe Wells),
     for finding commands, functions, and variables matching a regular
     expression; and, together with Jim Blandy, co-authored ‘wyse50.el’,
     support for Wyse 50 terminals.  He also co-wrote ‘compile.el’
     (q.v.) and ‘ada-stmt.el’.

   • Richard L. Pieri wrote ‘pop3.el’, a Post Office Protocol (RFC 1460)
     interface for Emacs.

   • Fred Pierresteguy and Paul Reilly made Emacs work with X Toolkit
     widgets.

   • François Pinard, Greg McGary, and Bruno Haible wrote ‘po.el’,
     support for PO translation files.

   • Christian Plaunt wrote ‘soundex.el’, an implementation of the
     Soundex algorithm for comparing English words by their
     pronunciation.

   • David Ponce wrote ‘recentf.el’, a package that puts a menu of
     recently visited files in the Emacs menu bar; ‘ruler-mode.el’, a
     minor mode for displaying a ruler in the header line; and
     ‘tree-widget.el’, a package to display hierarchical data
     structures.

   • Francesco A. Potortì wrote ‘cmacexp.el’, providing a command which
     runs the C preprocessor on a region of a file and displays the
     results.  He also expanded and redesigned the ‘etags’ program.

   • Michael D. Prange and Steven A. Wood wrote ‘fortran.el’, a mode for
     editing Fortran code.

   • Ashwin Ram wrote ‘refer.el’, commands to look up references in
     bibliography files by keyword.

   • Eric S. Raymond wrote ‘vc.el’, an interface to the RCS and SCCS
     source code version control systems, with Paul Eggert; ‘gud.el’, a
     package for running source-level debuggers like GDB and SDB in
     Emacs; ‘asm-mode.el’, a mode for editing assembly language code;
     ‘AT386.el’, terminal support package for IBM’s AT keyboards;
     ‘cookie1.el’, support for “fortune-cookie” programs like ‘yow.el’
     and ‘spook.el’; ‘finder.el’, a package for finding Emacs Lisp
     packages by keyword and topic; ‘keyswap.el’, code to swap the <BS>
     and <DEL> keys; ‘loadhist.el’, functions for loading and unloading
     Emacs features; ‘lisp-mnt.el’, functions for working with the
     special headers used in Emacs Lisp library files; and code to set
     and make use of the ‘load-history’ lisp variable, which records the
     source file from which each lisp function loaded into Emacs came.

   • Edward M. Reingold wrote the calendar and diary support, with
     contributions from Stewart Clamen (‘cal-mayan.el’), Nachum
     Dershowitz (‘cal-hebrew.el’), Paul Eggert (‘cal-dst.el’), Steve
     Fisk (‘cal-tex.el’), Michael Kifer (‘cal-x.el’), Lara Rios
     (‘cal-menu.el’), and Denis B. Roegel (‘solar.el’).  Andy Oram
     contributed to its documentation.  Reingold also contributed to
     ‘tex-mode.el’, a mode for editing TeX files, as did William F.
     Schelter, Dick King, Stephen Gildea, Michael Prange, and Jacob
     Gore.

   • David Reitter wrote ‘mailclient.el’ which can send mail via the
     system’s designated mail client.

   • Alex Rezinsky wrote ‘which-func.el’, a mode that shows the name of
     the current function in the mode line.

   • Rob Riepel wrote ‘vt-control.el’, providing some control functions
     for the DEC VT line of terminals.

   • Nick Roberts wrote ‘t-mouse.el’, for mouse support in text
     terminals; and ‘gdb-ui.el’, a graphical user interface to GDB.
     Together with Dmitry Dzhus, he wrote ‘gdb-mi.el’, the successor to
     ‘gdb-ui.el’.

   • Danny Roozendaal implemented ‘handwrite.el’, which converts text
     into “handwriting”.

   • Markus Rost wrote ‘cus-test.el’, a testing framework for customize.

   • Guillermo J. Rozas wrote ‘scheme.el’, a mode for editing Scheme and
     DSSSL code.

   • Martin Rudalics implemented improved display-buffer handling in
     Emacs 24; and implemented “pixel-wise” resizing of windows and
     frames.

   • Ivar Rummelhoff wrote ‘winner.el’, which records recent window
     configurations so you can move back to them.

   • Jason Rumney ported the Emacs 21 display engine to MS-Windows, and
     has contributed extensively to the MS-Windows port of Emacs.

   • Wolfgang Rupprecht wrote Emacs 19’s floating-point support
     (including ‘float-sup.el’ and ‘floatfns.c’).

   • Kevin Ryde wrote ‘info-xref.el’, a library for checking references
     in Info files.

   • James B. Salem and Brewster Kahle wrote ‘completion.el’, providing
     dynamic word completion.

   • Holger Schauer wrote ‘fortune.el’, a package for using fortune in
     message signatures.

   • William Schelter wrote ‘telnet.el’, support for ‘telnet’ sessions
     within Emacs.

   • Ralph Schleicher wrote ‘battery.el’, a package for displaying
     laptop computer battery status, and ‘info-look.el’, a package for
     looking up Info documentation for symbols in the buffer.

   • Michael Schmidt and Tom Perrine wrote ‘modula2.el’, a mode for
     editing Modula-2 code, based on work by Mick Jordan and Peter
     Robinson.

   • Ronald S. Schnell wrote ‘dunnet.el’, a text adventure game.

   • Philippe Schnoebelen wrote ‘gomoku.el’, a Go Moku game played
     against Emacs; and ‘mpuz.el’, a multiplication puzzle.

   • Jan Schormann wrote ‘solitaire.el’, an implementation of the
     Solitaire game.

   • Alex Schroeder wrote ‘ansi-color.el’, a package for translating
     ANSI color escape sequences to Emacs faces; ‘sql.el’, a package for
     interactively running an SQL interpreter in an Emacs buffer;
     ‘cus-theme.el’, an interface for custom themes; ‘master.el’, a
     package for making a buffer ‘master’ over another; and
     ‘spam-stat.el’, for statistical detection of junk email.  He also
     wrote parts of the IRC client ERC (q.v.).

   • Randal Schwartz wrote ‘pp.el’, a pretty-printer for lisp objects.

   • Manuel Serrano wrote the Flyspell package, which does spell
     checking as you type.

   • Hovav Shacham wrote ‘windmove.el’, a set of commands for selecting
     windows based on their geometrical position on the frame.

   • Stanislav Shalunov wrote ‘uce.el’, for responding to unsolicited
     commercial email.

   • Richard Sharman wrote ‘hilit-chg.el’, which uses colors to show
     recent editing changes.

   • Olin Shivers wrote ‘comint.el’, a library for modes running
     interactive command-line-oriented subprocesses, and ‘shell.el’, for
     running inferior shells (both since extended by Simon Marshall);
     ‘cmuscheme.el’, for running inferior Scheme processes;
     ‘inf-lisp.el’, for running inferior Lisp process.

   • Espen Skoglund wrote ‘pascal.el’, a mode for editing Pascal code.

   • Rick Sladkey wrote ‘backquote.el’, a lisp macro for creating
     mostly-constant data.

   • Lynn Slater wrote ‘help-macro.el’, a macro for writing interactive
     help for key bindings.

   • Chris Smith wrote ‘icon.el’, a mode for editing Icon code.

   • David Smith wrote ‘ielm.el’, a mode for interacting with the Emacs
     Lisp interpreter as a subprocess.

   • Paul D. Smith wrote ‘snmp-mode.el’.

   • William Sommerfeld wrote ‘scribe.el’, a mode for editing Scribe
     files, and ‘server.el’, a package allowing programs to send files
     to an extant Emacs job to be edited.

   • Andre Spiegel made many contributions to the Emacs Version Control
     package, and in particular made it support multiple back ends.

   • Michael Staats wrote ‘pc-select.el’, which rebinds keys for
     selecting regions to follow many other systems.

   • Richard Stallman invented Emacs.  He is the original author of GNU
     Emacs, and has been Emacs maintainer over several non-contiguous
     periods.  In addition to much of the “core” Emacs code, he has
     written ‘easymenu.el’, a facility for defining Emacs menus;
     ‘image-mode.el’, support for visiting image files; ‘menu-bar.el’,
     the Emacs menu bar support code; ‘paren.el’, a package to make
     matching parentheses stand out in color; and also co-authored
     portions of CC mode.

   • Sam Steingold wrote ‘gulp.el’, a facility for asking package
     maintainers for updated versions of their packages via e-mail, and
     ‘midnight.el’, a package for running a command every midnight.

   • Ake Stenhoff and Lars Lindberg wrote ‘imenu.el’, a framework for
     browsing indices made from buffer contents.

   • Peter Stephenson wrote ‘vcursor.el’, which implements a “virtual
     cursor” that you can move with the keyboard and use for copying
     text.

   • Ken Stevens wrote ‘ispell.el’, a spell-checker interface.

   • Kim F. Storm made many improvements to the Emacs display engine,
     process support, and networking support.  He also wrote
     ‘bindat.el’, a package for encoding and decoding binary data; CUA
     mode, which allows Emacs to emulate the standard CUA key bindings;
     ‘ido.el’, a package for selecting buffers and files quickly;
     ‘keypad.el’ for simplified keypad bindings; and ‘kmacro.el’, the
     keyboard macro facility.

   • Martin Stjernholm co-authored CC Mode, a major editing mode for C,
     C++, Objective-C, Java, Pike, CORBA IDL, and AWK code.

   • Steve Strassmann did not write ‘spook.el’, and even if he did, he
     really didn’t mean for you to use it in an anarchistic way.

   • Olaf Sylvester wrote ‘bs.el’, a package for manipulating Emacs
     buffers.

   • Tibor Šimko and Milan Zamazal wrote ‘slovak.el’, support for
     editing text in Slovak language.

   • Luc Teirlinck wrote ‘help-at-pt.el’, providing local help through
     the keyboard.

   • Jean-Philippe Theberge wrote ‘thumbs.el’, a package for viewing
     image files as “thumbnails”.

   • Spencer Thomas wrote the original ‘dabbrev.el’, providing a command
     which completes the partial word before point, based on other
     nearby words for which it is a prefix.  He also wrote the original
     dumping support.

   • Toru Tomabechi contributed to Tibetan support.

   • Markus Triska wrote ‘linum.el’, a minor mode that displays line
     numbers in the left margin.

   • Tom Tromey and Chris Lindblad wrote ‘tcl.el’, a mode for editing
     Tcl/Tk source files and running a Tcl interpreter as an Emacs
     subprocess.  Tom Tromey also wrote ‘bug-reference.el’, providing
     clickable links to bug reports; and the first version of the Emacs
     package system.

   • Eli Tziperman wrote ‘rmail-spam-filter.el’, a spam filter for
     RMAIL.

   • Daiki Ueno wrote ‘starttls.el’, support for Transport Layer
     Security protocol; ‘sasl-cram.el’ and ‘sasl-digest.el’ (with
     Kenichi Okada), and ‘sasl.el’, support for Simple Authentication
     and Security Layer (SASL); ‘plstore.el’ for secure storage of
     property lists; and the EasyPG (and its predecessor PGG) package,
     for GnuPG and PGP support.

   • Masanobu Umeda wrote GNUS, a feature-rich reader for Usenet news
     that was the ancestor of the current Gnus package.  He also wrote
     ‘rmailsort.el’, a package for sorting messages in RMAIL folders;
     ‘metamail.el’, an interface to the Metamail program;
     ‘gnus-kill.el’, the Kill File mode for Gnus; ‘gnus-mh.el’, an mh-e
     interface for Gnus; ‘gnus-msg.el’, a mail and post interface for
     Gnus; and ‘timezone.el’, providing functions for dealing with time
     zones.

   • Neil W. Van Dyke wrote ‘webjump.el’, a “hot links” package.

   • Didier Verna wrote ‘rect.el’, a package of functions for operations
     on rectangle regions of text.  He also contributed to Gnus (q.v.).

   • Joakim Verona implemented ImageMagick support.

   • Ulrik Vieth implemented ‘meta-mode.el’, for editing MetaFont code.

   • Geoffrey Voelker wrote the Windows NT support.  He also wrote
     ‘dos-w32.el’, functions shared by the MS-DOS and MS-Windows ports
     of Emacs, and ‘w32-fns.el’, MS-Windows specific support functions.

   • Johan Vromans wrote ‘forms.el’ and its associated files, a mode for
     filling in forms.  He also wrote ‘iso-acc.el’, a minor mode
     providing electric accent keys.

   • Colin Walters wrote Ibuffer, an enhanced buffer menu.

   • Barry Warsaw wrote ‘cc-mode.el’, a mode for editing C, C++, and
     Java code, based on earlier work by Dave Detlefs, Stewart Clamen,
     and Richard Stallman; ‘elp.el’, a profiler for Emacs Lisp programs;
     ‘man.el’, a mode for reading Unix manual pages; ‘regi.el’,
     providing an AWK-like functionality for use in lisp programs;
     ‘reporter.el’, providing customizable bug reporting for lisp
     packages; and ‘supercite.el’, a minor mode for quoting sections of
     mail messages and news articles.

   • Christoph Wedler wrote ‘antlr-mode.el’, a major mode for ANTLR
     grammar files.

   • Morten Welinder helped port Emacs to MS-DOS, and introduced face
     support into the MS-DOS port of Emacs.  He also wrote ‘desktop.el’,
     facilities for saving some of Emacs’s state between sessions;
     ‘timer.el’, the Emacs facility to run commands at a given time or
     frequency, or when Emacs is idle, and its C-level support code;
     ‘pc-win.el’, the MS-DOS “window-system” support; ‘internal.el’, an
     “internal terminal” emulator for the MS-DOS port of Emacs;
     ‘arc-mode.el’, the mode for editing compressed archives;
     ‘s-region.el’, commands for setting the region using the shift key
     and motion commands; and ‘dos-fns.el’, functions for use under
     MS-DOS.

   • Joe Wells wrote the original version of ‘apropos.el’ (q.v.);
     ‘resume.el’, support for processing command-line arguments after
     resuming a suspended Emacs job; and ‘mail-extr.el’, a package for
     extracting names and addresses from mail headers, with
     contributions from Jamie Zawinski.

   • Rodney Whitby and Reto Zimmermann wrote ‘vhdl-mode.el’, a major
     mode for editing VHDL source code.

   • John Wiegley wrote ‘align.el’, a set of commands for aligning text
     according to regular-expression based rules; ‘isearchb.el’ for fast
     buffer switching; ‘timeclock.el’, a package for keeping track of
     time spent on projects; the Bahá’í calendar support;
     ‘pcomplete.el’, a programmable completion facility; ‘remember.el’,
     a mode for jotting down things to remember; ‘eudcb-mab.el’, an
     address book backend for the Emacs Unified Directory Client; and
     ‘eshell’, a command shell implemented entirely in Emacs Lisp.  He
     also contributed to Org mode (q.v.).

   • Mike Williams wrote ‘thingatpt.el’, a library of functions for
     finding the “thing” (word, line, s-expression) at point.

   • Roland Winkler wrote ‘proced.el’, a system process editor.

   • Bill Wohler wrote MH-E, the Emacs interface to the MH mail system;
     making use of earlier work by James R. Larus.  Satyaki Das, Peter
     S. Galbraith, Stephen Gildea, and Jeffrey C. Honig also wrote
     various MH-E components.

   • Dale R. Worley wrote ‘emerge.el’, a package for interactively
     merging two versions of a file.

   • Francis J. Wright wrote ‘woman.el’, a package for browsing manual
     pages without the ‘man’ command.

   • Masatake Yamato wrote ‘ld-script.el’, an editing mode for GNU
     linker scripts, and contributed subword handling and style
     “guessing” in CC mode.

   • Jonathan Yavner wrote ‘testcover.el’, a package for keeping track
     of the testing status of Emacs Lisp code; ‘unsafep.el’ to determine
     if a Lisp form is safe; and the SES spreadsheet package.

   • Ryan Yeske wrote ‘rcirc.el’ a simple Internet Relay Chat client.

   • Ilya Zakharevich and Bob Olson wrote ‘cperl-mode.el’, a major mode
     for editing Perl code.  Ilya Zakharevich also wrote ‘tmm.el’, a
     mode for accessing the Emacs menu bar on a text-mode terminal.

   • Milan Zamazal wrote ‘czech.el’, support for editing Czech text;
     ‘glasses.el’, a package for easier reading of source code that uses
     illegible identifier names; and ‘tildify.el’, commands for adding
     hard spaces to text, TeX, and SGML/HTML files.

   • Victor Zandy wrote ‘zone.el’, a package for people who like to zone
     out in front of Emacs.

   • Eli Zaretskii made many standard Emacs features work on MS-DOS and
     Microsoft Windows.  He also wrote ‘tty-colors.el’, which implements
     transparent mapping of X colors to tty colors; and ‘rxvt.el’.  He
     implemented support for bidirectional text, and also menus on
     text-mode terminals.

   • Jamie Zawinski wrote much of the support for faces and X
     selections.  With Hallvard Furuseth, he wrote the optimizing byte
     compiler used from Emacs 19 onwards.  He also wrote
     ‘mailabbrev.el’, a package that provides automatic expansion of
     mail aliases, and ‘tar-mode.el’, which provides simple viewing and
     editing commands for tar files.

   • Andrew Zhilin created the Emacs 22 icons.

   • Shenghuo Zhu wrote ‘binhex.el’, a package for reading and writing
     binhex files; ‘mm-partial.el’, message/partial support for MIME
     messages; ‘rfc1843.el’, an HZ decoding package; ‘uudecode.el’, an
     Emacs Lisp decoder for uuencoded data; and ‘webmail.el’, an
     interface to Web mail.  He also wrote several other Gnus
     components.

   • Ian T. Zimmerman wrote ‘gametree.el’.

   • Reto Zimmermann wrote ‘vera-mode.el’.

   • Neal Ziring and Felix S. T. Wu wrote ‘vi.el’, an emulation of the
     VI text editor.

   • Ted Zlatanov (as well as his contributions to the Gnus newsreader)
     wrote an interface to the GnuTLS library, for secure network
     connections; and a futures facility for the URL library.

   • Detlev Zundel wrote ‘re-builder.el’, a package for building regexps
     with visual feedback.


File: emacs.info,  Node: Key Index,  Next: Option Index,  Prev: Acknowledgments,  Up: Top

Key (Character) Index
*********************

 [index ]
* Menu:

* ! (Dired):                             Shell Commands in Dired.
                                                              (line   6)
* " (TeX mode):                          TeX Editing.         (line  22)
* # (Dired):                             Flagging Many Files. (line  30)
* $ (Dired):                             Hiding Subdirectories.
                                                              (line  10)
* % & (Dired):                           Flagging Many Files. (line  50)
* % (Buffer Menu):                       Several Buffers.     (line  67)
* % (Buffer Menu) <1>:                   Several Buffers.     (line  72)
* % C (Dired):                           Transforming File Names.
                                                              (line  35)
* % d (Dired):                           Flagging Many Files. (line  56)
* % g (Dired):                           Marks vs Flags.      (line 123)
* % H (Dired):                           Transforming File Names.
                                                              (line  36)
* % l (Dired):                           Transforming File Names.
                                                              (line  29)
* % m (Dired):                           Marks vs Flags.      (line 113)
* % R (Dired):                           Transforming File Names.
                                                              (line  34)
* % S (Dired):                           Transforming File Names.
                                                              (line  37)
* % u (Dired):                           Transforming File Names.
                                                              (line  23)
* ( (Dired):                             Misc Dired Features. (line  34)
* * ! (Dired):                           Marks vs Flags.      (line  60)
* * % (Dired):                           Marks vs Flags.      (line 113)
* * * (Dired):                           Marks vs Flags.      (line  24)
* * / (Dired):                           Marks vs Flags.      (line  33)
* * ? (Dired):                           Marks vs Flags.      (line  65)
* * @ (Dired):                           Marks vs Flags.      (line  28)
* * c (Dired):                           Marks vs Flags.      (line  92)
* * C-n (Dired):                         Marks vs Flags.      (line  76)
* * C-p (Dired):                         Marks vs Flags.      (line  82)
* * DEL (Dired):                         Marks vs Flags.      (line  51)
* * m (Dired):                           Marks vs Flags.      (line  17)
* * s (Dired):                           Marks vs Flags.      (line  38)
* * t (Dired):                           Marks vs Flags.      (line  87)
* * u (Dired):                           Marks vs Flags.      (line  43)
* + (Dired):                             Misc Dired Features. (line   6)
* + (DocView mode):                      DocView Navigation.  (line  29)
* - (DocView mode):                      DocView Navigation.  (line  29)
* . (Calendar mode):                     Specified Dates.     (line  33)
* . (Dired):                             Flagging Many Files. (line  38)
* . (Rmail):                             Rmail Scrolling.     (line  26)
* / (Rmail):                             Rmail Scrolling.     (line  26)
* 1 (Buffer Menu):                       Several Buffers.     (line  96)
* 2 (Buffer Menu):                       Several Buffers.     (line 100)
* :d (Dired):                            Operating on Files.  (line 110)
* :e (Dired):                            Operating on Files.  (line 123)
* :s (Dired):                            Operating on Files.  (line 119)
* :v (Dired):                            Operating on Files.  (line 114)
* < (Calendar mode):                     Scroll Calendar.     (line  25)
* < (Dired):                             Subdirectory Motion. (line  30)
* < (Rmail):                             Rmail Motion.        (line  79)
* <F11>:                                 Frame Commands.      (line  29)
* = (Dired):                             Comparison in Dired. (line   6)
* > (Calendar mode):                     Scroll Calendar.     (line  25)
* > (Dired):                             Subdirectory Motion. (line  35)
* > (Rmail):                             Rmail Motion.        (line  79)
* ? (completion):                        Completion Commands. (line  33)
* ^ (Dired):                             Dired Visiting.      (line  45)
* ~ (Buffer Menu):                       Several Buffers.     (line  62)
* ~ (Dired):                             Flagging Many Files. (line  34)
* a (Calendar mode):                     Holidays.            (line  41)
* A (Dired):                             Operating on Files.  (line 136)
* a (Rmail):                             Rmail Labels.        (line  31)
* A k (Gnus Group mode):                 Gnus Group Buffer.   (line  21)
* A s (Gnus Group mode):                 Gnus Group Buffer.   (line  11)
* A u (Gnus Group mode):                 Gnus Group Buffer.   (line  16)
* A z (Gnus Group mode):                 Gnus Group Buffer.   (line  24)
* AltGr (MS-Windows):                    Windows Keyboard.    (line  94)
* b (Buffer Menu):                       Several Buffers.     (line 106)
* B (Dired):                             Operating on Files.  (line 131)
* b (Rmail summary):                     Rmail Summary Edit.  (line  91)
* b (Rmail):                             Rmail Basics.        (line  35)
* BS (MS-DOS):                           MS-DOS Keyboard.     (line   6)
* C (Dired):                             Operating on Files.  (line  32)
* c (Rmail):                             Rmail Reply.         (line 105)
* C-/:                                   Undo.                (line  21)
* C-@:                                   Setting Mark.        (line  25)
* C-a:                                   Moving Point.        (line  57)
* C-a (Calendar mode):                   Move to Beginning or End.
                                                              (line  10)
* C-b:                                   Moving Point.        (line  33)
* C-b (Calendar mode):                   Calendar Unit Motion.
                                                              (line  26)
* C-Break (MS-DOS):                      MS-DOS Keyboard.     (line  12)
* C-c ' (Picture mode):                  Insert in Picture.   (line   6)
* C-c , j:                               Semantic.            (line  30)
* C-c , J:                               Semantic.            (line  34)
* C-c , l:                               Semantic.            (line  46)
* C-c , <SPC>:                           Semantic.            (line  38)
* C-c . (C mode):                        Custom C Indent.     (line  26)
* C-c . (Picture mode):                  Insert in Picture.   (line   6)
* C-c . (Shell mode):                    Shell Ring.          (line  22)
* C-c / (Picture mode):                  Insert in Picture.   (line   6)
* C-c / (SGML mode):                     HTML Mode.           (line  47)
* C-c 8 (SGML mode):                     HTML Mode.           (line  52)
* C-c ; (Fortran mode):                  Fortran Comments.    (line  78)
* C-c < (GUD):                           Commands of GUD.     (line  66)
* C-c < (Picture mode):                  Insert in Picture.   (line   6)
* C-c > (GUD):                           Commands of GUD.     (line  71)
* C-c > (Picture mode):                  Insert in Picture.   (line   6)
* C-c ? (SGML mode):                     HTML Mode.           (line  43)
* C-c @ (Outline minor mode):            Outline Mode.        (line  33)
* C-c @ C-h:                             Hideshow.            (line  20)
* C-c @ C-l:                             Hideshow.            (line  20)
* C-c @ C-M-h:                           Hideshow.            (line  20)
* C-c @ C-M-s:                           Hideshow.            (line  20)
* C-c @ C-r:                             Hideshow.            (line  20)
* C-c @ C-s:                             Hideshow.            (line  20)
* C-c C-a (C mode):                      Electric C.          (line  28)
* C-c C-a (F90 mode):                    Fortran Motion.      (line  29)
* C-c C-a (Log Edit mode):               Log Buffer.          (line  43)
* C-c C-a (Message mode):                Mail Misc.           (line   6)
* C-c C-a (Outline mode):                Outline Visibility.  (line  67)
* C-c C-a (SGML mode):                   HTML Mode.           (line  25)
* C-c C-a (Shell mode):                  Shell Mode.          (line  38)
* C-c C-b (Help mode):                   Help Mode.           (line  25)
* C-c C-b (Message mode):                Header Editing.      (line  35)
* C-c C-b (Outline mode):                Outline Motion.      (line  29)
* C-c C-b (Picture mode):                Insert in Picture.   (line  37)
* C-c C-b (SGML mode):                   HTML Mode.           (line  33)
* C-c C-b (Shell mode):                  Shell Mode.          (line 100)
* C-c C-b (TeX mode):                    TeX Print.           (line  36)
* C-c C-c (C mode):                      Comment Commands.    (line  66)
* C-c C-c (customization buffer):        Changing a Variable. (line 134)
* C-c C-c (Edit Abbrevs):                Editing Abbrevs.     (line  39)
* C-c C-c (Edit Tab Stops):              Tab Stops.           (line  15)
* C-c C-c (Message mode):                Mail Sending.        (line  13)
* C-c C-c (Outline mode):                Outline Visibility.  (line  46)
* C-c C-c (Shell mode):                  Shell Mode.          (line  61)
* C-c C-c (TeX mode):                    TeX Print.           (line 142)
* C-c C-d (C Mode):                      Hungry Delete.       (line  19)
* C-c C-d (Fortran mode):                ForIndent Commands.  (line  28)
* C-c C-d (GUD):                         Commands of GUD.     (line  54)
* C-c C-d (Log Edit mode):               Log Buffer.          (line  34)
* C-c C-d (Org Mode):                    Org Organizer.       (line  13)
* C-c C-d (Outline mode):                Outline Visibility.  (line  51)
* C-c C-d (Picture mode):                Basic Picture.       (line  41)
* C-c C-d (SGML mode):                   HTML Mode.           (line  38)
* C-c C-<DEL> (C Mode):                  Hungry Delete.       (line  13)
* C-c C-<Delete> (C Mode):               Hungry Delete.       (line  19)
* C-c C-e (C mode):                      Other C Commands.    (line  36)
* C-c C-e (F90 mode):                    Fortran Motion.      (line  22)
* C-c C-e (LaTeX mode):                  LaTeX Editing.       (line  26)
* C-c C-e (Org mode):                    Org Authoring.       (line   6)
* C-c C-e (Outline mode):                Outline Visibility.  (line  46)
* C-c C-e (Shell mode):                  Shell Mode.          (line  91)
* C-c C-f (GUD):                         Commands of GUD.     (line  83)
* C-c C-f (Log Edit mode):               Log Buffer.          (line  34)
* C-c C-f (Outline mode):                Outline Motion.      (line  29)
* C-c C-f (Picture mode):                Insert in Picture.   (line  37)
* C-c C-f (SGML mode):                   HTML Mode.           (line  28)
* C-c C-f (Shell mode):                  Shell Mode.          (line  95)
* C-c C-f (TeX mode):                    TeX Print.           (line 101)
* C-c C-f C-b (Message mode):            Header Editing.      (line  30)
* C-c C-f C-c (Message mode):            Header Editing.      (line  30)
* C-c C-f C-f (Message mode):            Header Editing.      (line  30)
* C-c C-f C-r (Message mode):            Header Editing.      (line  30)
* C-c C-f C-s (Message mode):            Header Editing.      (line  30)
* C-c C-f C-t (Message mode):            Header Editing.      (line  30)
* C-c C-f C-w (Message mode):            Header Editing.      (line  30)
* C-c C-i (GUD):                         Commands of GUD.     (line  39)
* C-c C-i (Outline mode):                Outline Visibility.  (line  56)
* C-c C-j (Term mode):                   Term Mode.           (line  13)
* C-c C-k (Outline mode):                Outline Visibility.  (line  56)
* C-c C-k (Picture mode):                Rectangles in Picture.
                                                              (line  24)
* C-c C-k (Term mode):                   Term Mode.           (line  17)
* C-c C-k (TeX mode):                    TeX Print.           (line  70)
* C-c C-l (C mode):                      Electric C.          (line  18)
* C-c C-l (Calendar mode):               General Calendar.    (line  24)
* C-c C-l (GUD):                         Commands of GUD.     (line  24)
* C-c C-l (Outline mode):                Outline Visibility.  (line  56)
* C-c C-l (Shell mode):                  Shell Ring.          (line  25)
* C-c C-l (TeX mode):                    TeX Print.           (line  70)
* C-c C-n (C mode):                      Motion in C.         (line  33)
* C-c C-n (Fortran mode):                Fortran Motion.      (line  12)
* C-c C-n (GUD):                         Commands of GUD.     (line  34)
* C-c C-n (Outline mode):                Outline Motion.      (line  25)
* C-c C-n (Rmail):                       Rmail Motion.        (line  72)
* C-c C-n (SGML mode):                   HTML Mode.           (line  11)
* C-c C-n (Shell mode):                  Shell History Copying.
                                                              (line   9)
* C-c C-o (LaTeX mode):                  LaTeX Editing.       (line  15)
* C-c C-o (Outline mode):                Outline Visibility.  (line  63)
* C-c C-o (Shell mode):                  Shell Mode.          (line  76)
* C-c C-p (C mode):                      Motion in C.         (line  28)
* C-c C-p (Fortran mode):                Fortran Motion.      (line  16)
* C-c C-p (GUD):                         Commands of GUD.     (line  43)
* C-c C-p (Outline mode):                Outline Motion.      (line  25)
* C-c C-p (Rmail):                       Rmail Motion.        (line  72)
* C-c C-p (Shell mode):                  Shell History Copying.
                                                              (line   6)
* C-c C-p (TeX mode):                    TeX Print.           (line  36)
* C-c C-q (C mode):                      C Indent.            (line   9)
* C-c C-q (Message mode):                Citing Mail.         (line  23)
* C-c C-q (Outline mode):                Outline Visibility.  (line  67)
* C-c C-q (Term mode):                   Term Mode.           (line  34)
* C-c C-r (Fortran mode):                Fortran Columns.     (line  26)
* C-c C-r (GUD):                         Commands of GUD.     (line  48)
* C-c C-r (Shell mode):                  Shell Mode.          (line  87)
* C-c C-r (TeX mode):                    TeX Print.           (line  81)
* C-c C-s (C mode):                      Other C Commands.    (line  66)
* C-c C-s (GUD):                         Commands of GUD.     (line  29)
* C-c C-s (Message mode):                Mail Sending.        (line  13)
* C-c C-s (Org Mode):                    Org Organizer.       (line  13)
* C-c C-s (Outline mode):                Outline Visibility.  (line  51)
* C-c C-s (Shell mode):                  Shell Mode.          (line  81)
* C-c C-t (GUD):                         Commands of GUD.     (line  60)
* C-c C-t (Org Mode):                    Org Organizer.       (line   6)
* C-c C-t (Outline mode):                Outline Visibility.  (line  67)
* C-c C-t (SGML mode):                   HTML Mode.           (line  15)
* C-c C-u (C mode):                      Motion in C.         (line  18)
* C-c C-u (GUD):                         Commands of GUD.     (line  76)
* C-c C-u (Outline mode):                Outline Motion.      (line  29)
* C-c C-u (Shell mode):                  Shell Mode.          (line  53)
* C-c C-v (SGML mode):                   HTML Mode.           (line  56)
* C-c C-v (TeX mode):                    TeX Print.           (line  36)
* C-c C-w (Fortran mode):                Fortran Columns.     (line  42)
* C-c C-w (Message mode):                Mail Signature.      (line  19)
* C-c C-w (Picture mode):                Rectangles in Picture.
                                                              (line  24)
* C-c C-w (Shell mode):                  Shell Mode.          (line  58)
* C-c C-x:                               Foldout.             (line  40)
* C-c C-x (Picture mode):                Rectangles in Picture.
                                                              (line  34)
* C-c C-x (Shell mode):                  Shell Ring.          (line  19)
* C-c C-y (Message mode):                Citing Mail.         (line  13)
* C-c C-y (Picture mode):                Rectangles in Picture.
                                                              (line  34)
* C-c C-z:                               Foldout.             (line  16)
* C-c C-z (Shell mode):                  Shell Mode.          (line  66)
* C-c C-\ (C mode):                      Other C Commands.    (line  47)
* C-c C-\ (Shell mode):                  Shell Mode.          (line  71)
* C-c <DEL> (C Mode):                    Hungry Delete.       (line  13)
* C-c <Delete> (C Mode):                 Hungry Delete.       (line  19)
* C-c RET (Goto Address mode):           Goto Address mode.   (line   9)
* C-c RET (Shell mode):                  Shell History Copying.
                                                              (line  12)
* C-c TAB (Picture mode):                Tabs in Picture.     (line  22)
* C-c TAB (SGML mode):                   HTML Mode.           (line  60)
* C-c TAB (TeX mode):                    TeX Print.           (line 131)
* C-c [ (Enriched mode):                 Enriched Indentation.
                                                              (line  32)
* C-c [ (Org Mode):                      Org Organizer.       (line  20)
* C-c \ (Picture mode):                  Insert in Picture.   (line   6)
* C-c ] (Enriched mode):                 Enriched Indentation.
                                                              (line  32)
* C-c ^ (Picture mode):                  Insert in Picture.   (line   6)
* C-c ` (Picture mode):                  Insert in Picture.   (line   6)
* C-c { (TeX mode):                      TeX Editing.         (line  40)
* C-c } (TeX mode):                      TeX Editing.         (line  40)
* C-d (Buffer Menu):                     Several Buffers.     (line  35)
* C-d (Rmail):                           Rmail Deletion.      (line  28)
* C-d (Shell mode):                      Shell Mode.          (line  32)
* C-Down-Mouse-1:                        Buffer Menus.        (line  16)
* C-e:                                   Moving Point.        (line  61)
* C-e (Calendar mode):                   Move to Beginning or End.
                                                              (line  11)
* C-f:                                   Moving Point.        (line  19)
* C-f (Calendar mode):                   Calendar Unit Motion.
                                                              (line  26)
* C-g:                                   Quitting.            (line  29)
* C-g (Incremental search):              Error in Isearch.    (line  20)
* C-g (MS-DOS):                          MS-DOS Keyboard.     (line  12)
* C-h:                                   Help.                (line   6)
* C-h .:                                 Help Echo.           (line  14)
* C-h a:                                 Apropos.             (line  16)
* C-h b:                                 Misc Help.           (line  39)
* C-h c:                                 Key Help.            (line   9)
* C-h C:                                 Coding Systems.      (line  45)
* C-h C-c:                               Help Files.          (line  13)
* C-h C-d:                               Help Files.          (line  13)
* C-h C-e:                               Help Files.          (line  13)
* C-h C-f:                               Help Files.          (line  13)
* C-h C-h:                               Help.                (line   6)
* C-h C-m:                               Help Files.          (line  13)
* C-h C-n:                               Help Files.          (line  13)
* C-h C-o:                               Help Files.          (line  13)
* C-h C-p:                               Help Files.          (line  13)
* C-h C-t:                               Help Files.          (line  13)
* C-h C-w:                               Help Files.          (line  13)
* C-h C-\:                               Select Input Method. (line  16)
* C-h d:                                 Apropos.             (line  37)
* C-h e:                                 Misc Help.           (line  30)
* C-h f:                                 Name Help.           (line   6)
* C-h F:                                 Name Help.           (line  46)
* C-h g:                                 Help Files.          (line  13)
* C-h h:                                 International Chars. (line  19)
* C-h i:                                 Misc Help.           (line   6)
* C-h I:                                 Select Input Method. (line  16)
* C-h k:                                 Key Help.            (line  12)
* C-h K:                                 Key Help.            (line  16)
* C-h l:                                 Misc Help.           (line  25)
* C-h L:                                 Language Environments.
                                                              (line  76)
* C-h m:                                 Misc Help.           (line  34)
* C-h m <1>:                             Major Modes.         (line  65)
* C-h p:                                 Package Keywords.    (line  11)
* C-h P:                                 Package Keywords.    (line  19)
* C-h S:                                 Misc Help.           (line  20)
* C-h s:                                 Misc Help.           (line  39)
* C-h S <1>:                             Info Lookup.         (line   6)
* C-h t:                                 Basic.               (line   6)
* C-h v:                                 Name Help.           (line  37)
* C-h w:                                 Key Help.            (line  24)
* C-j:                                   Inserting Text.      (line  12)
* C-j (and major modes):                 Major Modes.         (line   6)
* C-j (Lisp Interaction mode):           Lisp Interaction.    (line  11)
* C-j (MS-DOS):                          MS-DOS Keyboard.     (line  32)
* C-j (TeX mode):                        TeX Editing.         (line  47)
* C-k:                                   Killing by Lines.    (line  11)
* C-k (Gnus Group mode):                 Gnus Group Buffer.   (line  33)
* C-l:                                   Recentering.         (line  20)
* C-LEFT:                                Moving Point.        (line  77)
* C-M-%:                                 Query Replace.       (line  21)
* C-M-.:                                 Find Tag.            (line  67)
* C-M-/:                                 Dynamic Abbrevs.     (line  12)
* C-M-@:                                 Marking Objects.     (line  38)
* C-M-@ <1>:                             Expressions.         (line  54)
* C-M-a:                                 Moving by Defuns.    (line  17)
* C-M-b:                                 Expressions.         (line  24)
* C-M-c:                                 Recursive Edit.      (line  12)
* C-M-d:                                 Moving by Parens.    (line  40)
* C-M-d (Dired):                         Subdirectory Motion. (line  26)
* C-M-e:                                 Moving by Defuns.    (line  17)
* C-M-f:                                 Expressions.         (line  24)
* C-M-f (Rmail):                         Rmail Make Summary.  (line  55)
* C-M-h:                                 Moving by Defuns.    (line  17)
* C-M-h (C mode):                        Moving by Defuns.    (line  29)
* C-M-i:                                 Symbol Completion.   (line   9)
* C-M-i (customization buffer):          Changing a Variable. (line  53)
* C-M-j:                                 Multi-Line Comments. (line   6)
* C-M-j (Fortran mode):                  ForIndent Commands.  (line  23)
* C-M-k:                                 Expressions.         (line  43)
* C-M-l:                                 Recentering.         (line  56)
* C-M-l (Rmail):                         Rmail Make Summary.  (line  36)
* C-M-l (Shell mode):                    Shell Mode.          (line  87)
* C-M-n:                                 Moving by Parens.    (line  29)
* C-M-n (Dired):                         Subdirectory Motion. (line  15)
* C-M-n (Fortran mode):                  Fortran Motion.      (line  33)
* C-M-n (Rmail):                         Rmail Labels.        (line  39)
* C-M-o:                                 Indentation Commands.
                                                              (line  10)
* C-M-p:                                 Moving by Parens.    (line  29)
* C-M-p (Dired):                         Subdirectory Motion. (line  19)
* C-M-p (Fortran mode):                  Fortran Motion.      (line  41)
* C-M-p (Rmail):                         Rmail Labels.        (line  39)
* C-M-q:                                 Multi-line Indent.   (line  25)
* C-M-q (C mode):                        C Indent.            (line  13)
* C-M-q (Fortran mode):                  ForIndent Commands.  (line  19)
* C-M-r:                                 Regexp Search.       (line  18)
* C-M-r (Rmail):                         Rmail Make Summary.  (line  40)
* C-M-s:                                 Regexp Search.       (line  18)
* C-M-s (Rmail):                         Rmail Make Summary.  (line  51)
* C-M-<SPC>:                             Expressions.         (line  54)
* C-M-t:                                 Expressions.         (line  46)
* C-M-t (Rmail):                         Rmail Make Summary.  (line  46)
* C-M-u:                                 Moving by Parens.    (line  33)
* C-M-u (Dired):                         Subdirectory Motion. (line  23)
* C-M-v:                                 Other Window.        (line  26)
* C-M-w:                                 Appending Kills.     (line  36)
* C-M-w (Incremental search):            Isearch Yank.        (line  26)
* C-M-x (Emacs Lisp mode):               Lisp Eval.           (line  47)
* C-M-x (Lisp mode):                     External Lisp.       (line  25)
* C-M-x (Scheme mode):                   External Lisp.       (line  34)
* C-M-y (Incremental search):            Isearch Yank.        (line  26)
* C-M-\:                                 Indentation Commands.
                                                              (line  45)
* C-Mouse-1:                             Menu Mouse Clicks.   (line  10)
* C-Mouse-2:                             Menu Mouse Clicks.   (line  17)
* C-Mouse-2 (mode line):                 Split Window.        (line  50)
* C-mouse-2 (mode line):                 Mode Line Mouse.     (line  32)
* C-Mouse-2 (scroll bar):                Split Window.        (line  50)
* C-Mouse-3:                             Menu Mouse Clicks.   (line  22)
* C-Mouse-3 (when menu bar is disabled): Menu Bars.           (line  12)
* C-n:                                   Moving Point.        (line  46)
* C-n (Calendar mode):                   Calendar Unit Motion.
                                                              (line  26)
* C-n (Dired):                           Dired Navigation.    (line   6)
* C-o:                                   Blank Lines.         (line  13)
* C-o (Buffer Menu):                     Several Buffers.     (line  92)
* C-o (Dired):                           Dired Visiting.      (line  28)
* C-o (Occur mode):                      Other Repeating Search.
                                                              (line  31)
* C-o (Rmail):                           Rmail Output.        (line  21)
* C-p:                                   Moving Point.        (line  52)
* C-p (Calendar mode):                   Calendar Unit Motion.
                                                              (line  26)
* C-p (Dired):                           Dired Navigation.    (line   6)
* C-q:                                   Inserting Text.      (line  30)
* C-r:                                   Basic Isearch.       (line  48)
* C-RIGHT:                               Moving Point.        (line  68)
* C-s:                                   Basic Isearch.       (line  11)
* C-S-backspace:                         Killing by Lines.    (line  32)
* C-S-Mouse-3 (FFAP):                    FFAP.                (line  56)
* C-SPC:                                 Setting Mark.        (line  25)
* C-SPC C-SPC:                           Mark Ring.           (line  18)
* C-<SPC> C-<SPC>:                       Disabled Transient Mark.
                                                              (line  32)
* C-t:                                   Transpose.           (line  15)
* C-t d (Image-Dired):                   Image-Dired.         (line  10)
* C-TAB:                                 File Name Cache.     (line   6)
* C-u:                                   Arguments.           (line  40)
* C-u C-/:                               Undo.                (line  48)
* C-u C-c C-w (Fortran mode):            Fortran Columns.     (line  47)
* C-u C-SPC:                             Mark Ring.           (line  27)
* C-u C-x C-x:                           Disabled Transient Mark.
                                                              (line  38)
* C-u C-x v =:                           Old Revisions.       (line  37)
* C-u M-;:                               Comment Commands.    (line  59)
* C-u TAB:                               Multi-line Indent.   (line  33)
* C-v:                                   Scrolling.           (line  38)
* C-v (Calendar mode):                   Scroll Calendar.     (line  30)
* C-w:                                   Other Kill Commands. (line   6)
* C-w <1>:                               Other Kill Commands. (line  26)
* C-w (Incremental search):              Isearch Yank.        (line  13)
* C-x #:                                 Invoking emacsclient.
                                                              (line  32)
* C-x $:                                 Selective Display.   (line   6)
* C-x (:                                 Basic Keyboard Macro.
                                                              (line  79)
* C-x ):                                 Basic Keyboard Macro.
                                                              (line  79)
* C-x +:                                 Change Window.       (line  64)
* C-x -:                                 Change Window.       (line  59)
* C-x .:                                 Fill Prefix.         (line  24)
* C-x 0:                                 Change Window.       (line  29)
* C-x 1:                                 Change Window.       (line  40)
* C-x 2:                                 Split Window.        (line  13)
* C-x 3:                                 Split Window.        (line  28)
* C-x 4:                                 Pop Up Window.       (line   6)
* C-x 4 .:                               Find Tag.            (line  47)
* C-x 4 0:                               Change Window.       (line  36)
* C-x 4 a:                               Change Log Commands. (line   6)
* C-x 4 b:                               Select Buffer.       (line  51)
* C-x 4 c:                               Indirect Buffers.    (line  17)
* C-x 4 C-o:                             Pop Up Window.       (line  16)
* C-x 4 d:                               Dired Enter.         (line  42)
* C-x 4 f:                               Visiting.            (line 106)
* C-x 4 f (FFAP):                        FFAP.                (line  36)
* C-x 4 m:                               Sending Mail.        (line  34)
* C-x 5:                                 Creating Frames.     (line   6)
* C-x 5 .:                               Find Tag.            (line  47)
* C-x 5 0:                               Frame Commands.      (line   9)
* C-x 5 1:                               Frame Commands.      (line  21)
* C-x 5 2:                               Creating Frames.     (line  17)
* C-x 5 b:                               Select Buffer.       (line  56)
* C-x 5 d:                               Dired Enter.         (line  42)
* C-x 5 f:                               Visiting.            (line 114)
* C-x 5 f (FFAP):                        FFAP.                (line  43)
* C-x 5 m:                               Sending Mail.        (line  34)
* C-x 5 o:                               Frame Commands.      (line  17)
* C-x 5 r:                               Creating Frames.     (line  38)
* C-x 6 1:                               Two-Column.          (line  52)
* C-x 6 2:                               Two-Column.          (line  12)
* C-x 6 b:                               Two-Column.          (line  32)
* C-x 6 d:                               Two-Column.          (line  57)
* C-x 6 RET:                             Two-Column.          (line  47)
* C-x 6 s:                               Two-Column.          (line  21)
* C-x 8:                                 Unibyte Mode.        (line  59)
* C-x 8 RET:                             Inserting Text.      (line  58)
* C-x ;:                                 Options for Comments.
                                                              (line   6)
* C-x <:                                 Horizontal Scrolling.
                                                              (line  35)
* C-x =:                                 Position Info.       (line  53)
* C-x = <1>:                             International Chars. (line  35)
* C-x >:                                 Horizontal Scrolling.
                                                              (line  35)
* C-x a g:                               Defining Abbrevs.    (line  25)
* C-x a i g:                             Defining Abbrevs.    (line  40)
* C-x a i l:                             Defining Abbrevs.    (line  40)
* C-x a l:                               Defining Abbrevs.    (line  36)
* C-x b:                                 Select Buffer.       (line  24)
* C-x C-+:                               Text Scale.          (line   6)
* C-x C--:                               Text Scale.          (line   6)
* C-x C-0:                               Text Scale.          (line   6)
* C-x C-=:                               Text Scale.          (line   6)
* C-x C-a (GUD):                         Commands of GUD.     (line  17)
* C-x C-a C-b:                           Commands of GUD.     (line  10)
* C-x C-a C-j (GUD):                     Commands of GUD.     (line  90)
* C-x C-a C-w (GUD):                     Watch Expressions.   (line   6)
* C-x C-b:                               List Buffers.        (line   9)
* C-x C-c:                               Exiting.             (line  12)
* C-x C-c (customization buffer):        Changing a Variable. (line 134)
* C-x C-d:                               Directories.         (line  23)
* C-x C-e:                               Lisp Eval.           (line  35)
* C-x C-f:                               Visiting.            (line  27)
* C-x C-f (FFAP):                        FFAP.                (line  24)
* C-x C-k b:                             Save Keyboard Macro. (line  24)
* C-x C-k C-a:                           Keyboard Macro Counter.
                                                              (line  55)
* C-x C-k C-c:                           Keyboard Macro Counter.
                                                              (line  49)
* C-x C-k C-e:                           Edit Keyboard Macro. (line  15)
* C-x C-k C-f:                           Keyboard Macro Counter.
                                                              (line  60)
* C-x C-k C-i:                           Keyboard Macro Counter.
                                                              (line  27)
* C-x C-k C-k:                           Keyboard Macro Ring. (line  32)
* C-x C-k C-n:                           Keyboard Macro Ring. (line  42)
* C-x C-k C-p:                           Keyboard Macro Ring. (line  42)
* C-x C-k e:                             Edit Keyboard Macro. (line  21)
* C-x C-k l:                             Edit Keyboard Macro. (line  26)
* C-x C-k n:                             Save Keyboard Macro. (line  15)
* C-x C-k r:                             Basic Keyboard Macro.
                                                              (line  75)
* C-x C-k RET:                           Edit Keyboard Macro. (line  15)
* C-x C-k SPC:                           Keyboard Macro Step-Edit.
                                                              (line   6)
* C-x C-k x:                             Keyboard Macro Registers.
                                                              (line   6)
* C-x C-l:                               Case.                (line  40)
* C-x C-n:                               Moving Point.        (line 133)
* C-x C-o:                               Blank Lines.         (line  13)
* C-x C-p:                               Pages.               (line  35)
* C-x C-q:                               Misc Buffer.         (line  16)
* C-x C-r:                               Visiting.            (line 102)
* C-x C-r (FFAP):                        FFAP.                (line  27)
* C-x C-s:                               Save Commands.       (line  22)
* C-x C-s (Custom Themes buffer):        Custom Themes.       (line  36)
* C-x C-<SPC>:                           Global Mark Ring.    (line  14)
* C-x C-t:                               Transpose.           (line  26)
* C-x C-u:                               Case.                (line  40)
* C-x C-v:                               Visiting.            (line  77)
* C-x C-v (FFAP):                        FFAP.                (line  29)
* C-x C-w:                               Save Commands.       (line  90)
* C-x C-x:                               Setting Mark.        (line  46)
* C-x C-z:                               External Lisp.       (line  11)
* C-x d:                                 Dired Enter.         (line   6)
* C-x d (FFAP):                          FFAP.                (line  31)
* C-x DEL:                               Sentences.           (line  35)
* C-x e:                                 Basic Keyboard Macro.
                                                              (line  79)
* C-x ESC ESC:                           Repetition.          (line  19)
* C-x f:                                 Fill Commands.       (line  39)
* C-x h:                                 Marking Objects.     (line  52)
* C-x i:                                 Misc File Ops.       (line  75)
* C-x k:                                 Kill Buffer.         (line  22)
* C-x l:                                 Pages.               (line  48)
* C-x <LEFT>:                            Select Buffer.       (line  46)
* C-x m:                                 Sending Mail.        (line   6)
* C-x n d:                               Narrowing.           (line  39)
* C-x n n:                               Narrowing.           (line  34)
* C-x n p:                               Narrowing.           (line  39)
* C-x n w:                               Narrowing.           (line  44)
* C-x o:                                 Other Window.        (line  15)
* C-x q:                                 Keyboard Macro Query.
                                                              (line  13)
* C-x r +:                               Text Registers.      (line  18)
* C-x r + <1>:                           Number Registers.    (line  13)
* C-x r b:                               Bookmarks.           (line  28)
* C-x r c:                               Rectangles.          (line  90)
* C-x r d:                               Rectangles.          (line  62)
* C-x r f:                               Configuration Registers.
                                                              (line   6)
* C-x r i:                               Text Registers.      (line  49)
* C-x r j:                               Position Registers.  (line  17)
* C-x r k:                               Rectangles.          (line  62)
* C-x r l:                               Bookmarks.           (line  34)
* C-x r m:                               Bookmarks.           (line  28)
* C-x r M-w:                             Rectangles.          (line  75)
* C-x r N:                               Rectangles.          (line  98)
* C-x r n:                               Number Registers.    (line  11)
* C-x r o:                               Rectangles.          (line  90)
* C-x r r:                               Rectangle Registers. (line   9)
* C-x r s:                               Text Registers.      (line  26)
* C-x r SPC:                             Position Registers.  (line  13)
* C-x r t:                               Rectangles.          (line 104)
* C-x r w:                               Configuration Registers.
                                                              (line   6)
* C-x r y:                               Rectangles.          (line  79)
* C-x RET:                               International Chars. (line  32)
* C-x RET c:                             Text Coding.         (line  42)
* C-x RET C-\:                           Select Input Method. (line  25)
* C-x RET f:                             Text Coding.         (line  26)
* C-x <RET> F:                           File Name Coding.    (line  10)
* C-x RET k:                             Terminal Coding.     (line  28)
* C-x RET p:                             Communication Coding.
                                                              (line  43)
* C-x RET r:                             Text Coding.         (line  72)
* C-x RET t:                             Terminal Coding.     (line  14)
* C-x RET x:                             Communication Coding.
                                                              (line  24)
* C-x RET X:                             Communication Coding.
                                                              (line  24)
* C-x <RIGHT>:                           Select Buffer.       (line  46)
* C-x s:                                 Save Commands.       (line  39)
* C-x TAB:                               Indentation Commands.
                                                              (line  52)
* C-x TAB (Enriched mode):               Enriched Indentation.
                                                              (line  13)
* C-x u:                                 Undo.                (line  21)
* C-x v +:                               VC Pull.             (line  13)
* C-x v =:                               Old Revisions.       (line  30)
* C-x v a:                               Change Logs and VC.  (line  19)
* C-x v D:                               Old Revisions.       (line  59)
* C-x v d:                               VC Directory Mode.   (line  15)
* C-x v g:                               Old Revisions.       (line  80)
* C-x v G:                               VC Ignore.           (line  10)
* C-x v h:                               Version Headers.     (line  18)
* C-x v i:                               Registering.         (line   9)
* C-x v l:                               VC Change Log.       (line  18)
* C-x v r:                               Revision Tags.       (line  23)
* C-x v s:                               Revision Tags.       (line  18)
* C-x v u:                               VC Undo.             (line  10)
* C-x v v:                               Basic VC Editing.    (line  27)
* C-x v ~:                               Old Revisions.       (line  75)
* C-x w .:                               Highlight Interactively.
                                                              (line  70)
* C-x w b:                               Highlight Interactively.
                                                              (line  75)
* C-x w h:                               Highlight Interactively.
                                                              (line  26)
* C-x w i:                               Highlight Interactively.
                                                              (line  87)
* C-x w l:                               Highlight Interactively.
                                                              (line  58)
* C-x w p:                               Highlight Interactively.
                                                              (line  63)
* C-x w r:                               Highlight Interactively.
                                                              (line  46)
* C-x z:                                 Repeating.           (line  12)
* C-x [:                                 Pages.               (line  29)
* C-x [ (Calendar mode):                 Calendar Unit Motion.
                                                              (line  34)
* C-x [ (DocView mode):                  DocView Navigation.  (line  15)
* C-x ]:                                 Pages.               (line  29)
* C-x ] (Calendar mode):                 Calendar Unit Motion.
                                                              (line  34)
* C-x ] (DocView mode):                  DocView Navigation.  (line  15)
* C-x ^:                                 Change Window.       (line  45)
* C-x `:                                 Compilation Mode.    (line  48)
* C-x }:                                 Change Window.       (line  45)
* C-y:                                   Yanking.             (line  20)
* C-y (Incremental search):              Isearch Yank.        (line   6)
* C-z:                                   Exiting.             (line  39)
* C-z (X windows):                       Frame Commands.      (line  13)
* C-\:                                   Select Input Method. (line  31)
* C-]:                                   Quitting.            (line  64)
* C-_:                                   Undo.                (line  21)
* C-_ (Dired):                           Marks vs Flags.      (line 131)
* d (Buffer Menu):                       Several Buffers.     (line  29)
* d (Calendar mode):                     Displaying the Diary.
                                                              (line  29)
* d (Dired):                             Dired Deletion.      (line  22)
* D (Dired):                             Operating on Files.  (line  46)
* D (GDB Breakpoints buffer):            Breakpoints Buffer.  (line  19)
* D (GDB speedbar):                      Watch Expressions.   (line  24)
* d (GDB threads buffer):                Threads Buffer.      (line  31)
* d (Rmail):                             Rmail Deletion.      (line  28)
* DEL (and major modes):                 Major Modes.         (line   6)
* DEL (Buffer Menu):                     Several Buffers.     (line  52)
* DEL (Dired):                           Dired Deletion.      (line  34)
* DEL (DocView mode):                    DocView Navigation.  (line  19)
* DEL (Gnus Group mode):                 Gnus Group Buffer.   (line  38)
* DEL (Gnus Summary mode):               Gnus Summary Buffer. (line  17)
* DEL (MS-DOS):                          MS-DOS Keyboard.     (line   6)
* DEL (programming modes):               Program Modes.       (line  30)
* DEL (Rmail):                           Rmail Scrolling.     (line  21)
* DEL (View mode):                       View Mode.           (line   6)
* DOWN:                                  Moving Point.        (line  46)
* DOWN (minibuffer history):             Minibuffer History.  (line  26)
* e (Dired):                             Dired Visiting.      (line  19)
* e (Rmail):                             Rmail Editing.       (line  15)
* e (View mode):                         View Mode.           (line  12)
* END key:                               Moving Point.        (line  61)
* ESC ESC ESC:                           Quitting.            (line  72)
* f (Buffer Menu):                       Several Buffers.     (line  84)
* f (Dired):                             Dired Visiting.      (line  13)
* f (GDB threads buffer):                Threads Buffer.      (line  35)
* f (Rmail):                             Rmail Reply.         (line  68)
* F1:                                    Help.                (line   6)
* F10:                                   Menu Bar.            (line  22)
* F2 1:                                  Two-Column.          (line  52)
* F2 2:                                  Two-Column.          (line  12)
* F2 b:                                  Two-Column.          (line  32)
* F2 d:                                  Two-Column.          (line  57)
* F2 RET:                                Two-Column.          (line  47)
* F2 s:                                  Two-Column.          (line  21)
* F3:                                    Basic Keyboard Macro.
                                                              (line  23)
* F4:                                    Basic Keyboard Macro.
                                                              (line  23)
* G (Dired):                             Operating on Files.  (line  81)
* g (Dired):                             Dired Updating.      (line  30)
* g (Rmail):                             Rmail Files.         (line  57)
* g CHAR (Calendar mode):                From Other Calendar. (line  11)
* g d (Calendar mode):                   Specified Dates.     (line  21)
* g D (Calendar mode):                   Specified Dates.     (line  26)
* g m (Calendar mode):                   Mayan Calendar.      (line  36)
* g w (Calendar mode):                   Specified Dates.     (line  26)
* h (Calendar mode):                     Holidays.            (line  26)
* H (Dired):                             Operating on Files.  (line  64)
* h (Rmail):                             Rmail Make Summary.  (line  31)
* Help:                                  Help.                (line   6)
* HOME key:                              Moving Point.        (line  57)
* i (Dired):                             Subdirectories in Dired.
                                                              (line  18)
* i (Rmail):                             Rmail Files.         (line  28)
* i a (Calendar mode):                   Special Diary Entries.
                                                              (line  27)
* i b (Calendar mode):                   Special Diary Entries.
                                                              (line  50)
* i c (Calendar mode):                   Special Diary Entries.
                                                              (line  55)
* i d (Calendar mode):                   Adding to Diary.     (line  25)
* i m (Calendar mode):                   Adding to Diary.     (line  31)
* i w (Calendar mode):                   Adding to Diary.     (line  31)
* i y (Calendar mode):                   Adding to Diary.     (line  31)
* INSERT:                                Minor Modes.         (line  80)
* j (Dired):                             Dired Navigation.    (line  16)
* j (Rmail):                             Rmail Motion.        (line  79)
* k (Dired):                             Dired Updating.      (line  52)
* k (Rmail):                             Rmail Labels.        (line  31)
* L (Dired):                             Operating on Files.  (line 127)
* l (Dired):                             Dired Updating.      (line  35)
* l (GDB threads buffer):                Threads Buffer.      (line  39)
* l (Gnus Group mode):                   Gnus Group Buffer.   (line  11)
* L (Gnus Group mode):                   Gnus Group Buffer.   (line  16)
* l (Rmail):                             Rmail Make Summary.  (line  36)
* LEFT:                                  Moving Point.        (line  36)
* m (Buffer Menu):                       Several Buffers.     (line 110)
* M (Calendar mode):                     Lunar Phases.        (line  18)
* m (Calendar mode):                     Displaying the Diary.
                                                              (line  44)
* m (Dired):                             Marks vs Flags.      (line  17)
* M (Dired):                             Operating on Files.  (line  76)
* m (Rmail):                             Rmail Reply.         (line 101)
* M-!:                                   Single Shell.        (line   6)
* M-$:                                   Spelling.            (line  42)
* M-$ (Dired):                           Hiding Subdirectories.
                                                              (line  15)
* M-%:                                   Query Replace.       (line  11)
* M-% (Incremental search):              Special Isearch.     (line  62)
* M-&:                                   Single Shell.        (line  33)
* M-':                                   Expanding Abbrevs.   (line  29)
* M-*:                                   Find Tag.            (line  60)
* M-,:                                   Tags Search.         (line  27)
* M--:                                   Arguments.           (line  15)
* M-- M-c:                               Fixing Case.         (line  14)
* M-- M-l:                               Fixing Case.         (line  14)
* M-- M-u:                               Fixing Case.         (line  14)
* M-.:                                   Find Tag.            (line  28)
* M-/:                                   Dynamic Abbrevs.     (line  12)
* M-1:                                   Arguments.           (line  15)
* M-;:                                   Comment Commands.    (line  25)
* M-<:                                   Moving Point.        (line  93)
* M-< (Calendar mode):                   Move to Beginning or End.
                                                              (line  17)
* M-< (DocView mode):                    DocView Navigation.  (line  24)
* M-<down> (Org Mode):                   Org Mode.            (line  29)
* M-<F10>:                               Frame Commands.      (line  25)
* M-<left> (Org Mode):                   Org Mode.            (line  29)
* M-<right> (Org Mode):                  Org Mode.            (line  29)
* M-<up> (Org Mode):                     Org Mode.            (line  29)
* M-=:                                   Position Info.       (line  44)
* M-= (Calendar mode):                   Counting Days.       (line  10)
* M->:                                   Moving Point.        (line  97)
* M-> (Calendar mode):                   Move to Beginning or End.
                                                              (line  19)
* M-> (DocView mode):                    DocView Navigation.  (line  24)
* M-? (Nroff mode):                      Nroff Mode.          (line  16)
* M-? (Shell mode):                      Shell Mode.          (line  28)
* M-@:                                   Marking Objects.     (line  29)
* M-@ <1>:                               Words.               (line  55)
* M-a:                                   Sentences.           (line  18)
* M-a (C mode):                          Motion in C.         (line  38)
* M-a (Calendar mode):                   Move to Beginning or End.
                                                              (line  13)
* M-b:                                   Moving Point.        (line  73)
* M-b <1>:                               Words.               (line  26)
* M-c:                                   Case.                (line  20)
* M-<colon>:                             Lisp Eval.           (line  30)
* M-d:                                   Words.               (line  34)
* M-DEL:                                 Words.               (line  42)
* M-DEL (Dired):                         Marks vs Flags.      (line  65)
* M-Drag-Mouse-1:                        Secondary Selection. (line  11)
* M-e:                                   Sentences.           (line  18)
* M-e (C mode):                          Motion in C.         (line  48)
* M-e (Calendar mode):                   Move to Beginning or End.
                                                              (line  15)
* M-e (Incremental search):              Repeat Isearch.      (line  44)
* M-f:                                   Moving Point.        (line  64)
* M-f <1>:                               Words.               (line  26)
* M-g c:                                 Moving Point.        (line 114)
* M-g g:                                 Moving Point.        (line 119)
* M-g M-g:                               Moving Point.        (line 119)
* M-g M-n:                               Compilation Mode.    (line  48)
* M-g n:                                 Compilation Mode.    (line  48)
* M-g TAB:                               Moving Point.        (line 128)
* M-h:                                   Paragraphs.          (line  23)
* M-i:                                   Indentation Commands.
                                                              (line  22)
* M-j:                                   Multi-Line Comments. (line   6)
* M-j b (Enriched mode):                 Enriched Justification.
                                                              (line  17)
* M-j c (Enriched mode):                 Enriched Justification.
                                                              (line  21)
* M-j l (Enriched mode):                 Enriched Justification.
                                                              (line  11)
* M-j r (Enriched mode):                 Enriched Justification.
                                                              (line  14)
* M-j u (Enriched mode):                 Enriched Justification.
                                                              (line  25)
* M-k:                                   Sentences.           (line  29)
* M-l:                                   Case.                (line  20)
* M-LEFT:                                Moving Point.        (line  77)
* M-m:                                   Indentation Commands.
                                                              (line  16)
* M-m (Rmail):                           Rmail Reply.         (line  57)
* M-Mouse-1:                             Secondary Selection. (line  21)
* M-Mouse-2:                             Secondary Selection. (line  30)
* M-Mouse-3:                             Secondary Selection. (line  24)
* M-n (Incremental search):              Repeat Isearch.      (line  39)
* M-n (Log Edit mode):                   Log Buffer.          (line  57)
* M-n (Man mode):                        Man Page.            (line  31)
* M-n (minibuffer history):              Minibuffer History.  (line  26)
* M-n (Nroff mode):                      Nroff Mode.          (line  16)
* M-n (Rmail):                           Rmail Motion.        (line  46)
* M-n (Shell mode):                      Shell Ring.          (line  10)
* M-o b (Enriched mode):                 Enriched Faces.      (line  15)
* M-o d (Enriched mode):                 Enriched Faces.      (line  12)
* M-o i (Enriched mode):                 Enriched Faces.      (line  18)
* M-o l (Enriched mode):                 Enriched Faces.      (line  21)
* M-o M-s (Text mode):                   Fill Commands.       (line  46)
* M-o o (Enriched mode):                 Enriched Faces.      (line  28)
* M-o u (Enriched mode):                 Enriched Faces.      (line  25)
* M-p (Incremental search):              Repeat Isearch.      (line  39)
* M-p (Log Edit mode):                   Log Buffer.          (line  57)
* M-p (Man mode):                        Man Page.            (line  31)
* M-p (minibuffer history):              Minibuffer History.  (line  26)
* M-p (Nroff mode):                      Nroff Mode.          (line  16)
* M-p (Rmail):                           Rmail Motion.        (line  46)
* M-p (Shell mode):                      Shell Ring.          (line   6)
* M-q:                                   Fill Commands.       (line  17)
* M-q (C mode):                          Other C Commands.    (line  29)
* M-q (Fortran mode):                    ForIndent Commands.  (line  32)
* M-r:                                   Moving Point.        (line  82)
* M-r (Log Edit mode):                   Log Buffer.          (line  57)
* M-r (minibuffer history):              Minibuffer History.  (line  42)
* M-r (Shell mode):                      Shell Ring.          (line  14)
* M-RIGHT:                               Moving Point.        (line  68)
* M-S (Enriched mode):                   Enriched Justification.
                                                              (line  21)
* M-s (Gnus Summary mode):               Gnus Summary Buffer. (line  31)
* M-s (Log Edit mode):                   Log Buffer.          (line  57)
* M-s (minibuffer history):              Minibuffer History.  (line  42)
* M-s (Rmail):                           Rmail Motion.        (line  58)
* M-s .:                                 Symbol Search.       (line  26)
* M-s a C-s (Dired):                     Misc Dired Features. (line  10)
* M-s a M-C-s (Dired):                   Misc Dired Features. (line  10)
* M-s C-e (Incremental search):          Isearch Yank.        (line  18)
* M-s f C-s (Dired):                     Dired Navigation.    (line  20)
* M-s f M-C-s (Dired):                   Dired Navigation.    (line  20)
* M-s h .:                               Highlight Interactively.
                                                              (line  70)
* M-s h f:                               Highlight Interactively.
                                                              (line  87)
* M-s h l:                               Highlight Interactively.
                                                              (line  58)
* M-s h p:                               Highlight Interactively.
                                                              (line  63)
* M-s h r:                               Highlight Interactively.
                                                              (line  26)
* M-s h u:                               Highlight Interactively.
                                                              (line  46)
* M-s h w:                               Highlight Interactively.
                                                              (line  75)
* M-s i (Incremental search):            Special Isearch.     (line  28)
* M-s o:                                 Other Repeating Search.
                                                              (line  45)
* M-s SPC (Incremental search):          Special Isearch.     (line   9)
* M-s w:                                 Word Search.         (line  22)
* M-s _:                                 Symbol Search.       (line  26)
* M-SPC:                                 Deletion.            (line  40)
* M-t:                                   Transpose.           (line  26)
* M-TAB:                                 Symbol Completion.   (line   9)
* M-TAB (customization buffer):          Changing a Variable. (line  53)
* M-TAB (Incremental search):            Special Isearch.     (line  67)
* M-TAB (Picture mode):                  Tabs in Picture.     (line   6)
* M-TAB (Text mode):                     Text Mode.           (line  36)
* M-TAB, (MS-Windows):                   Windows Keyboard.    (line  38)
* M-u:                                   Case.                (line  20)
* M-v:                                   Scrolling.           (line  38)
* M-v (Calendar mode):                   Scroll Calendar.     (line  30)
* M-w:                                   Other Kill Commands. (line  26)
* M-x:                                   M-x.                 (line  17)
* M-y:                                   Earlier Kills.       (line  11)
* M-y (Incremental search):              Isearch Yank.        (line   6)
* M-z:                                   Other Kill Commands. (line  40)
* M-\:                                   Deletion.            (line  40)
* M-^:                                   Indentation Commands.
                                                              (line  32)
* M-^ (Fortran mode):                    ForIndent Commands.  (line  28)
* M-`:                                   Menu Bar.            (line  28)
* M-{:                                   Paragraphs.          (line  17)
* M-{ (Calendar mode):                   Calendar Unit Motion.
                                                              (line  34)
* M-{ (Dired):                           Marks vs Flags.      (line  82)
* M-|:                                   Single Shell.        (line  48)
* M-}:                                   Paragraphs.          (line  17)
* M-} (Calendar mode):                   Calendar Unit Motion.
                                                              (line  34)
* M-} (Dired):                           Marks vs Flags.      (line  76)
* M-~:                                   Save Commands.       (line  68)
* Mouse-1:                               Mouse Commands.      (line   6)
* Mouse-1 (mode line):                   Mode Line Mouse.     (line  16)
* Mouse-1 (on buttons):                  Mouse References.    (line   6)
* Mouse-1 (scroll bar):                  Mode Line Mouse.     (line  35)
* Mouse-2:                               Mouse Commands.      (line   6)
* Mouse-2 (GDB Breakpoints buffer):      Breakpoints Buffer.  (line  26)
* Mouse-2 (mode line):                   Mode Line Mouse.     (line  24)
* Mouse-2 (on buttons):                  Mouse References.    (line   6)
* Mouse-3:                               Mouse Commands.      (line   6)
* Mouse-3 (mode line):                   Mode Line Mouse.     (line  28)
* n (DocView mode):                      DocView Navigation.  (line  15)
* n (Gnus Group mode):                   Gnus Group Buffer.   (line  41)
* n (Gnus Summary mode):                 Gnus Summary Buffer. (line  20)
* n (Rmail):                             Rmail Motion.        (line  46)
* next:                                  Scrolling.           (line  38)
* o (Buffer Menu):                       Several Buffers.     (line  88)
* o (Calendar mode):                     Specified Dates.     (line  30)
* o (Dired):                             Dired Visiting.      (line  22)
* O (Dired):                             Operating on Files.  (line  85)
* o (Occur mode):                        Other Repeating Search.
                                                              (line  31)
* o (Rmail):                             Rmail Output.        (line  21)
* p (Calendar mode):                     To Other Calendar.   (line   9)
* P (Dired):                             Operating on Files.  (line  99)
* p (DocView mode):                      DocView Navigation.  (line  15)
* p (Gnus Group mode):                   Gnus Group Buffer.   (line  44)
* p (Gnus Summary mode):                 Gnus Summary Buffer. (line  23)
* p (Rmail):                             Rmail Motion.        (line  46)
* p d (Calendar mode):                   General Calendar.    (line  19)
* PageDown:                              Scrolling.           (line  38)
* PageUp:                                Scrolling.           (line  38)
* prior:                                 Scrolling.           (line  38)
* q (Buffer Menu):                       Several Buffers.     (line  79)
* q (Calendar mode):                     General Calendar.    (line  33)
* q (Dired):                             Dired Enter.         (line  46)
* Q (Dired):                             Operating on Files.  (line 144)
* q (Gnus Group mode):                   Gnus Group Buffer.   (line  47)
* q (Gnus Summary mode):                 Gnus Summary Buffer. (line  34)
* Q (Rmail summary):                     Rmail Summary Edit.  (line  91)
* q (Rmail summary):                     Rmail Summary Edit.  (line  91)
* q (Rmail):                             Rmail Basics.        (line  35)
* q (View mode):                         View Mode.           (line  12)
* R (Dired):                             Operating on Files.  (line  54)
* r (GDB threads buffer):                Threads Buffer.      (line  43)
* r (Rmail):                             Rmail Reply.         (line  28)
* RET:                                   Inserting Text.      (line  12)
* RET (Buffer Menu):                     Several Buffers.     (line  84)
* RET (completion in minibuffer):        Completion Exit.     (line   6)
* RET (Dired):                           Dired Visiting.      (line  19)
* RET (GDB Breakpoints buffer):          Breakpoints Buffer.  (line  22)
* RET (GDB speedbar):                    Watch Expressions.   (line  27)
* RET (Help mode):                       Help Mode.           (line  25)
* RET (Occur mode):                      Other Repeating Search.
                                                              (line  31)
* RET (Shell mode):                      Shell Mode.          (line  12)
* RIGHT:                                 Moving Point.        (line  22)
* s (Buffer Menu):                       Several Buffers.     (line  39)
* S (Buffer Menu):                       Several Buffers.     (line 123)
* S (Calendar mode):                     Sunrise/Sunset.      (line  20)
* s (Calendar mode):                     Displaying the Diary.
                                                              (line  55)
* S (Dired):                             Operating on Files.  (line  70)
* s (Dired):                             Dired Updating.      (line  68)
* s (Gnus Summary mode):                 Gnus Summary Buffer. (line  26)
* s (Rmail):                             Rmail Basics.        (line  28)
* s (View mode):                         View Mode.           (line   6)
* S-Mouse-2:                             Hideshow.            (line  20)
* S-Mouse-3 (FFAP):                      FFAP.                (line  53)
* S-SPC (Rmail):                         Rmail Scrolling.     (line  21)
* S-TAB (customization buffer):          Customization Groups.
                                                              (line  49)
* S-TAB (Help mode):                     Help Mode.           (line  38)
* S-TAB (Org Mode):                      Org Mode.            (line  24)
* SPC (Calendar mode):                   General Calendar.    (line  28)
* SPC (completion):                      Completion Commands. (line  27)
* SPC (Dired):                           Dired Navigation.    (line  10)
* SPC (DocView mode):                    DocView Navigation.  (line  19)
* SPC (GDB Breakpoints buffer):          Breakpoints Buffer.  (line  13)
* SPC (Gnus Group mode):                 Gnus Group Buffer.   (line   8)
* SPC (Gnus Summary mode):               Gnus Summary Buffer. (line   8)
* SPC (Incremental search):              Special Isearch.     (line   9)
* SPC (Rmail):                           Rmail Scrolling.     (line  21)
* SPC (View mode):                       View Mode.           (line   6)
* T (Buffer Menu):                       Several Buffers.     (line 128)
* t (Calendar mode):                     Writing Calendar Files.
                                                              (line  23)
* t (Calendar mode) <1>:                 Writing Calendar Files.
                                                              (line  39)
* t (Dired):                             Marks vs Flags.      (line  87)
* T (Dired):                             Operating on Files.  (line  94)
* t (Rmail):                             Rmail Display.       (line  12)
* TAB (and major modes):                 Major Modes.         (line   6)
* TAB (completion):                      Completion Example.  (line   6)
* TAB (completion) <1>:                  Completion Commands. (line  22)
* TAB (customization buffer):            Customization Groups.
                                                              (line  49)
* TAB (GUD):                             Commands of GUD.     (line  97)
* TAB (Help mode):                       Help Mode.           (line  38)
* TAB (indentation):                     Indentation.         (line  13)
* TAB (Message mode):                    Header Editing.      (line  38)
* TAB (Org Mode):                        Org Mode.            (line  16)
* TAB (programming modes):               Basic Indent.        (line  11)
* TAB (Shell mode):                      Shell Mode.          (line  20)
* TAB (Text mode):                       Text Mode.           (line  16)
* u (Buffer Menu):                       Several Buffers.     (line  48)
* u (Calendar mode):                     Holidays.            (line  32)
* u (Dired deletion):                    Dired Deletion.      (line  34)
* u (Dired):                             Marks vs Flags.      (line  43)
* U (Dired):                             Marks vs Flags.      (line  60)
* u (Gnus Group mode):                   Gnus Group Buffer.   (line  27)
* u (Rmail):                             Rmail Deletion.      (line  43)
* UP:                                    Moving Point.        (line  52)
* UP (minibuffer history):               Minibuffer History.  (line  26)
* v (Buffer Menu):                       Several Buffers.     (line 116)
* v (Dired):                             Dired Visiting.      (line  39)
* v (Rmail):                             Rmail Display.       (line  55)
* w (Dired):                             Misc Dired Features. (line  18)
* w (Rmail):                             Rmail Output.        (line  33)
* x (Buffer Menu):                       Several Buffers.     (line  45)
* x (Calendar mode):                     Holidays.            (line  32)
* x (Dired):                             Dired Deletion.      (line  44)
* X (Dired):                             Shell Commands in Dired.
                                                              (line   6)
* x (Rmail):                             Rmail Deletion.      (line  43)
* Z (Dired):                             Operating on Files.  (line 106)


File: emacs.info,  Node: Option Index,  Next: Command Index,  Prev: Key Index,  Up: Top

Command-Line Options Index
**************************

 [index ]
* Menu:

* +LINENUM:                              Action Arguments.    (line  31)
* --background-color:                    Colors X.            (line  18)
* --basic-display:                       Misc X.              (line  25)
* --batch:                               Initial Options.     (line  43)
* --border-color:                        Colors X.            (line  22)
* --border-width:                        Borders X.           (line  20)
* --chdir:                               Initial Options.     (line  20)
* --color:                               Colors X.            (line  37)
* --cursor-color:                        Colors X.            (line  26)
* --daemon:                              Initial Options.     (line 110)
* --debug-init:                          Initial Options.     (line 130)
* --directory:                           Action Arguments.    (line  50)
* --display:                             Initial Options.     (line  32)
* --eval:                                Action Arguments.    (line  66)
* --execute:                             Action Arguments.    (line  67)
* --file:                                Action Arguments.    (line   9)
* --find-file:                           Action Arguments.    (line  10)
* --font:                                Font X.              (line  11)
* --foreground-color:                    Colors X.            (line  13)
* --fullheight:                          Window Size X.       (line  32)
* --fullscreen:                          Window Size X.       (line  18)
* --fullwidth:                           Window Size X.       (line  36)
* --funcall:                             Action Arguments.    (line  60)
* --geometry:                            Window Size X.       (line  11)
* --help:                                Action Arguments.    (line  81)
* --iconic:                              Icons X.             (line   7)
* --insert:                              Action Arguments.    (line  70)
* --internal-border:                     Borders X.           (line  15)
* --kill:                                Action Arguments.    (line  78)
* --line-spacing:                        Misc X.              (line  17)
* --load:                                Action Arguments.    (line  39)
* --maximized:                           Window Size X.       (line  25)
* --mouse-color:                         Colors X.            (line  29)
* --name:                                Resources.           (line  59)
* --no-bitmap-icon:                      Icons X.             (line  12)
* --no-blinking-cursor:                  Misc X.              (line  21)
* --no-desktop:                          Initial Options.     (line 121)
* --no-init-file:                        Initial Options.     (line  81)
* --no-site-file:                        Initial Options.     (line  87)
* --no-site-lisp:                        Initial Options.     (line  92)
* --no-splash:                           Initial Options.     (line  96)
* --no-window-system:                    Initial Options.     (line  38)
* --quick:                               Initial Options.     (line 102)
* --reverse-video:                       Colors X.            (line  34)
* --script:                              Initial Options.     (line  68)
* --terminal:                            Initial Options.     (line  27)
* --title:                               Title X.             (line  18)
* --user:                                Initial Options.     (line 126)
* --version:                             Action Arguments.    (line  85)
* --vertical-scroll-bars:                Misc X.              (line  13)
* --visit:                               Action Arguments.    (line  11)
* --xrm:                                 Resources.           (line  76)
* -bd:                                   Colors X.            (line  21)
* -bg:                                   Colors X.            (line  17)
* -bw:                                   Borders X.           (line  19)
* -chdir:                                Initial Options.     (line  19)
* -cr:                                   Colors X.            (line  25)
* -d:                                    Initial Options.     (line  31)
* -D:                                    Misc X.              (line  24)
* -daemon:                               Initial Options.     (line 109)
* -f:                                    Action Arguments.    (line  59)
* -fg:                                   Colors X.            (line  12)
* -fh:                                   Window Size X.       (line  31)
* -fn:                                   Font X.              (line  10)
* -fs:                                   Window Size X.       (line  17)
* -fw:                                   Window Size X.       (line  35)
* -g:                                    Window Size X.       (line  10)
* -ib:                                   Borders X.           (line  14)
* -l:                                    Action Arguments.    (line  38)
* -L:                                    Action Arguments.    (line  49)
* -lsp:                                  Misc X.              (line  16)
* -mm:                                   Window Size X.       (line  24)
* -ms:                                   Colors X.            (line  28)
* -nbc:                                  Misc X.              (line  20)
* -nbi:                                  Icons X.             (line  11)
* -nw:                                   Initial Options.     (line  37)
* -q:                                    Initial Options.     (line  80)
* -Q:                                    Initial Options.     (line 101)
* -r:                                    Colors X.            (line  32)
* -rv:                                   Colors X.            (line  33)
* -t:                                    Initial Options.     (line  26)
* -T:                                    Title X.             (line  17)
* -u:                                    Initial Options.     (line 125)
* -vb:                                   Misc X.              (line  12)


File: emacs.info,  Node: Command Index,  Next: Variable Index,  Prev: Option Index,  Up: Top

Command and Function Index
**************************

 [index ]
* Menu:

* 2C-associate-buffer:                   Two-Column.          (line  32)
* 2C-dissociate:                         Two-Column.          (line  57)
* 2C-merge:                              Two-Column.          (line  52)
* 2C-newline:                            Two-Column.          (line  47)
* 2C-split:                              Two-Column.          (line  21)
* 2C-two-columns:                        Two-Column.          (line  12)
* 5x5:                                   Amusements.          (line   9)
* abbrev-mode:                           Abbrev Concepts.     (line  12)
* abbrev-prefix-mark:                    Expanding Abbrevs.   (line  29)
* abort-recursive-edit:                  Quitting.            (line  64)
* add-change-log-entry-other-window:     Change Log Commands. (line   6)
* add-change-log-entry-other-window, in Diff mode: Diff Mode. (line 116)
* add-dir-local-variable:                Directory Variables. (line  49)
* add-file-local-variable:               Specifying File Variables.
                                                              (line  70)
* add-file-local-variable-prop-line:     Specifying File Variables.
                                                              (line  17)
* add-global-abbrev:                     Defining Abbrevs.    (line  25)
* add-hook:                              Hooks.               (line  30)
* add-mode-abbrev:                       Defining Abbrevs.    (line  36)
* add-name-to-file:                      Misc File Ops.       (line  60)
* add-untranslated-filesystem:           Text and Binary.     (line  49)
* animate-birthday-present:              Amusements.          (line   6)
* append-next-kill:                      Appending Kills.     (line  36)
* append-to-buffer:                      Accumulating Text.   (line   6)
* append-to-file:                        Accumulating Text.   (line   6)
* append-to-register:                    Text Registers.      (line  34)
* apply-macro-to-region-lines:           Basic Keyboard Macro.
                                                              (line  75)
* appt-activate:                         Appointments.        (line  20)
* appt-add:                              Appointments.        (line  54)
* appt-delete:                           Appointments.        (line  54)
* apropos:                               Apropos.             (line  20)
* apropos-command:                       Apropos.             (line  16)
* apropos-documentation:                 Apropos.             (line  37)
* apropos-user-option:                   Apropos.             (line  24)
* apropos-value:                         Apropos.             (line  32)
* apropos-variable:                      Apropos.             (line  28)
* ask-user-about-lock:                   Interlocking.        (line  17)
* async-shell-command:                   Single Shell.        (line  33)
* auto-compression-mode:                 Compressed Files.    (line  16)
* auto-fill-mode:                        Auto Fill.           (line  16)
* auto-revert-mode:                      Reverting.           (line  35)
* auto-revert-tail-mode:                 Reverting.           (line  35)
* auto-save-mode:                        Auto Save Control.   (line   6)
* back-to-indentation:                   Indentation Commands.
                                                              (line  16)
* backward-button:                       Help Mode.           (line  38)
* backward-char:                         Moving Point.        (line  33)
* backward-delete-char-untabify:         Program Modes.       (line  30)
* backward-kill-sentence:                Sentences.           (line  35)
* backward-kill-word:                    Words.               (line  42)
* backward-list:                         Moving by Parens.    (line  29)
* backward-page:                         Pages.               (line  29)
* backward-paragraph:                    Paragraphs.          (line  17)
* backward-sentence:                     Sentences.           (line  18)
* backward-sexp:                         Expressions.         (line  24)
* backward-text-line:                    Nroff Mode.          (line  16)
* backward-up-list:                      Moving by Parens.    (line  33)
* backward-word:                         Moving Point.        (line  73)
* backward-word <1>:                     Words.               (line  26)
* balance-windows:                       Change Window.       (line  64)
* beginning-of-buffer:                   Moving Point.        (line  93)
* beginning-of-defun:                    Moving by Defuns.    (line  17)
* beginning-of-visual-line:              Visual Line Mode.    (line  21)
* bibtex-mode:                           TeX Mode.            (line   6)
* binary-overwrite-mode:                 Minor Modes.         (line  89)
* blackbox:                              Amusements.          (line   9)
* blink-cursor-mode:                     Cursor Display.      (line  23)
* bookmark-delete:                       Bookmarks.           (line  76)
* bookmark-insert:                       Bookmarks.           (line  82)
* bookmark-insert-location:              Bookmarks.           (line  79)
* bookmark-jump:                         Bookmarks.           (line  19)
* bookmark-jump <1>:                     Bookmarks.           (line  28)
* bookmark-load:                         Bookmarks.           (line  67)
* bookmark-save:                         Bookmarks.           (line  25)
* bookmark-set:                          Bookmarks.           (line  15)
* bookmark-set <1>:                      Bookmarks.           (line  28)
* bookmark-write:                        Bookmarks.           (line  73)
* browse-url:                            Help Mode.           (line  33)
* browse-url <1>:                        Browse-URL.          (line   6)
* browse-url-at-mouse:                   Browse-URL.          (line   6)
* browse-url-at-point:                   Browse-URL.          (line   6)
* bs-show:                               Buffer Menus.        (line   6)
* bubbles:                               Amusements.          (line  15)
* buffer-menu:                           Several Buffers.     (line  17)
* Buffer-menu-1-window:                  Several Buffers.     (line  96)
* Buffer-menu-2-window:                  Several Buffers.     (line 100)
* Buffer-menu-backup-unmark:             Several Buffers.     (line  52)
* Buffer-menu-bury:                      Several Buffers.     (line 106)
* Buffer-menu-delete:                    Several Buffers.     (line  29)
* Buffer-menu-delete-backwards:          Several Buffers.     (line  35)
* Buffer-menu-execute:                   Several Buffers.     (line  45)
* Buffer-menu-mark:                      Several Buffers.     (line 110)
* Buffer-menu-not-modified:              Several Buffers.     (line  62)
* buffer-menu-other-window:              Several Buffers.     (line  17)
* Buffer-menu-other-window:              Several Buffers.     (line  88)
* Buffer-menu-save:                      Several Buffers.     (line  39)
* Buffer-menu-select:                    Several Buffers.     (line 116)
* Buffer-menu-switch-other-window:       Several Buffers.     (line  92)
* Buffer-menu-this-window:               Several Buffers.     (line  84)
* Buffer-menu-toggle-files-only:         Several Buffers.     (line 128)
* Buffer-menu-toggle-read-only:          Several Buffers.     (line  67)
* Buffer-menu-unmark:                    Several Buffers.     (line  48)
* Buffer-menu-visit-tags-table:          Several Buffers.     (line  72)
* c-backslash-region:                    Other C Commands.    (line  47)
* c-backward-conditional:                Motion in C.         (line  28)
* c-beginning-of-defun:                  Motion in C.         (line  11)
* c-beginning-of-statement:              Motion in C.         (line  38)
* c-context-line-break:                  Other C Commands.    (line   7)
* c-electric-backspace:                  Program Modes.       (line  30)
* c-end-of-defun:                        Motion in C.         (line  11)
* c-end-of-statement:                    Motion in C.         (line  48)
* c-fill-paragraph:                      Other C Commands.    (line  29)
* c-forward-conditional:                 Motion in C.         (line  33)
* c-guess:                               Custom C Indent.     (line  57)
* c-guess-install:                       Custom C Indent.     (line  57)
* c-hungry-delete-backwards:             Hungry Delete.       (line  13)
* c-hungry-delete-forward:               Hungry Delete.       (line  19)
* c-indent-command:                      Basic Indent.        (line  11)
* c-indent-command <1>:                  C Indent.            (line  18)
* c-indent-defun:                        C Indent.            (line   9)
* c-indent-exp:                          C Indent.            (line  13)
* c-macro-expand:                        Other C Commands.    (line  36)
* c-mark-function:                       Moving by Defuns.    (line  29)
* c-set-style:                           Custom C Indent.     (line  26)
* c-show-syntactic-information:          Other C Commands.    (line  66)
* c-toggle-auto-newline:                 Electric C.          (line  28)
* c-toggle-electric-state:               Electric C.          (line  18)
* c-toggle-hungry-state:                 Hungry Delete.       (line  29)
* c-up-conditional:                      Motion in C.         (line  18)
* calendar:                              Calendar/Diary.      (line   6)
* calendar-astro-goto-day-number:        From Other Calendar. (line  11)
* calendar-astro-print-day-number:       To Other Calendar.   (line  18)
* calendar-backward-day:                 Calendar Unit Motion.
                                                              (line  26)
* calendar-backward-month:               Calendar Unit Motion.
                                                              (line  34)
* calendar-backward-week:                Calendar Unit Motion.
                                                              (line  26)
* calendar-bahai-goto-date:              From Other Calendar. (line  11)
* calendar-bahai-print-date:             To Other Calendar.   (line  30)
* calendar-beginning-of-month:           Move to Beginning or End.
                                                              (line  13)
* calendar-beginning-of-week:            Move to Beginning or End.
                                                              (line  10)
* calendar-beginning-of-year:            Move to Beginning or End.
                                                              (line  17)
* calendar-chinese-goto-date:            From Other Calendar. (line  11)
* calendar-chinese-print-date:           To Other Calendar.   (line  33)
* calendar-coptic-goto-date:             From Other Calendar. (line  11)
* calendar-coptic-print-date:            To Other Calendar.   (line  36)
* calendar-count-days-region:            Counting Days.       (line  10)
* calendar-cursor-holidays:              Holidays.            (line  26)
* calendar-end-of-month:                 Move to Beginning or End.
                                                              (line  15)
* calendar-end-of-week:                  Move to Beginning or End.
                                                              (line  11)
* calendar-end-of-year:                  Move to Beginning or End.
                                                              (line  19)
* calendar-ethiopic-goto-date:           From Other Calendar. (line  11)
* calendar-ethiopic-print-date:          To Other Calendar.   (line  39)
* calendar-forward-day:                  Calendar Unit Motion.
                                                              (line  26)
* calendar-forward-month:                Calendar Unit Motion.
                                                              (line  34)
* calendar-forward-week:                 Calendar Unit Motion.
                                                              (line  26)
* calendar-forward-year:                 Calendar Unit Motion.
                                                              (line  34)
* calendar-forward-year <1>:             Calendar Unit Motion.
                                                              (line  34)
* calendar-french-goto-date:             From Other Calendar. (line  11)
* calendar-french-print-date:            To Other Calendar.   (line  27)
* calendar-goto-date:                    Specified Dates.     (line  21)
* calendar-goto-day-of-year:             Specified Dates.     (line  26)
* calendar-goto-today:                   Specified Dates.     (line  33)
* calendar-hebrew-goto-date:             From Other Calendar. (line  11)
* calendar-hebrew-list-yahrzeits:        From Other Calendar. (line  53)
* calendar-hebrew-print-date:            To Other Calendar.   (line  21)
* calendar-islamic-goto-date:            From Other Calendar. (line  11)
* calendar-islamic-print-date:           To Other Calendar.   (line  24)
* calendar-iso-goto-date:                From Other Calendar. (line  11)
* calendar-iso-goto-week:                Specified Dates.     (line  26)
* calendar-iso-goto-week <1>:            From Other Calendar. (line  11)
* calendar-iso-print-date:               To Other Calendar.   (line  12)
* calendar-julian-goto-date:             From Other Calendar. (line  11)
* calendar-julian-print-date:            To Other Calendar.   (line  15)
* calendar-list-holidays:                Holidays.            (line  41)
* calendar-lunar-phases:                 Lunar Phases.        (line  18)
* calendar-mark-holidays:                Holidays.            (line  32)
* calendar-mark-today:                   Calendar Customizing.
                                                              (line  43)
* calendar-mayan-goto-long-count-date:   Mayan Calendar.      (line  36)
* calendar-mayan-next-calendar-round-date: Mayan Calendar.    (line  56)
* calendar-mayan-next-haab-date:         Mayan Calendar.      (line  49)
* calendar-mayan-next-tzolkin-date:      Mayan Calendar.      (line  42)
* calendar-mayan-previous-haab-date:     Mayan Calendar.      (line  49)
* calendar-mayan-previous-tzolkin-date:  Mayan Calendar.      (line  42)
* calendar-mayan-print-date:             To Other Calendar.   (line  45)
* calendar-other-month:                  Specified Dates.     (line  30)
* calendar-persian-goto-date:            From Other Calendar. (line  11)
* calendar-persian-print-date:           To Other Calendar.   (line  42)
* calendar-print-day-of-year:            General Calendar.    (line  19)
* calendar-print-other-dates:            To Other Calendar.   (line   9)
* calendar-redraw:                       General Calendar.    (line  24)
* calendar-scroll-left:                  Scroll Calendar.     (line  25)
* calendar-scroll-left-three-months:     Scroll Calendar.     (line  30)
* calendar-scroll-right:                 Scroll Calendar.     (line  25)
* calendar-scroll-right-three-months:    Scroll Calendar.     (line  30)
* calendar-set-date-style:               Date Formats.        (line  43)
* calendar-star-date:                    Calendar Customizing.
                                                              (line  37)
* calendar-sunrise-sunset:               Sunrise/Sunset.      (line  20)
* calendar-unmark:                       Holidays.            (line  32)
* capitalize-word:                       Case.                (line  20)
* cd:                                    File Names.          (line  29)
* center-line:                           Fill Commands.       (line  46)
* change-log-merge:                      Change Log Commands. (line  46)
* change-log-mode:                       Change Log Commands. (line  34)
* check-parens:                          Parentheses.         (line   6)
* choose-completion:                     Completion Commands. (line  52)
* clean-buffer-list:                     Kill Buffer.         (line  49)
* clear-rectangle:                       Rectangles.          (line  90)
* clipboard-kill-region:                 Clipboard.           (line  42)
* clipboard-kill-ring-save:              Clipboard.           (line  42)
* clipboard-yank:                        Clipboard.           (line  42)
* clone-indirect-buffer:                 Indirect Buffers.    (line  13)
* clone-indirect-buffer-other-window:    Indirect Buffers.    (line  17)
* column-number-mode:                    Optional Mode Line.  (line  22)
* comint-bol-or-process-mark:            Shell Mode.          (line  38)
* comint-continue-subjob:                Shell Mode.          (line 121)
* comint-copy-old-input:                 Shell History Copying.
                                                              (line  12)
* comint-delchar-or-maybe-eof:           Shell Mode.          (line  32)
* comint-delete-output:                  Shell Mode.          (line  76)
* comint-dynamic-list-filename...:       Shell Mode.          (line  28)
* comint-dynamic-list-input-ring:        Shell Ring.          (line  25)
* comint-get-next-from-history:          Shell Ring.          (line  19)
* comint-history-isearch-backward-regexp: Shell Ring.         (line  14)
* comint-input-previous-argument:        Shell Ring.          (line  22)
* comint-interrupt-subjob:               Shell Mode.          (line  61)
* comint-kill-input:                     Shell Mode.          (line  53)
* comint-magic-space:                    History References.  (line  16)
* comint-next-input:                     Shell Ring.          (line  10)
* comint-next-prompt:                    Shell History Copying.
                                                              (line   9)
* comint-previous-input:                 Shell Ring.          (line   6)
* comint-previous-prompt:                Shell History Copying.
                                                              (line   6)
* comint-quit-subjob:                    Shell Mode.          (line  71)
* comint-run:                            Shell Mode.          (line 152)
* comint-send-input:                     Shell Mode.          (line  12)
* comint-show-maximum-output:            Shell Mode.          (line  91)
* comint-show-output:                    Shell Mode.          (line  87)
* comint-stop-subjob:                    Shell Mode.          (line  66)
* comint-strip-ctrl-m:                   Shell Mode.          (line 125)
* comint-truncate-buffer:                Shell Mode.          (line 134)
* comint-write-output:                   Shell Mode.          (line  81)
* comment-dwim:                          Comment Commands.    (line  25)
* comment-indent-new-line:               Multi-Line Comments. (line   6)
* comment-kill:                          Comment Commands.    (line  59)
* comment-region:                        Comment Commands.    (line  66)
* comment-set-column:                    Options for Comments.
                                                              (line   6)
* compare-windows:                       Comparing Files.     (line  25)
* compilation-next-error:                Compilation Mode.    (line 106)
* compilation-next-file:                 Compilation Mode.    (line 106)
* compilation-previous-error:            Compilation Mode.    (line 106)
* compilation-previous-file:             Compilation Mode.    (line 106)
* compile:                               Compilation.         (line  19)
* compile (MS-DOS):                      MS-DOS Processes.    (line   6)
* compile-goto-error:                    Compilation Mode.    (line  13)
* completion-at-point:                   Symbol Completion.   (line  15)
* completion-at-point <1>:               Shell Mode.          (line  20)
* compose-mail:                          Sending Mail.        (line   6)
* compose-mail-other-frame:              Sending Mail.        (line  34)
* compose-mail-other-window:             Sending Mail.        (line  34)
* copy-dir-locals-to-file-locals:        Specifying File Variables.
                                                              (line  70)
* copy-dir-locals-to-file-locals-prop-line: Specifying File Variables.
                                                              (line  17)
* copy-directory:                        Misc File Ops.       (line  37)
* copy-file:                             Misc File Ops.       (line  34)
* copy-file-locals-to-dir-locals:        Directory Variables. (line  49)
* copy-rectangle-as-kill:                Rectangles.          (line  75)
* copy-rectangle-to-register:            Rectangle Registers. (line   9)
* copy-to-buffer:                        Accumulating Text.   (line   6)
* copy-to-register:                      Text Registers.      (line  26)
* count-lines-page:                      Pages.               (line  48)
* count-text-lines:                      Nroff Mode.          (line  16)
* count-words:                           Position Info.       (line  49)
* count-words-region:                    Position Info.       (line  44)
* cpp-highlight-buffer:                  Other C Commands.    (line  57)
* create-fontset-from-fontset-spec:      Defining Fontsets.   (line 105)
* cua-mode:                              CUA Bindings.        (line   6)
* Custom-save:                           Changing a Variable. (line 134)
* Custom-set:                            Changing a Variable. (line 134)
* customize:                             Easy Customization.  (line  15)
* customize-apropos:                     Specific Customization.
                                                              (line  39)
* customize-browse:                      Browsing Custom.     (line   6)
* customize-changed:                     Specific Customization.
                                                              (line  46)
* customize-create-theme:                Creating Custom Themes.
                                                              (line   6)
* customize-face:                        Specific Customization.
                                                              (line  35)
* customize-group:                       Specific Customization.
                                                              (line  35)
* customize-option:                      Specific Customization.
                                                              (line  29)
* customize-saved:                       Specific Customization.
                                                              (line  53)
* customize-themes:                      Custom Themes.       (line  16)
* customize-unsaved:                     Specific Customization.
                                                              (line  53)
* cwarn-mode:                            Other C Commands.    (line  72)
* cycle-spacing:                         Deletion.            (line  40)
* dabbrev-completion:                    Dynamic Abbrevs.     (line  12)
* dabbrev-expand:                        Dynamic Abbrevs.     (line  12)
* dbx:                                   Starting GUD.        (line  33)
* debug_print:                           Checklist.           (line 245)
* decipher:                              Amusements.          (line  18)
* default-value:                         Locals.              (line  69)
* define-abbrevs:                        Saving Abbrevs.      (line  41)
* define-global-abbrev:                  Defining Abbrevs.    (line  46)
* define-key:                            Init Rebinding.      (line  79)
* define-mode-abbrev:                    Defining Abbrevs.    (line  46)
* delete-backward-char:                  Deletion.            (line   6)
* delete-blank-lines:                    Blank Lines.         (line  13)
* delete-char:                           Deletion.            (line   6)
* delete-dir-local-variable:             Directory Variables. (line  49)
* delete-duplicate-lines:                Deletion.            (line  62)
* delete-file:                           Misc File Ops.       (line  10)
* delete-file-local-variable:            Specifying File Variables.
                                                              (line  70)
* delete-file-local-variable-prop-line:  Specifying File Variables.
                                                              (line  17)
* delete-frame:                          Frame Commands.      (line   9)
* delete-horizontal-space:               Deletion.            (line  40)
* delete-indentation:                    Indentation Commands.
                                                              (line  32)
* delete-other-frames:                   Frame Commands.      (line  21)
* delete-other-windows:                  Change Window.       (line  40)
* delete-rectangle:                      Rectangles.          (line  62)
* delete-selection-mode:                 Using Region.        (line  57)
* delete-trailing-whitespace:            Useless Whitespace.  (line  21)
* delete-whitespace-rectangle:           Rectangles.          (line  94)
* delete-window:                         Change Window.       (line  29)
* describe-bindings:                     Misc Help.           (line  39)
* describe-categories:                   Regexp Backslash.    (line 130)
* describe-character-set:                Charsets.            (line  24)
* describe-coding-system:                Coding Systems.      (line  45)
* describe-copying:                      Help Files.          (line  13)
* describe-distribution:                 Help Files.          (line  13)
* describe-function:                     Name Help.           (line   6)
* describe-gnu-project:                  Help Files.          (line  13)
* describe-input-method:                 Select Input Method. (line  16)
* describe-key:                          Key Help.            (line   6)
* describe-key-briefly:                  Key Help.            (line   6)
* describe-language-environment:         Language Environments.
                                                              (line  76)
* describe-mode:                         Misc Help.           (line  34)
* describe-mode <1>:                     Major Modes.         (line  65)
* describe-no-warranty:                  Help Files.          (line  13)
* describe-package:                      Package Keywords.    (line  19)
* describe-package <1>:                  Packages.            (line  16)
* describe-prefix-bindings:              Misc Help.           (line  46)
* describe-syntax:                       Misc Help.           (line  39)
* describe-text-properties:              Editing Format Info. (line  20)
* describe-theme:                        Custom Themes.       (line  77)
* describe-variable:                     Name Help.           (line  37)
* desktop-change-dir:                    Saving Emacs Sessions.
                                                              (line  29)
* desktop-clear:                         Saving Emacs Sessions.
                                                              (line  51)
* desktop-revert:                        Saving Emacs Sessions.
                                                              (line  29)
* desktop-save:                          Saving Emacs Sessions.
                                                              (line  15)
* diary:                                 Displaying the Diary.
                                                              (line  58)
* diary-anniversary:                     Special Diary Entries.
                                                              (line  33)
* diary-anniversary <1>:                 Sexp Diary Entries.  (line  16)
* diary-astro-day-number:                Sexp Diary Entries.  (line 109)
* diary-bahai-date:                      Sexp Diary Entries.  (line 109)
* diary-bahai-insert-entry:              Non-Gregorian Diary. (line  64)
* diary-bahai-insert-monthly-entry:      Non-Gregorian Diary. (line  64)
* diary-bahai-insert-yearly-entry:       Non-Gregorian Diary. (line  64)
* diary-bahai-list-entries:              Non-Gregorian Diary. (line  13)
* diary-bahai-mark-entries:              Non-Gregorian Diary. (line  13)
* diary-block:                           Special Diary Entries.
                                                              (line  44)
* diary-chinese-date:                    Sexp Diary Entries.  (line 109)
* diary-coptic-date:                     Sexp Diary Entries.  (line 109)
* diary-cyclic:                          Special Diary Entries.
                                                              (line  60)
* diary-cyclic <1>:                      Sexp Diary Entries.  (line  34)
* diary-date:                            Sexp Diary Entries.  (line  51)
* diary-day-of-year:                     Sexp Diary Entries.  (line 109)
* diary-ethiopic-date:                   Sexp Diary Entries.  (line 109)
* diary-fancy-display:                   Diary Display.       (line   6)
* diary-float:                           Special Diary Entries.
                                                              (line  82)
* diary-float <1>:                       Sexp Diary Entries.  (line  62)
* diary-french-date:                     Sexp Diary Entries.  (line 109)
* diary-hebrew-birthday:                 Sexp Diary Entries.  (line 158)
* diary-hebrew-date:                     Sexp Diary Entries.  (line 109)
* diary-hebrew-insert-entry:             Non-Gregorian Diary. (line  64)
* diary-hebrew-insert-monthly-entry:     Non-Gregorian Diary. (line  64)
* diary-hebrew-insert-yearly-entry:      Non-Gregorian Diary. (line  64)
* diary-hebrew-list-entries:             Non-Gregorian Diary. (line  13)
* diary-hebrew-mark-entries:             Non-Gregorian Diary. (line  13)
* diary-hebrew-omer:                     Sexp Diary Entries.  (line 158)
* diary-hebrew-parasha:                  Sexp Diary Entries.  (line 158)
* diary-hebrew-rosh-hodesh:              Sexp Diary Entries.  (line 158)
* diary-hebrew-sabbath-candles:          Sexp Diary Entries.  (line 158)
* diary-hebrew-yahrzeit:                 Sexp Diary Entries.  (line 158)
* diary-include-other-diary-files:       Fancy Diary Display. (line  38)
* diary-insert-anniversary-entry:        Special Diary Entries.
                                                              (line  27)
* diary-insert-block-entry:              Special Diary Entries.
                                                              (line  50)
* diary-insert-cyclic-entry:             Special Diary Entries.
                                                              (line  55)
* diary-insert-entry:                    Adding to Diary.     (line  25)
* diary-insert-monthly-entry:            Adding to Diary.     (line  31)
* diary-insert-weekly-entry:             Adding to Diary.     (line  31)
* diary-insert-yearly-entry:             Adding to Diary.     (line  31)
* diary-islamic-date:                    Sexp Diary Entries.  (line 109)
* diary-islamic-insert-entry:            Non-Gregorian Diary. (line  64)
* diary-islamic-insert-monthly-entry:    Non-Gregorian Diary. (line  64)
* diary-islamic-insert-yearly-entry:     Non-Gregorian Diary. (line  64)
* diary-islamic-list-entries:            Non-Gregorian Diary. (line  13)
* diary-islamic-mark-entries:            Non-Gregorian Diary. (line  13)
* diary-iso-date:                        Sexp Diary Entries.  (line 109)
* diary-julian-date:                     Sexp Diary Entries.  (line 109)
* diary-lunar-phases:                    Sexp Diary Entries.  (line 109)
* diary-mail-entries:                    Displaying the Diary.
                                                              (line  67)
* diary-mark-entries:                    Displaying the Diary.
                                                              (line  44)
* diary-mark-included-diary-files:       Fancy Diary Display. (line  38)
* diary-mayan-date:                      Sexp Diary Entries.  (line 109)
* diary-persian-date:                    Sexp Diary Entries.  (line 109)
* diary-print-entries:                   Diary Display.       (line  33)
* diary-remind:                          Sexp Diary Entries.  (line  46)
* diary-show-all-entries:                Displaying the Diary.
                                                              (line  55)
* diary-simple-display:                  Diary Display.       (line   6)
* diary-sort-entries:                    Fancy Diary Display. (line  11)
* diary-sunrise-sunset:                  Sexp Diary Entries.  (line 109)
* diary-view-entries:                    Displaying the Diary.
                                                              (line  29)
* diff:                                  Comparing Files.     (line   6)
* diff-add-change-log-entries-other-window: Diff Mode.        (line 116)
* diff-apply-hunk:                       Diff Mode.           (line  66)
* diff-auto-refine-mode:                 Diff Mode.           (line  35)
* diff-backup:                           Comparing Files.     (line  16)
* diff-buffer-with-file:                 Comparing Files.     (line  21)
* diff-context->unified:                 Diff Mode.           (line 106)
* diff-delete-trailing-whitespace:       Diff Mode.           (line 124)
* diff-ediff-patch:                      Diff Mode.           (line  79)
* diff-file-kill:                        Diff Mode.           (line  62)
* diff-file-next:                        Diff Mode.           (line  51)
* diff-file-prev:                        Diff Mode.           (line  55)
* diff-goto-source:                      Diff Mode.           (line  75)
* diff-hunk-kill:                        Diff Mode.           (line  59)
* diff-hunk-next:                        Diff Mode.           (line  33)
* diff-hunk-prev:                        Diff Mode.           (line  46)
* diff-mode:                             Diff Mode.           (line   6)
* diff-refine-hunk:                      Diff Mode.           (line  70)
* diff-refine-hunk <1>:                  Diff Mode.           (line 112)
* diff-restrict-view:                    Diff Mode.           (line  83)
* diff-reverse-direction:                Diff Mode.           (line  89)
* diff-split-hunk:                       Diff Mode.           (line  92)
* diff-unified->context:                 Diff Mode.           (line 101)
* digit-argument:                        Arguments.           (line  15)
* dir-locals-set-class-variables:        Directory Variables. (line  56)
* dir-locals-set-directory-class:        Directory Variables. (line  56)
* dired:                                 Dired Enter.         (line   6)
* dired-at-point:                        FFAP.                (line   6)
* dired-change-marks:                    Marks vs Flags.      (line  92)
* dired-clean-directory:                 Flagging Many Files. (line  38)
* dired-compare-directories:             Misc Dired Features. (line  45)
* dired-copy-filename-as-kill:           Misc Dired Features. (line  18)
* dired-create-directory:                Misc Dired Features. (line   6)
* dired-diff:                            Comparison in Dired. (line   6)
* dired-display-file:                    Dired Visiting.      (line  28)
* dired-do-byte-compile:                 Operating on Files.  (line 131)
* dired-do-chgrp:                        Operating on Files.  (line  81)
* dired-do-chmod:                        Operating on Files.  (line  76)
* dired-do-chown:                        Operating on Files.  (line  85)
* dired-do-compress:                     Operating on Files.  (line 106)
* dired-do-copy:                         Operating on Files.  (line  32)
* dired-do-copy-regexp:                  Transforming File Names.
                                                              (line  35)
* dired-do-delete:                       Operating on Files.  (line  46)
* dired-do-flagged-delete:               Dired Deletion.      (line  44)
* dired-do-hardlink:                     Operating on Files.  (line  64)
* dired-do-hardlink-regexp:              Transforming File Names.
                                                              (line  36)
* dired-do-isearch:                      Misc Dired Features. (line  10)
* dired-do-isearch-regexp:               Misc Dired Features. (line  10)
* dired-do-kill-lines:                   Dired Updating.      (line  52)
* dired-do-load:                         Operating on Files.  (line 127)
* dired-do-print:                        Operating on Files.  (line  99)
* dired-do-query-replace-regexp:         Operating on Files.  (line 144)
* dired-do-redisplay:                    Dired Updating.      (line  35)
* dired-do-rename:                       Operating on Files.  (line  54)
* dired-do-rename-regexp:                Transforming File Names.
                                                              (line  34)
* dired-do-search:                       Operating on Files.  (line 136)
* dired-do-shell-command:                Shell Commands in Dired.
                                                              (line   6)
* dired-do-symlink:                      Operating on Files.  (line  70)
* dired-do-symlink-regexp:               Transforming File Names.
                                                              (line  37)
* dired-do-touch:                        Operating on Files.  (line  94)
* dired-downcase:                        Transforming File Names.
                                                              (line  29)
* dired-find-file:                       Dired Visiting.      (line  13)
* dired-find-file-other-window:          Dired Visiting.      (line  22)
* dired-flag-auto-save-files:            Flagging Many Files. (line  30)
* dired-flag-backup-files:               Flagging Many Files. (line  34)
* dired-flag-file-deletion:              Dired Deletion.      (line  22)
* dired-flag-files-regexp:               Flagging Many Files. (line  56)
* dired-flag-garbage-files:              Flagging Many Files. (line  50)
* dired-goto-file:                       Dired Navigation.    (line  16)
* dired-hide-all:                        Hiding Subdirectories.
                                                              (line  15)
* dired-hide-details-mode:               Misc Dired Features. (line  34)
* dired-hide-subdir:                     Hiding Subdirectories.
                                                              (line  10)
* dired-isearch-filenames:               Dired Navigation.    (line  20)
* dired-isearch-filenames-regexp:        Dired Navigation.    (line  20)
* dired-mark:                            Marks vs Flags.      (line  17)
* dired-mark-directories:                Marks vs Flags.      (line  33)
* dired-mark-executables:                Marks vs Flags.      (line  24)
* dired-mark-files-containing-regexp:    Marks vs Flags.      (line 123)
* dired-mark-files-regexp:               Marks vs Flags.      (line 113)
* dired-mark-subdir-files:               Marks vs Flags.      (line  38)
* dired-mark-symlinks:                   Marks vs Flags.      (line  28)
* dired-maybe-insert-subdir:             Subdirectories in Dired.
                                                              (line  18)
* dired-mouse-find-file-other-window:    Dired Visiting.      (line  34)
* dired-next-dirline:                    Subdirectory Motion. (line  35)
* dired-next-marked-file:                Marks vs Flags.      (line  76)
* dired-next-subdir:                     Subdirectory Motion. (line  15)
* dired-other-frame:                     Dired Enter.         (line  42)
* dired-other-window:                    Pop Up Window.       (line  24)
* dired-other-window <1>:                Dired Enter.         (line  42)
* dired-prev-dirline:                    Subdirectory Motion. (line  30)
* dired-prev-marked-file:                Marks vs Flags.      (line  82)
* dired-prev-subdir:                     Subdirectory Motion. (line  19)
* dired-sort-toggle-or-edit:             Dired Updating.      (line  68)
* dired-toggle-marks:                    Marks vs Flags.      (line  87)
* dired-tree-down:                       Subdirectory Motion. (line  26)
* dired-tree-up:                         Subdirectory Motion. (line  23)
* dired-undo:                            Marks vs Flags.      (line 131)
* dired-unmark:                          Marks vs Flags.      (line  43)
* dired-unmark-all-files:                Marks vs Flags.      (line  65)
* dired-unmark-all-marks:                Marks vs Flags.      (line  60)
* dired-unmark-backward:                 Marks vs Flags.      (line  51)
* dired-up-directory:                    Dired Visiting.      (line  45)
* dired-upcase:                          Transforming File Names.
                                                              (line  23)
* dired-view-file:                       Dired Visiting.      (line  39)
* dirs:                                  Directory Tracking.  (line  19)
* dirtrack-mode:                         Directory Tracking.  (line  25)
* disable-command:                       Disabling.           (line  33)
* disable-theme:                         Custom Themes.       (line  70)
* display-battery-mode:                  Optional Mode Line.  (line  66)
* display-buffer:                        Pop Up Window.       (line  15)
* display-buffer <1>:                    Displaying Buffers.  (line  15)
* display-buffer <2>:                    Window Choice.       (line   6)
* display-local-help:                    Help Echo.           (line  14)
* display-time:                          Optional Mode Line.  (line  43)
* dissociated-press:                     Amusements.          (line  21)
* do-auto-save:                          Auto Save Control.   (line  35)
* doc-view-clear-cache:                  DocView Conversion.  (line   6)
* doc-view-enlarge:                      DocView Navigation.  (line  29)
* doc-view-first-page:                   DocView Navigation.  (line  24)
* doc-view-goto-page:                    DocView Navigation.  (line  24)
* doc-view-kill-proc:                    DocView Conversion.  (line  11)
* doc-view-kill-proc-and-buffer:         DocView Conversion.  (line  11)
* doc-view-last-page:                    DocView Navigation.  (line  24)
* doc-view-mode:                         Document View.       (line   6)
* doc-view-next-page:                    DocView Navigation.  (line  15)
* doc-view-open-text:                    Document View.       (line  22)
* doc-view-previous-page:                DocView Navigation.  (line  15)
* doc-view-reset-slice:                  DocView Slicing.     (line  27)
* doc-view-scroll-down-or-previous-page: DocView Navigation.  (line  19)
* doc-view-scroll-up-or-next-page:       DocView Navigation.  (line  19)
* doc-view-search:                       DocView Searching.   (line  11)
* doc-view-search-backward:              DocView Searching.   (line  11)
* doc-view-set-slice:                    DocView Slicing.     (line  10)
* doc-view-set-slice-using-mouse:        DocView Slicing.     (line  10)
* doc-view-show-tooltip:                 DocView Searching.   (line  11)
* doc-view-shrink:                       DocView Navigation.  (line  29)
* doc-view-toggle-display:               Document View.       (line  13)
* doc-view-toggle-display <1>:           Document View.       (line  13)
* doctex-mode:                           TeX Mode.            (line   6)
* doctor:                                Amusements.          (line  60)
* dos-mode25:                            MS-DOS Display.      (line  43)
* dos-mode4350:                          MS-DOS Display.      (line  43)
* down-list:                             Moving by Parens.    (line  40)
* downcase-region:                       Case.                (line  40)
* downcase-word:                         Case.                (line  20)
* dunnet:                                Amusements.          (line  32)
* edit-abbrevs:                          Editing Abbrevs.     (line  39)
* edit-kbd-macro:                        Edit Keyboard Macro. (line  21)
* edit-tab-stops:                        Tab Stops.           (line  15)
* eldoc-mode:                            Lisp Doc.            (line  10)
* electric-indent-mode:                  Indent Convenience.  (line  15)
* electric-layout-mode:                  Misc for Programs.   (line  25)
* electric-nroff-mode:                   Nroff Mode.          (line  25)
* electric-pair-mode:                    Matching.            (line  37)
* emacs-lisp-mode:                       Lisp Eval.           (line   6)
* emacs-version:                         Understanding Bug Reporting.
                                                              (line   6)
* emerge-auto-advance:                   Submodes of Emerge.  (line  31)
* emerge-buffers:                        Overview of Emerge.  (line  16)
* emerge-buffers-with-ancestor:          Overview of Emerge.  (line  19)
* emerge-files:                          Overview of Emerge.  (line   9)
* emerge-files-with-ancestor:            Overview of Emerge.  (line  12)
* emerge-skip-prefers:                   Submodes of Emerge.  (line  31)
* enable-command:                        Disabling.           (line  33)
* enable-theme:                          Custom Themes.       (line  70)
* end-of-buffer:                         Moving Point.        (line  97)
* end-of-defun:                          Moving by Defuns.    (line  17)
* end-of-visual-line:                    Visual Line Mode.    (line  21)
* enlarge-window:                        Change Window.       (line  45)
* enlarge-window-horizontally:           Change Window.       (line  54)
* enriched-mode:                         Enriched Mode.       (line  13)
* epa-dired-do-decrypt:                  Operating on Files.  (line 110)
* epa-dired-do-encrypt:                  Operating on Files.  (line 123)
* epa-dired-do-sign:                     Operating on Files.  (line 119)
* epa-dired-do-verify:                   Operating on Files.  (line 114)
* eval-buffer:                           Lisp Eval.           (line  62)
* eval-defun:                            Lisp Eval.           (line  47)
* eval-expression:                       Lisp Eval.           (line  30)
* eval-last-sexp:                        Lisp Eval.           (line  35)
* eval-print-last-sexp:                  Lisp Interaction.    (line  11)
* eval-region:                           Lisp Eval.           (line  62)
* eww:                                   EWW.                 (line   6)
* eww-open-file:                         EWW.                 (line   6)
* exchange-point-and-mark:               Setting Mark.        (line  46)
* execute-extended-command:              M-x.                 (line  55)
* exit-calendar:                         General Calendar.    (line  33)
* exit-recursive-edit:                   Recursive Edit.      (line  12)
* expand-abbrev:                         Expanding Abbrevs.   (line  24)
* expand-region-abbrevs:                 Expanding Abbrevs.   (line  54)
* f90-beginning-of-block:                Fortran Motion.      (line  41)
* f90-end-of-block:                      Fortran Motion.      (line  33)
* f90-mode:                              Fortran.             (line   6)
* f90-next-block:                        Fortran Motion.      (line  22)
* f90-next-statement:                    Fortran Motion.      (line  12)
* f90-previous-block:                    Fortran Motion.      (line  29)
* f90-previous-statement:                Fortran Motion.      (line  16)
* facemenu-remove-all:                   Editing Format Info. (line  16)
* facemenu-remove-face-props:            Editing Format Info. (line  12)
* facemenu-set-background:               Enriched Faces.      (line  35)
* facemenu-set-bold:                     Enriched Faces.      (line  15)
* facemenu-set-bold-italic:              Enriched Faces.      (line  21)
* facemenu-set-default:                  Enriched Faces.      (line  12)
* facemenu-set-face:                     Enriched Faces.      (line  28)
* facemenu-set-foreground:               Enriched Faces.      (line  31)
* facemenu-set-italic:                   Enriched Faces.      (line  18)
* facemenu-set-underline:                Enriched Faces.      (line  25)
* ff-find-related-file:                  Other C Commands.    (line  95)
* ffap:                                  FFAP.                (line   6)
* ffap-menu:                             FFAP.                (line   6)
* ffap-mode:                             FFAP.                (line  19)
* ffap-next:                             FFAP.                (line   6)
* file-cache-add-directory:              File Name Cache.     (line  17)
* file-cache-minibuffer-complete:        File Name Cache.     (line   6)
* file-name-shadow-mode:                 Minibuffer File.     (line  31)
* filesets-add-buffer:                   Filesets.            (line  13)
* filesets-init:                         Filesets.            (line   6)
* filesets-remove-buffer:                Filesets.            (line  13)
* fill-individual-paragraphs:            Fill Prefix.         (line  62)
* fill-nonuniform-paragraphs:            Fill Prefix.         (line  69)
* fill-paragraph:                        Fill Commands.       (line  17)
* fill-region:                           Fill Commands.       (line  21)
* fill-region-as-paragraph:              Fill Commands.       (line  27)
* find-alternate-file:                   Visiting.            (line  77)
* find-dired:                            Dired and Find.      (line  28)
* find-file:                             Visiting.            (line  27)
* find-file-at-point:                    FFAP.                (line   6)
* find-file-literally:                   Visiting.            (line 145)
* find-file-other-frame:                 Visiting.            (line 114)
* find-file-other-window:                Visiting.            (line 106)
* find-file-other-window <1>:            Pop Up Window.       (line  20)
* find-file-read-only:                   Visiting.            (line 102)
* find-file-read-only-other-frame:       Creating Frames.     (line  38)
* find-grep:                             Grep Searching.      (line  51)
* find-grep-dired:                       Dired and Find.      (line  17)
* find-name-dired:                       Dired and Find.      (line   9)
* find-tag:                              Find Tag.            (line  28)
* find-tag-other-frame:                  Find Tag.            (line  47)
* find-tag-other-window:                 Pop Up Window.       (line  33)
* find-tag-other-window <1>:             Find Tag.            (line  47)
* find-tag-regexp:                       Find Tag.            (line  67)
* finder-by-keyword:                     Package Keywords.    (line  11)
* flush-lines:                           Other Repeating Search.
                                                              (line  13)
* flyspell-mode:                         Spelling.            (line 147)
* flyspell-prog-mode:                    Spelling.            (line 159)
* foldout-exit-fold:                     Foldout.             (line  40)
* foldout-zoom-subtree:                  Foldout.             (line  16)
* follow-mode:                           Follow Mode.         (line   6)
* font-lock-add-keywords:                Font Lock.           (line  69)
* font-lock-mode:                        Font Lock.           (line  13)
* font-lock-remove-keywords:             Font Lock.           (line  81)
* format-decode-buffer:                  Enriched Mode.       (line  25)
* fortran-beginning-of-block:            Fortran Motion.      (line  41)
* fortran-column-ruler:                  Fortran Columns.     (line  26)
* fortran-comment-region:                Fortran Comments.    (line  78)
* fortran-end-of-block:                  Fortran Motion.      (line  33)
* fortran-indent-subprogram:             ForIndent Commands.  (line  19)
* fortran-join-line:                     ForIndent Commands.  (line  28)
* fortran-mode:                          Fortran.             (line   6)
* fortran-next-statement:                Fortran Motion.      (line  12)
* fortran-previous-statement:            Fortran Motion.      (line  16)
* fortran-split-line:                    ForIndent Commands.  (line  23)
* fortran-strip-sequence-nos:            Fortran Columns.     (line  52)
* fortran-window-create:                 Fortran Columns.     (line  47)
* fortran-window-create-momentarily:     Fortran Columns.     (line  42)
* fortune-to-signature:                  Mail Amusements.     (line  18)
* forward-button:                        Help Mode.           (line  38)
* forward-char:                          Moving Point.        (line  19)
* forward-list:                          Moving by Parens.    (line  29)
* forward-page:                          Pages.               (line  29)
* forward-paragraph:                     Paragraphs.          (line  17)
* forward-sentence:                      Sentences.           (line  18)
* forward-sexp:                          Expressions.         (line  24)
* forward-text-line:                     Nroff Mode.          (line  16)
* forward-word:                          Moving Point.        (line  64)
* forward-word <1>:                      Words.               (line  26)
* frameset-to-register:                  Configuration Registers.
                                                              (line   6)
* fringe-mode:                           Fringes.             (line   6)
* gdb:                                   Starting GUD.        (line  10)
* gdb-delete-breakpoint:                 Breakpoints Buffer.  (line  19)
* gdb-display-disassembly-for-thread:    Threads Buffer.      (line  31)
* gdb-display-locals-for-thread:         Threads Buffer.      (line  39)
* gdb-display-registers-for-thread:      Threads Buffer.      (line  43)
* gdb-display-stack-for-thread:          Threads Buffer.      (line  35)
* gdb-edit-value:                        Watch Expressions.   (line  27)
* gdb-frames-select:                     Stack Buffer.        (line  11)
* gdb-goto-breakpoint:                   Breakpoints Buffer.  (line  22)
* gdb-many-windows:                      GDB User Interface Layout.
                                                              (line  23)
* gdb-restore-windows:                   GDB User Interface Layout.
                                                              (line  23)
* gdb-select-thread:                     Threads Buffer.      (line   6)
* gdb-toggle-breakpoint:                 Breakpoints Buffer.  (line  13)
* gdb-var-delete:                        Watch Expressions.   (line  24)
* getenv:                                Environment.         (line  17)
* global-auto-revert-mode:               Reverting.           (line  35)
* global-cwarn-mode:                     Other C Commands.    (line  72)
* global-font-lock-mode:                 Font Lock.           (line  17)
* global-hl-line-mode:                   Cursor Display.      (line  49)
* global-set-key:                        Rebinding.           (line  17)
* global-unset-key:                      Rebinding.           (line  17)
* global-visual-line-mode:               Visual Line Mode.    (line  11)
* gnus:                                  Gnus Startup.        (line   6)
* gnus-group-exit:                       Gnus Group Buffer.   (line  47)
* gnus-group-kill-group:                 Gnus Group Buffer.   (line  33)
* gnus-group-list-all-groups:            Gnus Group Buffer.   (line  16)
* gnus-group-list-all-groups <1>:        Gnus Group Buffer.   (line  21)
* gnus-group-list-all-groups <2>:        Gnus Group Buffer.   (line  24)
* gnus-group-list-groups:                Gnus Group Buffer.   (line  11)
* gnus-group-next-unread-group:          Gnus Group Buffer.   (line  41)
* gnus-group-next-unread-group <1>:      Gnus Summary Buffer. (line  20)
* gnus-group-prev-unread-group:          Gnus Group Buffer.   (line  44)
* gnus-group-prev-unread-group <1>:      Gnus Summary Buffer. (line  23)
* gnus-group-read-group:                 Gnus Group Buffer.   (line   8)
* gnus-group-read-group <1>:             Gnus Summary Buffer. (line   8)
* gnus-group-unsubscribe-current-group:  Gnus Group Buffer.   (line  27)
* gnus-summary-isearch-article:          Gnus Summary Buffer. (line  26)
* gnus-summary-next-unread-article:      Gnus Group Buffer.   (line  41)
* gnus-summary-next-unread-article <1>:  Gnus Summary Buffer. (line  20)
* gnus-summary-prev-page:                Gnus Summary Buffer. (line  17)
* gnus-summary-prev-unread-article:      Gnus Group Buffer.   (line  44)
* gnus-summary-prev-unread-article <1>:  Gnus Summary Buffer. (line  23)
* gnus-summary-search-article-forward:   Gnus Summary Buffer. (line  31)
* gomoku:                                Amusements.          (line  34)
* goto-address-at-point:                 Goto Address mode.   (line   9)
* goto-address-mode:                     Goto Address mode.   (line   6)
* goto-char:                             Moving Point.        (line 114)
* goto-followup-to:                      Header Editing.      (line  30)
* goto-line:                             Moving Point.        (line 119)
* goto-line <1>:                         Select Buffer.       (line  69)
* goto-reply-to:                         Header Editing.      (line  30)
* gpm-mouse-mode:                        Text-Only Mouse.     (line  17)
* grep:                                  Grep Searching.      (line  26)
* grep (MS-DOS):                         MS-DOS Processes.    (line   6)
* grep-find:                             Grep Searching.      (line  51)
* gud-cont:                              Commands of GUD.     (line  49)
* gud-def:                               GUD Customization.   (line  21)
* gud-down:                              Commands of GUD.     (line  72)
* gud-finish:                            Commands of GUD.     (line  84)
* gud-gdb:                               Starting GUD.        (line  15)
* gud-gdb-complete-command:              Commands of GUD.     (line  97)
* gud-jump:                              Commands of GUD.     (line  90)
* gud-next:                              Commands of GUD.     (line  35)
* gud-print:                             Commands of GUD.     (line  44)
* gud-refresh:                           Commands of GUD.     (line  25)
* gud-remove:                            Commands of GUD.     (line  55)
* gud-step:                              Commands of GUD.     (line  30)
* gud-stepi:                             Commands of GUD.     (line  40)
* gud-tbreak:                            Commands of GUD.     (line  61)
* gud-tooltip-mode:                      Debugger Operation.  (line  30)
* gud-until:                             Commands of GUD.     (line  77)
* gud-up:                                Commands of GUD.     (line  67)
* gud-watch:                             Watch Expressions.   (line   6)
* handwrite:                             PostScript.          (line  56)
* hanoi:                                 Amusements.          (line  37)
* help-command:                          Help.                (line   6)
* help-follow:                           Help Mode.           (line  25)
* help-for-help:                         Help.                (line   6)
* help-go-back:                          Help Mode.           (line  25)
* help-with-tutorial:                    Basic.               (line   6)
* hi-lock-find-patterns:                 Highlight Interactively.
                                                              (line  87)
* hi-lock-mode:                          Highlight Interactively.
                                                              (line  11)
* hi-lock-write-interactive-patterns:    Highlight Interactively.
                                                              (line  75)
* hide-body:                             Outline Visibility.  (line  67)
* hide-entry:                            Outline Visibility.  (line  46)
* hide-ifdef-mode:                       Other C Commands.    (line  87)
* hide-leaves:                           Outline Visibility.  (line  56)
* hide-other:                            Outline Visibility.  (line  63)
* hide-sublevels:                        Outline Visibility.  (line  67)
* hide-subtree:                          Outline Visibility.  (line  51)
* highlight-changes-mode:                Highlight Interactively.
                                                              (line   6)
* highlight-lines-matching-regexp:       Highlight Interactively.
                                                              (line  58)
* highlight-phrase:                      Highlight Interactively.
                                                              (line  63)
* highlight-regexp:                      Highlight Interactively.
                                                              (line  26)
* highlight-symbol-at-point:             Highlight Interactively.
                                                              (line  70)
* hl-line-mode:                          Cursor Display.      (line  49)
* holidays:                              Holidays.            (line  46)
* how-many:                              Other Repeating Search.
                                                              (line  13)
* hs-hide-all:                           Hideshow.            (line  20)
* hs-hide-block:                         Hideshow.            (line  20)
* hs-hide-level:                         Hideshow.            (line  20)
* hs-minor-mode:                         Hideshow.            (line   6)
* hs-minor-mode <1>:                     Hideshow.            (line  20)
* hs-show-all:                           Hideshow.            (line  20)
* hs-show-block:                         Hideshow.            (line  20)
* hs-show-region:                        Hideshow.            (line  20)
* html-mode:                             HTML Mode.           (line   6)
* htmlfontify-buffer:                    Printing.            (line  10)
* icalendar-export-file, icalendar-export-region: Importing Diary.
                                                              (line  39)
* icalendar-import-buffer:               Importing Diary.     (line  22)
* icalendar-import-file:                 Importing Diary.     (line  29)
* icomplete-mode:                        Icomplete.           (line   6)
* ielm:                                  Lisp Interaction.    (line  23)
* image-decrease-speed:                  File Conveniences.   (line  31)
* image-dired-display-thumbs:            Image-Dired.         (line  10)
* image-goto-frame:                      File Conveniences.   (line  31)
* image-increase-speed:                  File Conveniences.   (line  31)
* image-mode:                            File Conveniences.   (line  20)
* image-next-file:                       File Conveniences.   (line  20)
* image-next-frame:                      File Conveniences.   (line  31)
* image-previous-file:                   File Conveniences.   (line  20)
* image-previous-frame:                  File Conveniences.   (line  31)
* image-reset-speed:                     File Conveniences.   (line  31)
* image-reverse-speed:                   File Conveniences.   (line  31)
* image-toggle-animation:                File Conveniences.   (line  31)
* image-toggle-display:                  File Conveniences.   (line  20)
* imenu:                                 Imenu.               (line  11)
* imenu-add-menubar-index:               Imenu.               (line  15)
* increase-left-margin:                  Enriched Indentation.
                                                              (line  13)
* increment-register:                    Number Registers.    (line  13)
* indent-code-rigidly:                   Multi-line Indent.   (line  42)
* indent-for-tab-command:                Indentation.         (line  13)
* indent-for-tab-command <1>:            Basic Indent.        (line  11)
* indent-line-function:                  Basic Indent.        (line  11)
* indent-pp-sexp:                        Multi-line Indent.   (line  25)
* indent-region:                         Indentation Commands.
                                                              (line  45)
* indent-relative:                       Indentation Commands.
                                                              (line  25)
* indent-rigidly:                        Indentation Commands.
                                                              (line  52)
* info:                                  Misc Help.           (line   6)
* Info-goto-emacs-command-node:          Name Help.           (line  46)
* Info-goto-emacs-key-command-node:      Key Help.            (line  16)
* info-lookup-file:                      Info Lookup.         (line   6)
* info-lookup-symbol:                    Misc Help.           (line  20)
* info-lookup-symbol <1>:                Info Lookup.         (line   6)
* insert-abbrevs:                        Saving Abbrevs.      (line  41)
* insert-char:                           Inserting Text.      (line  58)
* insert-file:                           Misc File Ops.       (line  75)
* insert-file-literally:                 Misc File Ops.       (line  80)
* insert-kbd-macro:                      Save Keyboard Macro. (line  43)
* insert-register:                       Text Registers.      (line  49)
* inverse-add-global-abbrev:             Defining Abbrevs.    (line  40)
* inverse-add-mode-abbrev:               Defining Abbrevs.    (line  40)
* isearch-backward:                      Basic Isearch.       (line  48)
* isearch-backward-regexp:               Regexp Search.       (line  18)
* isearch-del-char:                      Isearch Yank.        (line  26)
* isearch-forward:                       Basic Isearch.       (line  11)
* isearch-forward-regexp:                Regexp Search.       (line  18)
* isearch-forward-symbol:                Symbol Search.       (line  26)
* isearch-forward-symbol-at-point:       Symbol Search.       (line  26)
* isearch-forward-word:                  Word Search.         (line  22)
* isearch-toggle-input-method:           Special Isearch.     (line  58)
* isearch-toggle-invisible:              Special Isearch.     (line  28)
* isearch-toggle-lax-whitespace:         Special Isearch.     (line   9)
* isearch-toggle-specified-input-method: Special Isearch.     (line  58)
* isearch-yank-char:                     Isearch Yank.        (line  26)
* isearch-yank-kill:                     Isearch Yank.        (line   6)
* isearch-yank-line:                     Isearch Yank.        (line  18)
* isearch-yank-pop:                      Isearch Yank.        (line   6)
* isearch-yank-word-or-char:             Isearch Yank.        (line  13)
* iso-gtex2iso:                          TeX Misc.            (line  11)
* iso-iso2gtex:                          TeX Misc.            (line  11)
* iso-iso2tex:                           TeX Misc.            (line  11)
* iso-tex2iso:                           TeX Misc.            (line  11)
* ispell:                                Spelling.            (line  49)
* ispell-buffer:                         Spelling.            (line  49)
* ispell-change-dictionary:              Spelling.            (line 132)
* ispell-complete-word:                  Spelling.            (line 119)
* ispell-kill-ispell:                    Spelling.            (line 126)
* ispell-message:                        Mail Misc.           (line  34)
* ispell-region:                         Spelling.            (line  49)
* ispell-word:                           Spelling.            (line  42)
* jdb:                                   Starting GUD.        (line  27)
* jump-to-register:                      Position Registers.  (line  17)
* just-one-space:                        Deletion.            (line  40)
* kbd:                                   Init Rebinding.      (line  10)
* kbd-macro-query:                       Keyboard Macro Query.
                                                              (line  13)
* keep-lines:                            Other Repeating Search.
                                                              (line  13)
* keyboard-escape-quit:                  Quitting.            (line  72)
* keyboard-quit:                         Quitting.            (line  45)
* kill-all-abbrevs:                      Defining Abbrevs.    (line  55)
* kill-buffer:                           Kill Buffer.         (line  22)
* kill-buffer-and-window:                Change Window.       (line  36)
* kill-compilation:                      Compilation.         (line  64)
* kill-emacs:                            Exiting.             (line  36)
* kill-line:                             Killing by Lines.    (line  11)
* kill-local-variable:                   Locals.              (line  51)
* kill-matching-buffers:                 Kill Buffer.         (line  35)
* kill-rectangle:                        Rectangles.          (line  62)
* kill-region:                           Other Kill Commands. (line   6)
* kill-region <1>:                       Other Kill Commands. (line  26)
* kill-ring-save:                        Other Kill Commands. (line  26)
* kill-sentence:                         Sentences.           (line  29)
* kill-sexp:                             Expressions.         (line  43)
* kill-some-buffers:                     Kill Buffer.         (line  30)
* kill-whole-line:                       Killing by Lines.    (line  32)
* kill-word:                             Words.               (line  34)
* kmacro-add-counter:                    Keyboard Macro Counter.
                                                              (line  55)
* kmacro-bind-to-key:                    Save Keyboard Macro. (line  24)
* kmacro-cycle-ring-next:                Keyboard Macro Ring. (line  42)
* kmacro-cycle-ring-previous:            Keyboard Macro Ring. (line  42)
* kmacro-edit-lossage:                   Edit Keyboard Macro. (line  26)
* kmacro-edit-macro:                     Edit Keyboard Macro. (line  15)
* kmacro-end-and-call-macro:             Basic Keyboard Macro.
                                                              (line  23)
* kmacro-end-macro:                      Basic Keyboard Macro.
                                                              (line  79)
* kmacro-end-or-call-macro:              Basic Keyboard Macro.
                                                              (line  23)
* kmacro-end-or-call-macro-repeat:       Keyboard Macro Ring. (line  32)
* kmacro-insert-counter:                 Keyboard Macro Counter.
                                                              (line  27)
* kmacro-name-last-macro:                Save Keyboard Macro. (line  15)
* kmacro-set-counter:                    Keyboard Macro Counter.
                                                              (line  49)
* kmacro-set-format:                     Keyboard Macro Counter.
                                                              (line  60)
* kmacro-start-macro:                    Basic Keyboard Macro.
                                                              (line  79)
* kmacro-start-macro-or-insert-counter:  Basic Keyboard Macro.
                                                              (line  23)
* kmacro-step-edit-macro:                Keyboard Macro Step-Edit.
                                                              (line   6)
* kmacro-to-register:                    Keyboard Macro Registers.
                                                              (line   6)
* landmark:                              Amusements.          (line  43)
* latex-electric-env-pair-mode:          LaTeX Editing.       (line  26)
* latex-mode:                            TeX Mode.            (line   6)
* left-char:                             Moving Point.        (line  36)
* left-word:                             Moving Point.        (line  77)
* lgrep:                                 Grep Searching.      (line  57)
* life:                                  Amusements.          (line  41)
* line-number-mode:                      Optional Mode Line.  (line  16)
* linum-mode:                            Minor Modes.         (line  75)
* lisp-eval-defun:                       External Lisp.       (line  25)
* lisp-interaction-mode:                 Lisp Interaction.    (line   6)
* list-abbrevs:                          Editing Abbrevs.     (line  12)
* list-bookmarks:                        Bookmarks.           (line  22)
* list-buffers:                          List Buffers.        (line   9)
* list-character-sets:                   Charsets.            (line  30)
* list-charset-chars:                    Charsets.            (line  24)
* list-coding-systems:                   Coding Systems.      (line  53)
* list-colors-display:                   Colors.              (line  12)
* list-command-history:                  Repetition.          (line  11)
* list-directory:                        Directories.         (line  23)
* list-faces-display:                    Faces.               (line  14)
* list-holidays:                         Holidays.            (line  57)
* list-input-methods:                    Select Input Method. (line  87)
* list-matching-lines:                   Other Repeating Search.
                                                              (line  13)
* list-packages:                         Package Menu.        (line   6)
* list-tags:                             List Tags.           (line  21)
* load:                                  Lisp Libraries.      (line  21)
* load-file:                             Lisp Libraries.      (line  15)
* load-library:                          Lisp Libraries.      (line  21)
* load-theme:                            Custom Themes.       (line  70)
* local-set-key:                         Rebinding.           (line  17)
* local-unset-key:                       Rebinding.           (line  17)
* locate:                                Dired and Find.      (line  40)
* locate-with-filter:                    Dired and Find.      (line  40)
* log-edit-done:                         Log Buffer.          (line   6)
* log-edit-insert-changelog:             Log Buffer.          (line  43)
* log-edit-show-diff:                    Log Buffer.          (line  34)
* log-edit-show-files:                   Log Buffer.          (line  34)
* log-view-toggle-entry-display:         VC Change Log.       (line  30)
* lpr-buffer:                            Printing.            (line  30)
* lpr-region:                            Printing.            (line  30)
* lunar-phases:                          Lunar Phases.        (line  21)
* mail-abbrev-insert-alias:              Mail Aliases.        (line  42)
* mail-add-attachment:                   Mail Misc.           (line  19)
* mail-fill-yanked-message:              Citing Mail.         (line  23)
* mail-other-window:                     Pop Up Window.       (line  28)
* mail-text:                             Header Editing.      (line  35)
* make-frame-command:                    Creating Frames.     (line  17)
* make-frame-on-display:                 Multiple Displays.   (line  11)
* make-indirect-buffer:                  Indirect Buffers.    (line  11)
* make-local-variable:                   Locals.              (line  21)
* make-symbolic-link:                    Misc File Ops.       (line  67)
* make-variable-buffer-local:            Locals.              (line  26)
* manual-entry:                          Man Page.            (line  11)
* mark-defun:                            Moving by Defuns.    (line  17)
* mark-page:                             Pages.               (line  35)
* mark-paragraph:                        Paragraphs.          (line  23)
* mark-sexp:                             Marking Objects.     (line  38)
* mark-sexp <1>:                         Expressions.         (line  54)
* mark-whole-buffer:                     Marking Objects.     (line  52)
* mark-word:                             Marking Objects.     (line  29)
* mark-word <1>:                         Words.               (line  55)
* menu-bar-mode:                         Menu Bars.           (line   6)
* menu-bar-open:                         Menu Bar.            (line  22)
* message-goto-bcc:                      Header Editing.      (line  30)
* message-goto-cc:                       Header Editing.      (line  30)
* message-goto-fcc:                      Header Editing.      (line  30)
* message-goto-subject:                  Header Editing.      (line  30)
* message-goto-to:                       Header Editing.      (line  30)
* message-insert-signature:              Mail Signature.      (line  19)
* message-send:                          Mail Sending.        (line  13)
* message-send-and-exit:                 Mail Sending.        (line  19)
* message-tab:                           Header Editing.      (line  38)
* message-yank-original:                 Citing Mail.         (line  13)
* message-yank-prefix:                   Citing Mail.         (line  13)
* minibuffer-complete:                   Completion Commands. (line  10)
* minibuffer-complete <1>:               Completion Commands. (line  22)
* minibuffer-complete-and-exit:          Completion Exit.     (line   6)
* minibuffer-complete-word:              Completion Commands. (line  27)
* minibuffer-electric-default-mode:      Basic Minibuffer.    (line  23)
* minibuffer-inactive-mode:              Minibuffer Edit.     (line  61)
* mml-attach-file:                       Mail Misc.           (line   6)
* mode, Glasses:                         MixedCase Words.     (line  12)
* mode, Org:                             Org Mode.            (line   6)
* mode, thumbs:                          File Conveniences.   (line  57)
* morse-region:                          Amusements.          (line  47)
* mouse-avoidance-mode:                  Mouse Avoidance.     (line  38)
* mouse-buffer-menu:                     Buffer Menus.        (line  16)
* mouse-choose-completion:               Completion Commands. (line  38)
* mouse-save-then-kill:                  Mouse Commands.      (line  68)
* mouse-secondary-save-then-kill:        Secondary Selection. (line  24)
* mouse-set-point:                       Mouse Commands.      (line  25)
* mouse-set-region:                      Mouse Commands.      (line  39)
* mouse-set-secondary:                   Secondary Selection. (line  11)
* mouse-start-secondary:                 Secondary Selection. (line  21)
* mouse-wheel-mode:                      Mouse Commands.      (line 108)
* mouse-yank-at-click:                   Mouse Commands.      (line  56)
* mouse-yank-primary:                    Mouse Commands.      (line  56)
* mouse-yank-secondary:                  Secondary Selection. (line  30)
* move-beginning-of-line:                Moving Point.        (line  57)
* move-end-of-line:                      Moving Point.        (line  61)
* move-to-column:                        Moving Point.        (line 128)
* move-to-window-line-top-bottom:        Moving Point.        (line  82)
* mpuz:                                  Amusements.          (line   9)
* msb-mode:                              Buffer Menus.        (line  16)
* msdos-set-mouse-buttons:               MS-DOS Mouse.        (line  19)
* multi-occur:                           Other Repeating Search.
                                                              (line  13)
* multi-occur-in-matching-buffers:       Other Repeating Search.
                                                              (line  13)
* narrow-to-defun:                       Narrowing.           (line  39)
* narrow-to-page:                        Narrowing.           (line  39)
* narrow-to-region:                      Narrowing.           (line  34)
* nato-region:                           Amusements.          (line  47)
* negative-argument:                     Arguments.           (line  15)
* next-buffer:                           Select Buffer.       (line  46)
* next-completion:                       Completion Commands. (line  56)
* next-error:                            Compilation Mode.    (line  48)
* next-error-follow-minor-mode:          Compilation Mode.    (line 113)
* next-file:                             List Tags.           (line  35)
* next-history-element:                  Minibuffer History.  (line  26)
* next-line:                             Moving Point.        (line  46)
* next-logical-line:                     Visual Line Mode.    (line  21)
* next-matching-history-element:         Minibuffer History.  (line  42)
* normal-erase-is-backspace-mode:        DEL Does Not Delete. (line  25)
* normal-mode:                           Choosing Modes.      (line 112)
* not-modified:                          Save Commands.       (line  68)
* nroff-mode:                            Nroff Mode.          (line   6)
* number-to-register:                    Number Registers.    (line  11)
* nxml-mode:                             Text.                (line  23)
* nxml-mode <1>:                         HTML Mode.           (line  63)
* occur:                                 Other Repeating Search.
                                                              (line  13)
* open-dribble-file:                     Checklist.           (line 101)
* open-line:                             Blank Lines.         (line  13)
* open-rectangle:                        Rectangles.          (line  90)
* open-termscript:                       Checklist.           (line 108)
* Org mode:                              Org Mode.            (line   6)
* org-agenda:                            Org Organizer.       (line  27)
* org-agenda-file-to-front:              Org Organizer.       (line  20)
* org-cycle:                             Org Mode.            (line  16)
* org-deadline:                          Org Organizer.       (line  13)
* org-export:                            Org Authoring.       (line   6)
* org-metadown:                          Org Mode.            (line  29)
* org-metaleft:                          Org Mode.            (line  29)
* org-metaright:                         Org Mode.            (line  29)
* org-metaup:                            Org Mode.            (line  29)
* org-mode:                              Org Mode.            (line   6)
* org-schedule:                          Org Organizer.       (line  13)
* org-shifttab:                          Org Mode.            (line  24)
* org-todo:                              Org Organizer.       (line   6)
* other-frame:                           Frame Commands.      (line  17)
* other-window:                          Other Window.        (line  15)
* outline-backward-same-level:           Outline Motion.      (line  29)
* outline-forward-same-level:            Outline Motion.      (line  29)
* outline-minor-mode:                    Outline Mode.        (line   6)
* outline-mode:                          Outline Mode.        (line   6)
* outline-next-visible-heading:          Outline Motion.      (line  25)
* outline-previous-visible-heading:      Outline Motion.      (line  25)
* outline-up-heading:                    Outline Motion.      (line  29)
* overwrite-mode:                        Minor Modes.         (line  80)
* package-initialize:                    Package Installation.
                                                              (line  77)
* package-install:                       Package Installation.
                                                              (line   6)
* package-install-file:                  Package Files.       (line   6)
* paragraph-indent-minor-mode:           Text Mode.           (line  27)
* paragraph-indent-text-mode:            Text Mode.           (line  27)
* partial completion:                    Completion Styles.   (line  29)
* pdb:                                   Starting GUD.        (line  30)
* perldb:                                Starting GUD.        (line  24)
* picture-backward-clear-column:         Basic Picture.       (line  26)
* picture-backward-column:               Basic Picture.       (line   6)
* picture-clear-column:                  Basic Picture.       (line  26)
* picture-clear-line:                    Basic Picture.       (line  26)
* picture-clear-rectangle:               Rectangles in Picture.
                                                              (line  24)
* picture-clear-rectangle-to-register:   Rectangles in Picture.
                                                              (line  24)
* picture-forward-column:                Basic Picture.       (line   6)
* picture-mode:                          Picture Mode.        (line   6)
* picture-motion:                        Insert in Picture.   (line  37)
* picture-motion-reverse:                Insert in Picture.   (line  37)
* picture-move-down:                     Basic Picture.       (line   6)
* picture-move-up:                       Basic Picture.       (line   6)
* picture-movement-down:                 Insert in Picture.   (line   6)
* picture-movement-left:                 Insert in Picture.   (line   6)
* picture-movement-ne:                   Insert in Picture.   (line   6)
* picture-movement-nw:                   Insert in Picture.   (line   6)
* picture-movement-right:                Insert in Picture.   (line   6)
* picture-movement-se:                   Insert in Picture.   (line   6)
* picture-movement-sw:                   Insert in Picture.   (line   6)
* picture-movement-up:                   Insert in Picture.   (line   6)
* picture-newline:                       Basic Picture.       (line  20)
* picture-open-line:                     Basic Picture.       (line  35)
* picture-set-tab-stops:                 Tabs in Picture.     (line  22)
* picture-tab:                           Tabs in Picture.     (line  17)
* picture-tab-search:                    Tabs in Picture.     (line   6)
* picture-yank-rectangle:                Rectangles in Picture.
                                                              (line  34)
* picture-yank-rectangle-from-register:  Rectangles in Picture.
                                                              (line  34)
* plain-tex-mode:                        TeX Mode.            (line   6)
* point-to-register:                     Position Registers.  (line  13)
* pong:                                  Amusements.          (line  52)
* pop-global-mark:                       Global Mark Ring.    (line  14)
* pop-tag-mark:                          Find Tag.            (line  60)
* pr-interface:                          Printing Package.    (line  15)
* prefer-coding-system:                  Recognize Coding.    (line  29)
* prepend-to-buffer:                     Accumulating Text.   (line   6)
* prepend-to-register:                   Text Registers.      (line  34)
* prettify-symbols-mode:                 Misc for Programs.   (line  39)
* previous-buffer:                       Select Buffer.       (line  46)
* previous-completion:                   Completion Commands. (line  60)
* previous-history-element:              Minibuffer History.  (line  26)
* previous-line:                         Moving Point.        (line  52)
* previous-logical-line:                 Visual Line Mode.    (line  21)
* previous-matching-history-element:     Minibuffer History.  (line  42)
* print-buffer:                          Printing.            (line  30)
* print-buffer (MS-DOS):                 Windows Printing.    (line  64)
* print-region:                          Printing.            (line  30)
* print-region (MS-DOS):                 Windows Printing.    (line  64)
* ps-despool:                            PostScript.          (line  50)
* ps-print-buffer:                       PostScript.          (line  37)
* ps-print-buffer (MS-DOS):              Windows Printing.    (line  83)
* ps-print-buffer-with-faces:            PostScript.          (line  37)
* ps-print-region:                       PostScript.          (line  37)
* ps-print-region-with-faces:            PostScript.          (line  37)
* ps-spool-buffer:                       PostScript.          (line  47)
* ps-spool-buffer (MS-DOS):              Windows Printing.    (line  83)
* ps-spool-buffer-with-faces:            PostScript.          (line  47)
* ps-spool-region:                       PostScript.          (line  47)
* ps-spool-region-with-faces:            PostScript.          (line  47)
* pwd:                                   File Names.          (line  29)
* quail-set-keyboard-layout:             Select Input Method. (line  75)
* quail-show-key:                        Select Input Method. (line  82)
* query-replace:                         Query Replace.       (line  11)
* query-replace-regexp:                  Query Replace.       (line  21)
* quietly-read-abbrev-file:              Saving Abbrevs.      (line  24)
* quit-window:                           Several Buffers.     (line  79)
* quit-window <1>:                       Dired Enter.         (line  46)
* quoted-insert:                         Inserting Text.      (line  30)
* re-search-backward:                    Regexp Search.       (line  56)
* re-search-forward:                     Regexp Search.       (line  56)
* read-abbrev-file:                      Saving Abbrevs.      (line  24)
* read-only-mode:                        Misc Buffer.         (line  23)
* recenter:                              Recentering.         (line  53)
* recenter-top-bottom:                   Recentering.         (line  20)
* recentf-edit-list:                     File Conveniences.   (line   9)
* recentf-mode:                          File Conveniences.   (line   9)
* recentf-save-list:                     File Conveniences.   (line   9)
* recode-file-name:                      File Name Coding.    (line  48)
* recode-region:                         Text Coding.         (line  76)
* recompile:                             Compilation.         (line  58)
* recover-file:                          Recover.             (line   6)
* recover-session:                       Recover.             (line  22)
* rectangle:                             Rectangles.          (line  98)
* rectangle-mark-mode:                   Rectangles.          (line 112)
* remove-hook:                           Hooks.               (line  84)
* remove-untranslated-filesystem:        Text and Binary.     (line  71)
* rename-buffer:                         Misc Buffer.         (line  31)
* rename-file:                           Misc File Ops.       (line  44)
* rename-uniquely:                       Misc Buffer.         (line  35)
* repeat:                                Repeating.           (line  12)
* repeat-complex-command:                Repetition.          (line  19)
* replace-regexp:                        Regexp Replace.      (line   6)
* replace-string:                        Unconditional Replace.
                                                              (line   6)
* report-emacs-bug:                      Checklist.           (line  14)
* reposition-window:                     Recentering.         (line  56)
* reveal-mode:                           Outline Visibility.  (line  75)
* reverse-region:                        Sorting.             (line  58)
* revert-buffer:                         Reverting.           (line   6)
* revert-buffer (Dired):                 Dired Updating.      (line  30)
* revert-buffer-with-coding-system:      Text Coding.         (line  72)
* rgrep:                                 Grep Searching.      (line  57)
* right-char:                            Moving Point.        (line  22)
* right-word:                            Moving Point.        (line  68)
* rmail:                                 Rmail.               (line   6)
* rmail-add-label:                       Rmail Labels.        (line  31)
* rmail-beginning-of-message:            Rmail Scrolling.     (line  26)
* rmail-bury:                            Rmail Basics.        (line  35)
* rmail-continue:                        Rmail Reply.         (line 105)
* rmail-delete-backward:                 Rmail Deletion.      (line  28)
* rmail-delete-forward:                  Rmail Deletion.      (line  28)
* rmail-edit-current-message:            Rmail Editing.       (line  15)
* rmail-end-of-message:                  Rmail Scrolling.     (line  26)
* rmail-epa-decrypt:                     Rmail Display.       (line  74)
* rmail-expunge:                         Rmail Deletion.      (line  43)
* rmail-expunge-and-save:                Rmail Basics.        (line  28)
* rmail-first-message:                   Rmail Motion.        (line  79)
* rmail-forward:                         Rmail Reply.         (line  68)
* rmail-get-new-mail:                    Rmail Files.         (line  57)
* rmail-input:                           Rmail Files.         (line  28)
* rmail-kill-label:                      Rmail Labels.        (line  31)
* rmail-last-message:                    Rmail Motion.        (line  79)
* rmail-mail:                            Rmail Reply.         (line 101)
* rmail-mime:                            Rmail Display.       (line  54)
* rmail-mime-next-item:                  Rmail Display.       (line  47)
* rmail-mime-previous-item:              Rmail Display.       (line  51)
* rmail-mime-toggle-hidden:              Rmail Display.       (line  43)
* rmail-mode:                            Rmail.               (line   6)
* rmail-next-labeled-message:            Rmail Labels.        (line  39)
* rmail-next-message:                    Rmail Motion.        (line  46)
* rmail-next-same-subject:               Rmail Motion.        (line  72)
* rmail-next-undeleted-message:          Rmail Motion.        (line  46)
* rmail-output:                          Rmail Output.        (line  21)
* rmail-output-as-seen:                  Rmail Output.        (line  21)
* rmail-output-body-to-file:             Rmail Output.        (line  33)
* rmail-previous-labeled-message:        Rmail Labels.        (line  39)
* rmail-previous-message:                Rmail Motion.        (line  46)
* rmail-previous-same-subject:           Rmail Motion.        (line  72)
* rmail-previous-undeleted-message:      Rmail Motion.        (line  46)
* rmail-quit:                            Rmail Basics.        (line  35)
* rmail-redecode-body:                   Rmail Coding.        (line  25)
* rmail-reply:                           Rmail Reply.         (line  28)
* rmail-resend:                          Rmail Reply.         (line  94)
* rmail-retry-failure:                   Rmail Reply.         (line  57)
* rmail-search:                          Rmail Motion.        (line  58)
* rmail-show-message:                    Rmail Motion.        (line  79)
* rmail-sort-by-author:                  Rmail Sorting.       (line  14)
* rmail-sort-by-correspondent:           Rmail Sorting.       (line  22)
* rmail-sort-by-date:                    Rmail Sorting.       (line   6)
* rmail-sort-by-labels:                  Rmail Sorting.       (line  31)
* rmail-sort-by-lines:                   Rmail Sorting.       (line  27)
* rmail-sort-by-recipient:               Rmail Sorting.       (line  18)
* rmail-sort-by-subject:                 Rmail Sorting.       (line  10)
* rmail-summary:                         Rmail Make Summary.  (line  31)
* rmail-summary-bury:                    Rmail Summary Edit.  (line  91)
* rmail-summary-by-labels:               Rmail Make Summary.  (line  36)
* rmail-summary-by-recipients:           Rmail Make Summary.  (line  40)
* rmail-summary-by-regexp:               Rmail Make Summary.  (line  51)
* rmail-summary-by-senders:              Rmail Make Summary.  (line  55)
* rmail-summary-by-topic:                Rmail Make Summary.  (line  46)
* rmail-summary-quit:                    Rmail Summary Edit.  (line  91)
* rmail-summary-undelete-many:           Rmail Summary Edit.  (line  27)
* rmail-summary-wipe:                    Rmail Summary Edit.  (line  91)
* rmail-toggle-header:                   Rmail Display.       (line  12)
* rmail-undelete-previous-message:       Rmail Deletion.      (line  43)
* rot13-other-window:                    Rmail Rot13.         (line  13)
* run-lisp:                              External Lisp.       (line  11)
* run-scheme:                            External Lisp.       (line  34)
* save-buffer:                           Save Commands.       (line  22)
* save-buffers-kill-terminal:            Exiting.             (line  12)
* save-some-buffers:                     Save Commands.       (line  39)
* scheme-mode:                           External Lisp.       (line  34)
* scroll-bar-mode:                       Scroll Bars.         (line  21)
* scroll-down-command:                   Scrolling.           (line  38)
* scroll-down-line:                      Scrolling.           (line  74)
* scroll-left:                           Horizontal Scrolling.
                                                              (line  35)
* scroll-other-window:                   Other Window.        (line  26)
* scroll-right:                          Horizontal Scrolling.
                                                              (line  35)
* scroll-up-command:                     Scrolling.           (line  38)
* scroll-up-line:                        Scrolling.           (line  74)
* sdb:                                   Starting GUD.        (line  39)
* search-backward:                       Nonincremental Search.
                                                              (line  19)
* search-forward:                        Nonincremental Search.
                                                              (line  19)
* select-frame-by-name:                  Non-Window Terminals.
                                                              (line  19)
* send-invisible:                        Shell Mode.          (line 109)
* serial-term:                           Serial Terminal.     (line   6)
* server-edit:                           Invoking emacsclient.
                                                              (line  32)
* server-eval-at:                        Emacs Server.        (line  44)
* server-start:                          Emacs Server.        (line  21)
* set-buffer-file-coding-system:         Text Coding.         (line  26)
* set-buffer-process-coding-system:      Communication Coding.
                                                              (line  43)
* set-face-background:                   Colors.              (line  32)
* set-face-foreground:                   Colors.              (line  32)
* set-file-modes:                        Misc File Ops.       (line  92)
* set-file-name-coding-system:           File Name Coding.    (line  10)
* set-fill-column:                       Fill Commands.       (line  39)
* set-fill-prefix:                       Fill Prefix.         (line  24)
* set-fontset-font:                      Modifying Fontsets.  (line   6)
* set-frame-name:                        Non-Window Terminals.
                                                              (line  19)
* set-fringe-style:                      Fringes.             (line   6)
* set-goal-column:                       Moving Point.        (line 133)
* set-input-method:                      Select Input Method. (line  25)
* set-justification-center:              Enriched Justification.
                                                              (line  21)
* set-justification-full:                Enriched Justification.
                                                              (line  17)
* set-justification-left:                Enriched Justification.
                                                              (line  11)
* set-justification-none:                Enriched Justification.
                                                              (line  25)
* set-justification-right:               Enriched Justification.
                                                              (line  14)
* set-keyboard-coding-system:            Terminal Coding.     (line  28)
* set-language-environment:              Language Environments.
                                                              (line  20)
* set-left-margin:                       Enriched Indentation.
                                                              (line  32)
* set-locale-environment:                Language Environments.
                                                              (line  46)
* set-mark-command:                      Setting Mark.        (line  25)
* set-next-selection-coding-system:      Communication Coding.
                                                              (line  24)
* set-right-margin:                      Enriched Indentation.
                                                              (line  32)
* set-selection-coding-system:           Communication Coding.
                                                              (line  24)
* set-selective-display:                 Selective Display.   (line   6)
* set-terminal-coding-system:            Terminal Coding.     (line  14)
* set-variable:                          Examining.           (line  36)
* set-visited-file-name:                 Save Commands.       (line  81)
* setenv:                                Environment.         (line  17)
* setq-default:                          Locals.              (line  57)
* sgml-attributes:                       HTML Mode.           (line  25)
* sgml-close-tag:                        HTML Mode.           (line  47)
* sgml-delete-tag:                       HTML Mode.           (line  38)
* sgml-mode:                             HTML Mode.           (line   6)
* sgml-name-8bit-mode:                   HTML Mode.           (line  52)
* sgml-name-char:                        HTML Mode.           (line  11)
* sgml-skip-tag-backward:                HTML Mode.           (line  33)
* sgml-skip-tag-forward:                 HTML Mode.           (line  28)
* sgml-tag:                              HTML Mode.           (line  15)
* sgml-tag-help:                         HTML Mode.           (line  43)
* sgml-tags-invisible:                   HTML Mode.           (line  60)
* sgml-validate:                         HTML Mode.           (line  56)
* shadow-initialize:                     File Shadowing.      (line   6)
* shell:                                 Interactive Shell.   (line   6)
* shell-backward-command:                Shell Mode.          (line 100)
* shell-command:                         Single Shell.        (line   6)
* shell-command-on-region:               Single Shell.        (line  48)
* shell-dynamic-complete-command:        Shell Options.       (line  51)
* shell-forward-command:                 Shell Mode.          (line  95)
* shell-pushd-dextract:                  Shell Options.       (line  54)
* shell-pushd-dunique:                   Shell Options.       (line  54)
* shell-pushd-tohome:                    Shell Options.       (line  54)
* show-all:                              Outline Visibility.  (line  67)
* show-branches:                         Outline Visibility.  (line  56)
* show-children:                         Outline Visibility.  (line  56)
* show-entry:                            Outline Visibility.  (line  46)
* show-paren-mode:                       Matching.            (line  31)
* show-subtree:                          Outline Visibility.  (line  51)
* shrink-window-horizontally:            Change Window.       (line  54)
* shrink-window-if-larger-than-buffer:   Change Window.       (line  59)
* size-indication-mode:                  Optional Mode Line.  (line   6)
* slitex-mode:                           TeX Mode.            (line   6)
* smerge-mode:                           Comparing Files.     (line  44)
* snake:                                 Amusements.          (line  52)
* solitaire:                             Amusements.          (line  55)
* sort-columns:                          Sorting.             (line  90)
* sort-fields:                           Sorting.             (line  22)
* sort-lines:                            Sorting.             (line  22)
* sort-numeric-fields:                   Sorting.             (line  22)
* sort-pages:                            Sorting.             (line  22)
* sort-paragraphs:                       Sorting.             (line  22)
* split-line:                            Indentation Commands.
                                                              (line  10)
* split-window-below:                    Split Window.        (line  13)
* split-window-right:                    Split Window.        (line  28)
* spook:                                 Mail Amusements.     (line   6)
* standard-display-8bit:                 Unibyte Mode.        (line  33)
* string-insert-rectangle:               Rectangles.          (line 109)
* string-rectangle:                      Rectangles.          (line 104)
* substitute-key-definition:             Init Examples.       (line 117)
* subword-mode:                          MixedCase Words.     (line  23)
* sunrise-sunset:                        Sunrise/Sunset.      (line  20)
* superword-mode:                        Misc for Programs.   (line  19)
* suspend-frame:                         Exiting.             (line  39)
* suspend-frame <1>:                     Frame Commands.      (line  13)
* switch-to-buffer:                      Select Buffer.       (line  24)
* switch-to-buffer-other-frame:          Select Buffer.       (line  56)
* switch-to-buffer-other-window:         Select Buffer.       (line  51)
* switch-to-buffer-other-window <1>:     Pop Up Window.       (line  11)
* switch-to-completions:                 Completion Commands. (line  43)
* tab-to-tab-stop:                       Indentation Commands.
                                                              (line  22)
* tabify:                                Just Spaces.         (line  26)
* table-backward-cell:                   Cell Commands.       (line   6)
* table-capture:                         Table Conversion.    (line   6)
* table-fixed-width-mode:                Text Based Tables.   (line  27)
* table-forward-cell:                    Cell Commands.       (line   6)
* table-generate-source:                 Table Misc.          (line  17)
* table-heighten-cell:                   Cell Commands.       (line  29)
* table-insert:                          Table Creation.      (line   6)
* table-insert-column:                   Table Rows and Columns.
                                                              (line  12)
* table-insert-row:                      Table Rows and Columns.
                                                              (line   6)
* table-insert-sequence:                 Table Misc.          (line  14)
* table-justify:                         Cell Justification.  (line  11)
* table-narrow-cell:                     Cell Commands.       (line  38)
* table-query-dimension:                 Table Misc.          (line   6)
* table-recognize:                       Table Recognition.   (line   6)
* table-recognize-cell:                  Table Recognition.   (line  30)
* table-recognize-region:                Table Recognition.   (line  18)
* table-recognize-table:                 Table Recognition.   (line  24)
* table-release:                         Table Conversion.    (line  29)
* table-shorten-cell:                    Cell Commands.       (line  32)
* table-span-cell:                       Cell Commands.       (line  12)
* table-split-cell:                      Cell Commands.       (line  16)
* table-split-cell-horizontally:         Cell Commands.       (line  16)
* table-split-cell-vertically:           Cell Commands.       (line  16)
* table-unrecognize:                     Table Recognition.   (line   6)
* table-unrecognize-cell:                Table Recognition.   (line  33)
* table-unrecognize-region:              Table Recognition.   (line  21)
* table-unrecognize-table:               Table Recognition.   (line  27)
* table-widen-cell:                      Cell Commands.       (line  35)
* tabulated-list-sort:                   Several Buffers.     (line 123)
* tags-apropos:                          List Tags.           (line  26)
* tags-loop-continue:                    Tags Search.         (line  27)
* tags-query-replace:                    Tags Search.         (line  32)
* tags-search:                           Tags Search.         (line  22)
* term:                                  Terminal emulator.   (line   6)
* term-char-mode:                        Term Mode.           (line  17)
* term-line-mode:                        Term Mode.           (line  13)
* term-pager-toggle:                     Term Mode.           (line  34)
* tetris:                                Amusements.          (line  52)
* tex-bibtex-file:                       TeX Print.           (line 131)
* tex-buffer:                            TeX Print.           (line  36)
* tex-close-latex-block:                 LaTeX Editing.       (line  26)
* tex-compile:                           TeX Print.           (line 142)
* tex-file:                              TeX Print.           (line 101)
* tex-insert-braces:                     TeX Editing.         (line  40)
* tex-insert-quote:                      TeX Editing.         (line  22)
* tex-kill-job:                          TeX Print.           (line  70)
* tex-latex-block:                       LaTeX Editing.       (line  15)
* tex-mode:                              TeX Mode.            (line   6)
* tex-print:                             TeX Print.           (line  36)
* tex-recenter-output-buffer:            TeX Print.           (line  70)
* tex-region:                            TeX Print.           (line  81)
* tex-terminate-paragraph:               TeX Editing.         (line  47)
* tex-validate-region:                   TeX Editing.         (line  47)
* tex-view:                              TeX Print.           (line  36)
* text-mode:                             Text Mode.           (line   6)
* text-scale-adjust:                     Text Scale.          (line   6)
* text-scale-decrease:                   Text Scale.          (line  19)
* text-scale-increase:                   Text Scale.          (line  19)
* text-scale-mode:                       Text Scale.          (line  27)
* text-scale-set:                        Text Scale.          (line  24)
* thumbs-mode:                           File Conveniences.   (line  57)
* time-stamp:                            Time Stamps.         (line  16)
* timeclock-change:                      Time Intervals.      (line   9)
* timeclock-in:                          Time Intervals.      (line   9)
* timeclock-modeline-display:            Time Intervals.      (line  19)
* timeclock-out:                         Time Intervals.      (line   9)
* timeclock-reread-log:                  Time Intervals.      (line  30)
* timeclock-when-to-leave:               Time Intervals.      (line   9)
* timeclock-workday-remaining:           Time Intervals.      (line   9)
* tmm-menubar:                           Menu Bar.            (line  28)
* toggle-debug-on-error:                 Checklist.           (line 177)
* toggle-frame-fullscreen:               Frame Commands.      (line  29)
* toggle-frame-maximized:                Frame Commands.      (line  25)
* toggle-gdb-all-registers:              Other GDB Buffers.   (line  20)
* toggle-input-method:                   Select Input Method. (line  31)
* toggle-scroll-bar:                     Scroll Bars.         (line  21)
* toggle-truncate-lines:                 Line Truncation.     (line  12)
* tool-bar-mode:                         Tool Bars.           (line  16)
* tooltip-mode:                          Tooltips.            (line  11)
* top-level:                             Quitting.            (line  83)
* transient-mark-mode:                   Disabled Transient Mark.
                                                              (line   6)
* transpose-chars:                       Transpose.           (line  15)
* transpose-lines:                       Transpose.           (line  26)
* transpose-sexps:                       Expressions.         (line  46)
* transpose-words:                       Transpose.           (line  26)
* tty-suppress-bold-inverse-default-colors: Display Custom.   (line  45)
* uncomment-region:                      Comment Commands.    (line  66)
* undigestify-rmail-message:             Rmail Digest.        (line  15)
* undo:                                  Undo.                (line  21)
* undo-only:                             Undo.                (line  28)
* unexpand-abbrev:                       Expanding Abbrevs.   (line  48)
* unforward-rmail-message:               Rmail Reply.         (line  78)
* unhighlight-regexp:                    Highlight Interactively.
                                                              (line  46)
* universal-argument:                    Arguments.           (line  40)
* universal-coding-system-argument:      Text Coding.         (line  42)
* unmorse-region:                        Amusements.          (line  47)
* untabify:                              Just Spaces.         (line  26)
* up-list:                               TeX Editing.         (line  40)
* upcase-region:                         Case.                (line  40)
* upcase-word:                           Case.                (line  20)
* vc-annotate:                           Old Revisions.       (line  80)
* vc-create-tag:                         Revision Tags.       (line  18)
* vc-delete-file:                        VC Delete/Rename.    (line  14)
* vc-diff:                               Old Revisions.       (line  30)
* vc-dir:                                VC Directory Mode.   (line  15)
* vc-dir-mark:                           VC Directory Commands.
                                                              (line  69)
* vc-dir-mark-all-files:                 VC Directory Commands.
                                                              (line  69)
* vc-ediff:                              Old Revisions.       (line  56)
* vc-ignore:                             VC Ignore.           (line  10)
* vc-insert-headers:                     Version Headers.     (line  18)
* vc-next-action:                        Basic VC Editing.    (line  27)
* vc-print-log:                          VC Change Log.       (line  18)
* vc-print-root-log:                     VC Change Log.       (line  30)
* vc-pull:                               VC Pull.             (line  13)
* vc-register:                           Registering.         (line   9)
* vc-rename-file:                        VC Delete/Rename.    (line  21)
* vc-retrieve-tag:                       Revision Tags.       (line  23)
* vc-revert:                             VC Undo.             (line  10)
* vc-revision-other-window:              Old Revisions.       (line  75)
* vc-root-diff:                          Old Revisions.       (line  59)
* vc-update-change-log:                  Change Logs and VC.  (line  19)
* view-buffer:                           View Mode.           (line  16)
* view-echo-area-messages:               Misc Help.           (line  30)
* view-emacs-debugging:                  Help Files.          (line  13)
* view-emacs-FAQ:                        Help Files.          (line  13)
* view-emacs-news:                       Help Files.          (line  13)
* view-emacs-problems:                   Help Files.          (line  13)
* view-emacs-todo:                       Help Files.          (line  13)
* View-exit:                             View Mode.           (line  12)
* view-external-packages:                Help Files.          (line  13)
* view-file:                             View Mode.           (line  16)
* view-hello-file:                       International Chars. (line  19)
* view-lossage:                          Misc Help.           (line  25)
* view-order-manuals:                    Help Files.          (line  13)
* View-quit:                             View Mode.           (line  12)
* view-register:                         Registers.           (line  15)
* visit-tags-table:                      Select Tags Table.   (line   6)
* visual-line-mode:                      Visual Line Mode.    (line  11)
* w32-register-hot-key:                  Windows Keyboard.    (line  21)
* w32-shell-execute:                     Windows Processes.   (line  56)
* w32-unregister-hot-key:                Windows Keyboard.    (line  21)
* wdired-change-to-wdired-mode:          Wdired.              (line   6)
* wdired-finish-edit:                    Wdired.              (line  12)
* what-cursor-position:                  Position Info.       (line  53)
* what-cursor-position <1>:              International Chars. (line  35)
* what-line:                             Position Info.       (line  36)
* what-page:                             Pages.               (line  26)
* where-is:                              Key Help.            (line  24)
* which-function-mode:                   Which Function.      (line  10)
* whitespace-mode:                       Useless Whitespace.  (line  37)
* widen:                                 Narrowing.           (line  44)
* widget-backward:                       Customization Groups.
                                                              (line  49)
* widget-complete:                       Changing a Variable. (line  53)
* widget-forward:                        Customization Groups.
                                                              (line  49)
* windmove-default-keybindings:          Window Convenience.  (line  18)
* windmove-right:                        Window Convenience.  (line  18)
* window-configuration-to-register:      Configuration Registers.
                                                              (line   6)
* winner-mode:                           Window Convenience.  (line   6)
* woman:                                 Man Page.            (line  39)
* word-search-backward:                  Word Search.         (line  29)
* word-search-forward:                   Word Search.         (line  29)
* write-abbrev-file:                     Saving Abbrevs.      (line  18)
* write-file:                            Save Commands.       (line  90)
* write-region:                          Misc File Ops.       (line  85)
* xdb:                                   Starting GUD.        (line  36)
* yank:                                  Yanking.             (line  20)
* yank-pop:                              Earlier Kills.       (line  11)
* yank-rectangle:                        Rectangles.          (line  79)
* zap-to-char:                           Other Kill Commands. (line  40)
* zone:                                  Amusements.          (line  58)
* zrgrep:                                Grep Searching.      (line  57)

