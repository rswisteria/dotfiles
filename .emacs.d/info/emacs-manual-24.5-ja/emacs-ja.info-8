This is emacs-ja.info, produced by makeinfo version 6.1 from emacs.texi.

This is the ‘GNU Emacs Manual’, updated for Emacs version 24.5.

   Copyright © 2015–2016 Ayanokoji Takesi <ayanokoji.takesi@gmail.com>
Copyright © 1985–1987, 1993–2015 Free Software Foundation, Inc.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.3 or any later version published by the Free Software
     Foundation; with the Invariant Sections being “The GNU Manifesto,”
     “Distribution” and “GNU GENERAL PUBLIC LICENSE,” with the
     Front-Cover Texts being “A GNU Manual,” and with the Back-Cover
     Texts as in (a) below.  A copy of the license is included in the
     section entitled “GNU Free Documentation License.”

     (a) The FSF’s Back-Cover Text is: “You have the freedom to copy and
     modify this GNU manual.  Buying copies from the FSF supports it in
     developing GNU and promoting software freedom.”
INFO-DIR-SECTION Emacs
START-INFO-DIR-ENTRY
* Emacs: (emacs).            拡張可能なセルフドキュメント形式のテキストエディター。
END-INFO-DIR-ENTRY


File: emacs-ja.info,  Node: Disabling,  Prev: Mouse Buttons,  Up: Key Bindings

48.3.11 コマンドの無効化
------------------------

コマンドを無効にするとは、そのコマンドを対話的に呼び出しユーザーに確認を
求めることを意味します。コマンドを無効にする目的は、ユーザーが間違ってコ
マンドを実行するのを防ぐためです。わたしたちは初心者を混乱させるようなコ
マンドにたいして、これを行なっています。

   無効なコマンドを呼び出そうとすると、Emacsはコマンド名、コマンドのドキ
ュメント、すぐに何を行なうかの手引きを対話的に表示します。その後、
Emacsはコマンドを要求されたとおり実行するか、そのコマンドを有効にしてか
ら実行するか、キャンセルするか入力を求めます。コマンドを有効にすると決め
た場合は、他の質問 — 永続的に有効にするか、それともカレントセッションで
だけ有効にするか — にも応えなければなりません(永続的に有効にする場合、こ
れは自動的に初期化ファイルを編集することにより機能します)。‘!’とタイプし
て、カレントセッションだけにたいして、_すべて_のコマンドを有効にすること
もできます。

   コマンド無効化の直接的なメカニズムは、コマンドにたいするLispシンボル
の‘disabled’プロパティーに非‘nil’をputすることです。以下はこれを行なう
Lispプログラムです:

     (put 'delete-region 'disabled t)

   ‘disabled’プロパティーの値が文字列の場合、その文字列はコマンドが使用
されたときに表示されるメッセージに含まれます。

     (put 'delete-region 'disabled
          "It's better to use `kill-region' instead.\n")

   初期化ファイルを直接編集するか、初期化ファイルを編集する‘M-x
disable-command’コマンドにより、コマンドを無効にできます。同様に‘M-x
enable-command’はコマンドを永続的に有効にするために、初期化ファイルを編
集します。*note Init File::を参照してください。

   Emacsが‘-q’または‘--no-init-file’オプション(*note Initial Options::を
参照してください)で呼び出された場合、これらのコマンドは初期化ファイルを
編集しません。Emacsは初期化ファイルを読み込んでいないので、これを行なう
と情報が失われるかもしれないからです。

   コマンドが無効にされているかどうかは、それを呼び出すのに使用されるキ
ーとは独立しています。‘M-x’を使用してコマンドを呼び出しても、無効化は適
用されます。しかしLispプログラムから関数として呼び出す場合、コマンドの無
効化は効力をもちません。


File: emacs-ja.info,  Node: Init File,  Prev: Key Bindings,  Up: Customization

48.4 Emacs初期化ファイル
========================

Emacsを開始したとき、Emacsは通常、“初期化ファイル(initialization file)”、
短くは“initファイル”から、Lispプログラムのロードを試みます。このファイル
は、もし存在する場合は、Emacsをどのように初期化するかを指定します。
Emacsはファイル名‘~/.emacs’、‘~/.emacs.el’、‘~/.emacs.d/init.el’を使用し
てinitファイルを探します。これら3つのファイル名から、使用するものを選択
できます(*note Find Init::を参照してください)。ここで‘~/’は、ホームディ
レクトリーを意味します。

   コマンドラインスイッチ‘-q’により、initファイルのロードを抑止でき、
‘-u’ (または‘--user’)で、別のユーザーのinitファイルを指定できます(*note
Initial Options::を参照してください)。

   “デフォルトinitファイル”が存在する場合もあります。これは
‘default.el’という名前のライブラリーで、ライブラリーにたいする標準の検索
パスから探されます。Emacsディストリビューションには、そのようなライブラ
リーは含まれていませんが、あなたのサイトは、ローカルなカスタマイズのため
にこれを作成しているかもしれません。このライブラリーが存在する場合、
Emacsを開始したときは常にこれがロードされます(ただし‘-q’を指定した場合は
除きます)。しかしinitファイルがあれば、それが最初にロードされるので、そ
こで‘inhibit-default-init’に非‘nil’をセットすれば、‘デフォルトinitファイ
ル’はロードされません。

   あなたのサイトには“サイトスタートアップファイル(site startup file)”も
あるかもしれません。もし存在する場合、これは‘site-start.el’という名前で
す。‘default.el’と同様に、Emacsはこのファイルを、Lispライブラリーにたい
する標準の検索パスから探します。Emacsはこのライブラリーをinitファイルの
前にロードします。このライブラリーのロードを抑止するには、オプション
‘--no-site-file’を使用します。*note Initial Options::を参照してください
。わたしたちは何かを変更する場合、‘site-start.el’の使用を推奨しません。
これを好まないユーザーもいるからです。変更を‘default.el’に記述すれば、ユ
ーザーはもっと簡単にそれをオーバーライドできます。

   ‘default.el’や‘site-start.el’は、EmacsがLispライブラリーを検索する任
意のディレクトリーに配置できます。変数‘load-path’ (*note Lisp
Libraries::を参照してください)は、これらのディレクトリーを指定します。多
くのサイトはこれらのファイルを、Emacsのインストールディレクトリーの中の
、‘site-lisp’(たとえば‘/usr/local/share/emacs/site-lisp’)に配置します。

   initファイルにたいするバイトコンパイル(*note Byte Compilation:
(elisp)Byte Compilation.を参照してください)は推奨されていません。一般的
にこれは開始時のスピードの大幅な改善はせず、ファイルをリコンパイルするの
を忘れたときに問題を起こすことが多いのです。よりよい解決策は、Emacsサー
バー(*note Emacs Server::を参照してください)を使用して、Emacsを開始する
回数を減らすことです。initファイルで多くの関数を定義している場合、これら
を(バイトコンパイルされた)別のファイルに移動して、それをinitファイルでロ
ードします。

   マイナーなカスタマイズを超えるような、実際のEmacs Lispプログラムを記
述するつもりなら、‘Emacs Lisp Reference Manual’を読むべきでしょう。
*note Emacs Lisp: (elisp)Top.を参照してください。

* Menu:

* Init Syntax::              Emacs Lispでの定数の構文。
* Init Examples::            initファイルで何かを行なう方法。
* Terminal Init::            端末タイプごとのinitファイル。
* Find Init::                Emacsがinitファイルを探す方法について。
* Init Non-ASCII::           initファイルでの非ASCII文字の使用。


File: emacs-ja.info,  Node: Init Syntax,  Next: Init Examples,  Up: Init File

48.4.1 initファイルの構文
-------------------------

initファイルには、1つ以上のLisp式が含まれています。式のそれぞれは引数を
ともなう関数名で、それらはすべてカッコで括られています。たとえば‘(setq
fill-column 60)’は、変数‘fill-column’(*note Filling::を参照してください
)を60にセットするために、関数‘setq’を呼び出します。

   ‘setq’で任意のLisp変数をセットできますが、‘.emacs’の特定の変数にたい
して、‘setq’は多分あなたの望むとおりには動作しないでしょう。いくつかの変
数は‘setq’でセットしたとき、自動的にバッファーローカルになります。あなた
が望むのは、‘.emacs’でデフォルト値をセットすることなので、
‘setq-default’を使用します。マイナーモードのカスタマイズ可能な変数のいく
つかは、それをCustomizeでセットすると、そのモードを有効にするために特別
なことを行ないますが、通常の‘setq’ではそれを行ないません。‘.emacs’ファイ
ルでモードを有効にするには、マイナーモードコマンドを呼び出します。以下の
セクションには、これらの両方の方法の例があります。

   ‘setq’の2番目の引数は、変数にたいする新しい値の式です。これには、定数
、変数、関数呼び出し式を指定できます。‘.emacs’では、定数が使用される場合
がほとんどです。これは以下のとおりです:

数字:
     数字は10進で記述され、オプションで最初にマイナス記号がある場合があ
     ります。

文字列:
     Lispの文字列構文は、少数の例外を除き、Cの文字列構文と同じです。文字
     列定数の開始と終了にはダブルクォートを使用します。

     文字列には改行を含む、特別なリテラル文字を含めることができます。し
     かし、それらにたいして、バックスラッシュシーケンスを使う方が明確に
     なる場合が多くあります。改行は‘\n’、バックスペースは‘\b’、キャリッ
     ジリターンは‘\r’、タブは‘\t’、フォームフィード(control-L)は‘\f’、エ
     スケープは‘\e’、バックスラッシュは‘\\’、ダブルクォートは‘\"’、そし
     て8進コードがOOOの文字は‘\OOO’です。バックスラッシュとダブルクォー
     トだけは、バックスラッシュシーケンスが必須な文字です。

     ‘\C-’はコントロール文字のプレフィクスとして使用でき、‘\C-s’は
     ASCIIのcontrol-Sです。‘\M-’はメタ文字のプレフィクスとして使用でき、
     ‘\M-a’は‘<META>-A’で、‘\M-\C-a’は‘<Ctrl>-<META>-A’です。

     initファイルに非ASCII文字を含めるための情報は、*note Init
     Non-ASCII::を参照してください。

文字:
     Lispの文字定数の構文は、たとえば‘?x’、‘?\n’、‘?\"’、‘?\)’のように、
     文字‘?’と、その後ろに文字または‘\’で始まるエスケープシーケンスから
     なります。Lispでは、文字列と文字は置き換え可能ではないことに注意し
     てください。あるコンテキストでは一方が、他のコンテキストでは他方が
     要求されます。

     非ASCII文字を送るキーにコマンドをバインドする情報については、*note
     Init Non-ASCII::を参照してください。

True:
     ‘t’は‘true(真)’という意味です。

False:
     ‘nil’は‘false(偽)’という意味です。

その他のLispオブジェクト:
     シングルクォートに続けてLispオブジェクトを記述します。


File: emacs-ja.info,  Node: Init Examples,  Next: Terminal Init,  Prev: Init Syntax,  Up: Init File

48.4.2 initファイルの例
-----------------------

以下はLisp式で一般的に行ないたいような事柄の例です:

   • 変数‘load-path’にディレクトリーを追加します。その後、Emacsに含まれ
     ていないLispライブラリーをそのディレクトリーに配置すれば、‘M-x
     load-library’でそれらをロードすることができます。*note Lisp
     Libraries::を参照してください。

          (add-to-list 'load-path "/path/to/lisp/libraries")

   • Cモードで、ポイントが行の途中にある場合、<TAB>が単にタブを挿入する
     ようにします。

          (setq c-tab-always-indent nil)

     個の例では、変数の通常の値が‘t’、つまり‘true’の変数の値を、‘nil’つ
     まり‘false’にしています。

   • (この設定をオーバーライドしないすべてのバッファーで)検索のデフォル
     トを、大文字小文字を区別させるようにします。

          (setq-default case-fold-search nil)

     これはデフォルト値をセットし、この変数にたいするローカル値(*note
     Locals::を参照してください)をもたないすべてのバッファーに効果を及ぼ
     します。‘case-fold-search’を‘setq’でセットした場合は、カレントバッ
     ファーだけに効果があり、それは多分あなたがinitファイルで行ないたい
     ことではないはずです。

   • Emacsがあなたのメールアドレスを正しく推測できない場合、メールアドレ
     スを指定します。

          (setq user-mail-address "cheney@torture.gov")

     Messageモードのような、さまざまなEmacsパッケージは、メールアドレス
     を知る必要がある場合に、‘user-mail-address’を参照します。*note Mail
     Headers::を参照してください。

   • 新しいバッファーにたいするデフォルトのモードをTextモードにします。

          (setq-default major-mode 'text-mode)

     Textモードに入るコマンドに‘text-mode’が使用されていることに注意して
     ください。前のシングルクォートはシンボルを定数にしています。そうし
     ない場合、‘text-mode’は変数名として扱われます。

   • 西ヨーロッパのほとんどの言語をサポートするLatin-1文字を、デフォルト
     にセットアップします。

          (set-language-environment "Latin-1")

   • グローバルなマイナーモードのLine Numberモードをオフに切り替えます。

          (line-number-mode 0)

   • Textモードと関連するモードで、自動的にAuto Fillモードをオンに切り替
     えます(*note Hooks::を参照してください)。

          (add-hook 'text-mode-hook 'auto-fill-mode)

   • インストールされた‘foo’という名前のライブラリー(実際には標準の
     Emacsディレクトリーの‘foo.elc’または‘foo.el’というファイル)をロード
     します。

          (load "foo")

     ‘load’の引数が、‘/’や‘~’で始まらない相対ファイル名の場合、‘load’は
     ‘load-path’のディレクトリーを検索します(*note Lisp Libraries::を参
     照してください)。

   • ホームディレクトリーの、コンパイルされたLispファイル‘foo.elc’をロー
     ドします。

          (load "~/foo.elc")

     ここでは完全なファイル名が使用されているので、検索は行なわれません
     。

   • ‘mypackage’という名前のLispライブラリー(たとえば‘mypackage.elc’や
     ‘mypackage.el’というファイル)をロードすることにより、関数
     ‘myfunction’の定義を探すようEmacsに指示します。

          (autoload 'myfunction "mypackage" "Do what I say." t)

     ここで文字列‘"Do what I say."’は、この関数のドキュメント文字列です
     。これを‘autoload’定義の中で指定することにより、そのパッケージがロ
     ードされていなくてもヘルプコマンドで利用可能になります。最後の引数
     ‘t’は、この関数がinteractive(対話的)であることを示します。つまり、
     この関数は‘M-x myfunction <RET>’とタイプするか、キーにバインドする
     ことにより、対話的に呼び出すことができます。関数がinteractiveでない
     場合は、‘t’を省略するか、‘nil’を使用します。

   • 関数‘make-symbolic-link’を実行するように、キー‘C-x l’をリバインドし
     ます(*note Init Rebinding::を参照してください)。

          (global-set-key "\C-xl" 'make-symbolic-link)

     または

          (define-key global-map "\C-xl" 'make-symbolic-link)

     繰り返しになりますが、シングルクォートは‘make-symbolic-link’を変数
     として値を参照するのではなく、シンボルとして参照するために使用され
     ることに注意してください。

   • Lispモードだけで、同じことを行ないます。

          (define-key lisp-mode-map "\C-xl" 'make-symbolic-link)

   • Fundamentalモードで‘next-line’を実行するすべてのキーにたいして、か
     わりに‘forward-line’を実行するように再定義します。

          (substitute-key-definition 'next-line 'forward-line
                                     global-map)

   • ‘C-x C-v’を未定義にします。

          (global-unset-key "\C-x\C-v")

     キーを未定義にする1つの理由は、それをプレフィクスにできることです。
     単に‘C-x C-v ANYTHING’を定義すると、‘C-x C-v’はプレフィクスになりま
     すが、最初に通常の‘C-x C-v’にたいする非プレフィクス定義を開放しなけ
     ればなりません。

   • Textモードで‘$’に句読点構文をもたせます。‘$’にたいする文字定数の使
     い方に注意してください。

          (modify-syntax-entry ?\$ "." text-mode-syntax-table)

   • 確認なしでの、コマンド‘narrow-to-region’の使用を有効にします。

          (put 'narrow-to-region 'disabled nil)

   • さまざまなプラットフォームとEmacsバージョンにたいして、設定を調整し
     ます。

     ユーザーは通常、すべてのシステムでEmacsが同じように振る舞うことを期
     待するので、すべてのプラットフォームで同じinitファイルを使用するの
     が妥当です。しかしEmacsをカスタマイズするのに使用する関数が、他のプ
     ラットフォームやEmacsバージョンで利用できないということも発生します
     。この状況に対処するには、以下のように、ある関数または機能が利用可
     能かテストする条件文の内部に、カスタマイズを配置します:

          (if (fboundp 'blink-cursor-mode)
              (blink-cursor-mode 0))

          (if (boundp 'coding-category-utf-8)
              (set-coding-priority '(coding-category-utf-8)))

     関数が定義されていない場合に発生するエラーを、単に無視することもで
     きます。

          (condition case ()
              (set-face-background 'region "grey75")
            (error nil))

     存在しない変数への‘setq’は一般的に無害なので、これらを条件文の中に
     置く必要はありません。


File: emacs-ja.info,  Node: Terminal Init,  Next: Find Init,  Prev: Init Examples,  Up: Init File

48.4.3 端末固有の初期化
-----------------------

各端末タイプは、Emacsをその端末タイプで実行するときEmacsにロードされる
Lispライブラリーをもつことができます。TERMTYPEという名前の端末タイプにた
いして、そのライブラリーは‘term/TERMTYPE’と呼ばれます。これは通常のよう
にディレクトリー‘load-path’を検索することにより見つけられ、サフィックス
は‘.elc’と‘.el’です。通常はほとんどのEmacsライブラリーがあるディレクトリ
ーの、サブディレクトリー‘term’にあります。

   端末固有ライブラリーの通常の目的は、‘input-decode-map’ (または、その
前に‘function-key-map’)を使用して、その端末のファンクションキーで使用さ
れるエスケープシーケンスを、より意味のある名前にマップすることです。これ
がどのように行なわれるかの例は、ファイル‘term/lk201.el’を参照してくださ
い。多くのファンクションキーは、Termcapデータベースの情報にしたがい、自
動的にマップされます。端末固有ライブラリーは、Termcapが指定しないファン
クションキーだけをマップすればよいのです。

   端末タイプがハイフンを含む場合、最初のハイフンの前の部分だけが、ライ
ブラリーの選択で意味をもちます。したがって端末タイプ‘aaa-48’と
‘aaa-30-rv’は、両方ともライブラリー‘term/aaa’を使用します。ライブラリー
内のコードは、‘(getenv "TERM")’を使用して、完全なタイプ名を取得できます
。

   ライブラリーの名前は、変数‘term-file-prefix’の値と、端末タイプを結合
することにより構築されます。‘.emacs’で‘term-file-prefix’を‘nil’にセット
することにより、端末固有ライブラリーのロードを抑止できます。

   Emacsは初期化の最後、‘.emacs’と端末固有ライブラリーの両方が読み込まれ
た後に、フック‘tty-setup-hook’を実行します。端末固有ライブラリーの任意の
部分をオーバーライドしたい場合や、ライブラリーをもたない端末の初期化を定
義したい場合は、このフックにフック関数を追加します。*note Hooks::を参照
してください。


File: emacs-ja.info,  Node: Find Init,  Next: Init Non-ASCII,  Prev: Terminal Init,  Up: Init File

48.4.4 Emacsがinitファイルを探す方法
------------------------------------

Emacsは通常、‘.emacs’を探すために環境変数‘HOME’ (*note HOME: General
Variables.を参照してください)を使用します。これはファイル名での‘~’を意味
します。‘~/’の中に‘.emacs’(または‘.emacs.el’)が見つからない場合、Emacsは
‘~/.emacs.d/init.el’(‘~/.emacs.el’と同様に、バイトコンパイルされている可
能性があります)を探します。

   しかし、‘su’により開始されたシェルからEmacsを実行する場合、Emacsは現
在の見かけのユーザーではなく、あなた自身の‘.emacs’を探すことを試みます。
このアイデアは、たとえスーパーユーザーとして実行しているときでも、自分の
エディターカスタマイズを取得するべきだという考えです。

   より正確には、最初にEmacsはどのユーザーのinitファイルを使用するか決定
します。Emacsは環境変数‘LOGNAME’と‘USER’からユーザー名を取得します。どち
らも存在しない場合、実効ユーザーIDを使用します。ユーザー名が実ユーザー
IDとマッチしたとき、Emacsは‘HOME’を使用します。そうでない場合、Emacsはシ
ステムのユーザーデータベースの、そのユーザー名に対応するホームディレクト
リーを探します。


File: emacs-ja.info,  Node: Init Non-ASCII,  Prev: Find Init,  Up: Init File

48.4.5 initファイル内の非ASCII文字
----------------------------------

initファイルの文字列やキーバインディングに、アクセントつき文字などの非
ASCII文字が含まれる場合、それは言語やコーディングシステムに問題を起こす
かもしれません。

   initファイルで非ASCII文字を使用したい場合、initファイルの最初の行に
‘-*-coding: CODING-SYSTEM-*-’タグを配して、問題となる文字をサポートする
コーディングシステムを指定するべきです。*note Recognize Coding::を参照し
てください。なぜなら、非ASCIIテキストのでコーディングにたいするにたいす
るデフォルトのコーディングシステムは、Emacsがinitファイルでそのような文
字列を使用する個所を読み込むまでに、セットアップされていないかもしれない
ので、Emacsがその文字列を間違ってデコードする可能性があるからです。
‘-*-coding: CODING-SYSTEM-*-’を記述した場合、
‘set-language-environment’を呼び出す等、他の方法でコーディングシステムを
変更するEmacs Lispコードの追加は避けるべきです。

   非ASCIIキーをバインドするには、ベクターを使用しなければなりません
(*note Init Rebinding::を参照してください)。非ASCII文字はメタキーとして
解釈されるので、文字列構文は使用できません。たとえば:

     (global-set-key [?CHAR] 'some-function)

CHARを挿入するには、‘C-q’とタイプしてからバインドしたいキーをタイプしま
す。

   *警告:* キーボードのエンコーディングを変更していたり、マルチバイトと
ユニバイトの間のモードを変更していたり、その文字にたいして‘C-q’が挿入す
るコードを変更する何かを行なっている場合、このキーバインディングは機能し
ないでしょう。したがって編集するファイルと同様に、initファイルにはただ
1つのコーディングシステムを使用するのが賢明です。たとえば、コーディング
システム‘latin-1’と‘latin-9’を混ぜないでください。


File: emacs-ja.info,  Node: Quitting,  Next: Lossage,  Prev: Customization,  Up: Top

49 中止と中断
*************

‘C-g’
‘C-<Break> (MS-DOSのみ)’
     quit(中止): コマンドの実行、または途中までタイプしたコマンドをキャ
     ンセルします。
‘C-]’
     最内の再帰編集レベル(recursive editing level)をabort(中断)して、そ
     れを呼び出したコマンドをキャンセルします(‘abort-recursive-edit’)。
‘<ESC> <ESC> <ESC>’
     quitまたはabortのどちらか、意味のあるほうを行ないます
     (‘keyboard-escape-quit’)。
‘M-x top-level’
     現在実行中のすべての再帰編集レベルをabortします。
‘C-/’
‘C-x u’
‘C-_’
     バッファー内容にたいする直前の変更をキャンセルします(‘undo’)。

   完了する前のコマンドをキャンセルする方法は2つあります。それは‘C-g’に
よる“quit”と、‘C-]’や‘M-x top-level’による“abort”です。quitは途中までタ
イプしたコマンド、または実行中のコマンドをキャンセルします。abortは再帰
編集レベルを抜けて、再帰編集を呼び出したコマンドをキャンセルします(*note
Recursive Edit::を参照してください)。

   ‘C-g’によるquitは、途中までタイプしたコマンドから抜けたり、望まない数
引数から抜け出す方法です。さらに、あるコマンドが実行中の場合、‘C-g’は比
較的安全にコマンドを停止します。たとえば、長い時間がかかるkillコマンドを
quitした場合、_すべて_のテキストがバッファーに残るか、または_すべて_のテ
キストがkillリングに残るか、もしかしたらその両方かもしれません。リージョ
ンがアクティブの場合、Transient Markモードがオフでなければ、‘C-g’はマー
クを非アクティブにします(*note Disabled Transient Mark::を参照してくださ
い)。インクリメンタル検索の途中では、‘C-g’は特別に振る舞います。検索を抜
けるには2回連続して‘C-g’をタイプします。詳細は、*note Incremental
Search::を参照してください。

   MS-DOSでは、文字‘C-<Break>’が‘C-g’のような文字の役割をします。
MS-DOSではユーザーとの相互作用を行なうとき以外に、実行中のコマンドで
‘C-g’を認識できないのが理由です。それとは対照的に、‘C-<Break>’は常に認識
できます。 *note MS-DOS Keyboard::を参照してください。

   ‘C-g’をタイプした瞬間に変数‘quit-flag’を‘t’にセットすることにより、
‘C-g’は機能します。Emacs Lispはこの変数を頻繁にチェックして、これが非
‘nil’のときはquitします。Emacsが入力待ちのときにタイプしたときだけ、
‘C-g’は実際にコマンドとして実行されます。この場合に実行されるコマンドは
、‘keyboard-quit’です。

   テキスト端末では、最初の‘C-g’が認識される前に2回目の‘C-g’でquitした場
合は、“emergency escape(緊急エスケープ)”機能がアクティブになり、シェルに
戻ります。*note Emergency Escape::を参照してください。

   quitできない状況もいくつか存在します。Emacsがオペレーティングシステム
が何か行なうのを待つような場合、待ちが発生する箇所で特定のシステムコール
にたいして、Emacsが特別な対処をしない場合、quitは不可能です。ユーザーが
quitしたいと望むようなシステムコールにたいして、わたしたちはこれを行なっ
ていなすが、それでも処理できないケースに出会う場合もあります。とても一般
的なケースの1つは、NFSを使用したファイルへの入出力待ちです。Emacs自体は
quitする方法を知っていますが、多くのNFS実装は、NFSサーバーがハングしたと
き、ユーザープログラムがNFSを待つのを止めることを、単に許していません。

   ‘C-]’ (‘abort-recursive-edit’)によるabortは、再帰編集レベルを抜けて、
それを呼び出したコマンドをキャンセルするのに使用されます。‘C-g’による
quitはこれを行なわず、行なうこともできません。なぜならこれは再帰編集レベ
ルの_中_で、途中までタイプされたコマンドをキャンセルするからです。どちら
の操作も有用です。たとえば再帰編集中に、数引数を入力するために‘C-u 8’と
タイプした場合、‘C-g’でその引数をキャンセルして、その再帰編集レベルに留
まることができます。

   シーケンス‘<ESC> <ESC> <ESC>’ (‘keyboard-escape-quit’)は、quitか
abortのどちらかを呼び出します(多くのPCプログラムで<ESC>は“抜け出す”こと
を意味するので、このような定義にしました)。これは‘C-g’のように、プレフィ
クス引数のキャンセル、選択されたリージョンのクリアー、また問い合わせつき
置換から抜け出すこともできます。また‘C-]’のように、ミニバッファーから抜
け出したり、再帰編集から抜け出すこともできます。これは‘C-x 1’のように、
フレームの複数ウィンドウ分割から抜け出すこともできます。これが行なうこと
ができないのは、実行中のコマンドの停止です。これは通常のコマンドとして実
行されるので、Emacsが次のコマンドのために準備ができるまで、これを認識し
ないからです。

   コマンド‘M-x top-level’は、現在の再帰編集レベルからすべての再帰編集レ
ベルを抜けるための、“充分”な回数の‘C-]’コマンドと等価です。ミニバッファ
ーがアクティブなときは、ミニバッファーも抜けます。‘C-]’は、1度に1レベル
再帰編集レベルを抜けますが、‘M-x top-level’は、1度ですべての再帰編集レベ
ルを抜けます。‘C-]’と‘M-x top-level’の両方とも、他のすべてのコマンドと同
様(そして‘C-g’とは異なり)、Emacsがコマンドにたいして準備ができているとき
だけ効果があります。‘C-]’は通常のキーで、このキーが意味をもつのは、それ
がキーマップでバインドされているときだけです。*note Recursive Edit::を参
照してください。

   厳密に言えば‘C-/’ (‘undo’)はキャンセルコマンドではありませんが、すで
に実行を終えたコマンドをキャンセルすると考えることができます。undo機能に
ついての詳細は、*note Undo::を参照してください。


File: emacs-ja.info,  Node: Lossage,  Next: Bugs,  Prev: Quitting,  Up: Top

50 Emacsのトラブルへの対処
**************************

このセクションでは、キーボードコードのミクスアップ(mixup)、文字化け、メ
モリー不足、クラッシュやハングなど、Emacsが期待したとおりに動作しない状
況の認識と対処法について説明します。

   Emacsでバグを見つけたと思ったら何をすればよいかについては、*note
Bugs::を参照してください。

* Menu:

* DEL Does Not Delete::      <DEL>で削除できないとき、何を行なうべきか。
* Stuck Recursive::          モードラインのカッコの周囲の‘[...]’。
* Screen Garbled::           画面上のゴミ。
* Text Garbled::             テキストの中のゴミ。
* Memory Full::              メモリー不足に対処する方法。
* Crashing::                 クラッシュ時にEmacsが何を行なうか。
* After a Crash::            クラッシュしたEmacsセッションでの編集をリカバリーする。
* Emergency Escape::         Emacsが応答しなくなったとき、何を行なうべきか。


File: emacs-ja.info,  Node: DEL Does Not Delete,  Next: Stuck Recursive,  Up: Lossage

50.1 <DEL>で削除できない場合
============================

すべてのキーボードには多くのキーがありますが、通常<BACKSPACE>とラベルさ
れたキーは、最後にタイプした文字を削除するのに使用されます。Emacsでは、
このキーは<DEL>に等しいと想定されています。

   グラフィカルなディスプレーでEmacsを開始したとき、Emacsはどのキーが
<DEL>なのか自動的に決定します。いくつかの特殊なケースでは、Emacsがシステ
ムから間違った情報を取得して、<BACKSPACE>が後方ではなく前方に削除する場
合があります。

   <Delete>というキーをもつキーボードもあります。これは通常、前方に削除
するために使用されます。Emacsでこのキーが後方に削除を行なう場合も、
Emacsが間違った情報 — ただし反対の意味の — を受け取ったことを意味します
。

   テキスト端末で、<BACKSPACE>が文字を削除するかわりに、‘Control-h’のよ
うなヘルプコマンドのプロンプトを表示する場合、それはこのキーが実際は
‘BS’文字を送っていることを意味します。Emacsは<BS>を<DEL>と扱うべきですが
、そうしていないのです。

   これらのケースのすべてにおいて、直ちに改善できることは同じでで、それ
はコマンド‘M-x normal-erase-is-backspace-mode’を使用する方法です。これは
Emacsが<DEL>の処理をサポートする2つのモードを切り替えるので、もしEmacsが
間違ったモードで開始された場合、正しいモードに切り替えることができます。
テキスト端末では、<BS>が<DEL>として扱われる場合にヘルプを見たいときは、
<F1>を使用します。‘C-?’が文字コード127を送る場合は、このキーも機能するで
しょう。

   すべてのEmacsセッションで問題を解決するには、初期化ファイル(*note
Init File::を参照してください)に以下の行の1つを記述します。上記の最初の
ケースでは、<BACKSPACE>が後方ではなく前方に削除を行なうので、
<BACKSPACE>が<DEL>として動作するように、以下の行を使用します:

     (normal-erase-is-backspace-mode 0)

他の2つのケースでは、以下の行を使用します:

     (normal-erase-is-backspace-mode 1)

   すべてのEmacsセッションで問題を解決する別の方法は、変数
‘normal-erase-is-backspace’をカスタマイズする方法です。<BS>または
<BACKSPACE>が<DEL>となるようにモードを指定するには値‘t’、他のモードにた
いしては‘nil’を指定します。*note Easy Customization::を参照してください
。


File: emacs-ja.info,  Node: Stuck Recursive,  Next: Screen Garbled,  Prev: DEL Does Not Delete,  Up: Lossage

50.2 再帰編集レベル
===================

再帰編集レベルは、Emacsの重要かつ便利な機能ですが、それを理解していない
場合は、うまく機能していないように見えるかもしれません。

   モードラインの、メジャーモードやマイナーモードを囲む丸カッコ
(parentheses)の周囲に、角カッコ(square brackets)‘[...]’がある場合、それ
は再帰編集レベルにいることを意味します。もしこれが目的でない場合、または
その意味を理解していない場合は、すぐに再帰編集レベルを抜けるべきです。こ
れを行なうには、‘M-x top-level’とタイプします。*note Recursive Edit::を
参照してください。


File: emacs-ja.info,  Node: Screen Garbled,  Next: Text Garbled,  Prev: Stuck Recursive,  Up: Lossage

50.3 スクリーン上のゴミ
=======================

テキスト端末でテキストが間違って見える場合、まず行なうことはバッファーの
テキストが間違っていないか確かめることです。画面全体を再描画するために、
‘C-l’とタイプしてください。この後でスクリーンが正常に表示される場合、問
題は前のスクリーンの更新にあります(そうでない場合は、以下のセクションを
参照してください)。

   ディスプレー更新の問題は、使用している端末にたいする間違った
terminfoエントリーの結果であることがしばしばあります。Emacsディストリビ
ューションのファイル‘etc/TERMS’は、この種の既知の問題にたいする解決を与
えます。‘INSTALL’のセクションの中の1つは、これらの問題にたいする一般的な
アドバイスを含みます。正しいterminfoエントリーを使用しているようなら、そ
れはterminfoエントリーにバグがあるか、特定の端末タイプで発生するEmacsの
バグである可能性があります。


File: emacs-ja.info,  Node: Text Garbled,  Next: Memory Full,  Prev: Screen Garbled,  Up: Lossage

50.4 テキスト内のゴミ
=====================

‘C-l’がそのテキストが間違っていることを示す場合、最初に実際の結果を生成
するのに何のコマンドをタイプしたか見るために、‘C-h l’とタイプします。そ
れから‘C-x u’を使用して、正しいと思える状態まで、1つずつ変更をundoします
。

   バッファーの先頭または最後の大量のテキストが失われているように見える
場合は、モードラインに単語‘Narrow’が表示されていないかチェックします。も
しこれが表示されている場合、表示されていないテキストはまだ存在しますが、
一時的に制限されています。これに再びアクセスできるようにするには、‘C-x n
w’とタイプします。*note Narrowing::を参照してください。


File: emacs-ja.info,  Node: Memory Full,  Next: Crashing,  Prev: Text Garbled,  Up: Lossage

50.5 メモリー不足
=================

‘Virtual memory exceeded’というエラーメッセージが表示された場合は、‘C-x
s’で変更されたバッファーを保存してください。この方法は、バッファーを保存
するのに最小限の追加メモリーを必要とします。Emacsはこのエラーが発生した
ときでも利用可能な予備メモリーを保持しており、それは‘C-x s’が処理を完了
するのに充分なはずです。予備メモリーを使用したとき、モードラインの先頭に
‘!MEM FULL!’が表示された場合、それは予備メモリーも使い切ったことを意味し
ます。

   変更されたバッファーを変更したら、このEmacsセッションを終了して別のセ
ッションを開始するか、‘M-x kill-some-buffers’を使用して、カレントEmacsジ
ョブのスペースを開放できます。これにより充分なスペースが開放された場合、
予備メモリーは再充填され、モードラインから‘!MEM FULL!’の表示が消えます。
これは同じEmacsセッションで、安全に編集を継続できることを意味します。

   メモリー不足のときは、バッファーの保存やkillに‘M-x buffer-menu’を使用
しないでください。Buffer Menuはかなりの量のメモリーを必要とするので、予
備メモリーの供給では不充分でしょう。


File: emacs-ja.info,  Node: Crashing,  Next: After a Crash,  Prev: Memory Full,  Up: Lossage

50.6 Emacsがクラッシュしたとき
==============================

Emacsはクラッシュを前提としていませんが、もしクラッシュした場合、exitす
る前に“クラッシュレポート(crash report)”を生成します。クラッシュレポート
は標準エラーストリームにプリントされます。EmacsがGNUシステムまたはUnixシ
ステムでグラフィカルなデスクトップから開始された場合、標準エラーストリー
ムは一般的に‘~/.xsession-errors’のようなファイルにリダイレクトされるので
、そこでクラッシュレポートを探すことができます。MS-Windowsでは、クラッシ
ュレポートは標準エラーストリームに加え、Emacsプロセスのカレントとディレ
クトリーの、‘emacs_backtrace.txt’という名前のファイルに書き込まれます。

   クラッシュレポートのフォーマットは、プラットフォームに依存します。GNU
Cライブラリーを使用するいくつかのプラットフォームでは、クラッシュレポー
トには、クラッシュ前の実行状態を説明する“backtrace”が含まれ、これはクラ
ッシュをデバッグする助けとなります。以下はGNUシステムの例です:

     Fatal error 11: Segmentation fault
     Backtrace:
     emacs[0x5094e4]
     emacs[0x4ed3e6]
     emacs[0x4ed504]
     /lib64/libpthread.so.0[0x375220efe0]
     /lib64/libpthread.so.0(read+0xe)[0x375220e08e]
     emacs[0x509af6]
     emacs[0x5acc26]
     ...

数字‘11’ はクラッシュにたいするシステムのシグナル番号 — このケースでは
segmentation fault — です。16進数字はプログラムのアドレスで、これにより
デバッグツールを使用して、ソースコード行に関連付けることができます。たと
えばGDBコマンド‘list *0x509af6’は、‘emacs[0x509af6]’エントリーにたいする
ソースコード行をプリントします。システムに‘addr2line’ユーティリティーが
ある場合、以下のシェルコマンドはソースコードの行番号とともに、
backtraceを出力します:

     sed -n 's/.*\[\(.*\)]$/\1/p' BACKTRACE |
       addr2line -C -f -i -p -e BINDIR/EMACS-BINARY

ここで、BACKTRACEはbacktraceのコピーを含むテキストファイル名、BINDIRは
Emacs実行可能ファイルを含むディレクトリー名、EMACS-BINARYはEmacs実行可能
ファイル(GNUおよびUnixシステムでは通常は‘emacs’、MS-Windowsおよび
MS-DOSでは‘emacs.exe’)です。‘-p’オプションがない古いバージョンの
‘addr2line’では、このオプションを省略してください。

   coreファイルをサポートするシステムでは、Emacsはオプションで“コアダン
プ(core dump)”を生成します。コアダンプはクラッシュ前のプログラムの状態に
関する多くのデータを含むファイルで、通常GDBのようなデバッガーにロードし
て調べられます。多くのプラットフォームでは、コアダンプはデフォルトで無効
になっているので、(たとえばシェルのスタートアップスクリプトで)シェルコマ
ンド‘ulimit -c unlimited’を実行して、明示的に有効にしなければなりません
。


File: emacs-ja.info,  Node: After a Crash,  Next: Emergency Escape,  Prev: Crashing,  Up: Lossage

50.7 クラッシュ後のリカバリー
=============================

Emacs、またはコンピューターがクラッシュした場合、クラッシュしたとき編集
していたファイルを、自動保存ファイルからリカバリーすることができます。こ
れを行なうには、再びEmacsを開始して、コマンド‘M-x recover-session’とタイ
プしてください。

   このコマンドはm最初に中断されたセッションのファイルを、ファイルの日付
とともにリストするバッファーを表示します。そこからリカバリーするファイル
を、選択しなければなりません。通常リカバリーしたいファイルは、一番最近の
セッションでしょう。選択したファイルにポイントを移動して、‘C-c C-c’とタ
イプしてください。

   その後‘recover-session’は、そのセッション中に編集していた各ファイルに
ついて、検討を行ないます。そのようなファイルそれぞれについて、そのファイ
ルをリカバリーするか尋ねるのです。あるファイルにたいして‘y’と応えると、
コマンドはファイルとファイルの自動保存ファイルの日付を表示して、再度その
ファイルをリカバリーするか尋ねます。この2回目の質問にたいして同意するに
は、‘yes’と応えなければなりません。‘yes’と応えた場合、Emacsはそのファイ
ルをvisitしますが、テキストは自動保存ファイルから取得します。

   ‘recover-session’が終了すると、リカバリーを選択したファイルがEmacsバ
ッファーに表示されます。そこでファイルを保存する必要があります。それらを
保存することだけが、そのファイル自身を更新するのです。

   ファイルに関連付けられていないバッファーをリカバリーしたいときや、自
動保存が重要な更新を記録するほど最新でなかった場合、最後の手段として — コ
アダンプが保存されていて、Emacsの実行ファイルからデバッグシンボルがスト
リップされていないという条件の元に — コアダンプからそれらを取得するため
に、GDB(GNUデバッガー)で‘etc/emacs-buffer.gdb’スクリプトを使用することが
できます。

   コアダンプを入手したら、すぐに‘core.emacs’のような別の名前にリネーム
します。これにより、他のクラッシュによるコアダンプの上書きを防ぎます。

   このスクリプトを使用するには、Emacs実行ファイル名とコアダンプのファイ
ル名を、‘gdb /usr/bin/emacs core.emacs’のように指定します。‘(gdb)’プロン
プトで、‘source /usr/src/emacs/etc/emacs-buffer.gdb’としてリカバリースク
リプトをロードします。それから利用可能なバッファーを見るために、コマンド
‘ybuffer-list’とタイプします。これは各バッファーにたいして、バッファー番
号をリストします。バッファーを保存するには、‘ysave-buffer’を使用します。
ここでバッファー番号とそのバッファーを書き込むファイル名を指定します。す
でに存在するファイル名を使用するべきではありません。ファイルがすでに存在
する場合、このスクリプトはそのファイルの古い内容のバックアップを作成しま
せん。


File: emacs-ja.info,  Node: Emergency Escape,  Prev: After a Crash,  Up: Lossage

50.8 緊急エスケープ
===================

テキスト端末では、1回目の‘C-g’にたいしてEmacsが実際に反応してquitする前
に、2回目の‘C-g’をタイプすると、“緊急エスケープ(emergency escape)”が、
Emacsを即座にサスペンドします。これにより、どんなにひどくハングしていて
も、常にGNU Emacsを抜け出すことができます。物事が正しく処理されている場
合、Emacsは最初の‘C-g’を素早く認識・処理するので。2回目の‘C-g’は緊急エス
ケープを引き起こしません。しかし何らかの問題が、Emacsが最初の‘C-g’を処理
するのを妨げる場合、2回目の‘C-g’でシェルに戻ります。

   緊急エスケープによるサスペンドからEmacsを再開する場合、サスペンド前に
行なっていた何かに戻る前に、Emacsは以下の2つの質問をします:

     Auto-save? (y or n)
     Abort (and dump core)? (y or n)

質問に応えるには、それぞれにたいして‘y’または‘n’の後に、<RET>をタイプし
ます。

   ‘Auto-save?’にたいして‘y’と応えると、自動保存が有効なすべての編集され
たバッファーの自動保存を、即座に行ないます。‘n’と応えると、これをスキッ
プします。

   ‘Abort (and dump core)?’にたいして‘y’と応えると、Emacsはクラッシュし
てコアダンプします。これは専門家(wizard)が、なぜEmacsが最初の‘C-g’で
quitしなかったかを見つけ出すことを可能にします。コアダンプの後、実行は継
続されません。

   この質問に‘n’と応えた場合、Emacsは実行を再開します。運がよければ、
Emacsは最終的にquit要求を行なうでしょう。そうでない場合、連続して‘C-g’を
タイプして、緊急エスケープを再度呼び出します。

   実際はEmacsがハングしているのではなく、遅いだけの場合、本当に意味する
ところを意図せずに、2連‘C-g’の機能を呼び出してしまうかもしれません。この
場合は、2つの質問の両方に‘n’を応えれば、前の状態に戻ることができます。や
がて要求したquitが行なわれるでしょう。

   緊急エスケープはテキスト端末だけでアクティブになっています。グラフィ
カルなディスプレーでは、マウスを使用してEmacsをkillしたり、他のプログラ
ムに切り替えることができます。

   MS-DOSでは緊急エスケープを発生させるために、‘C-<Break>’を2回タイプし
なければなりません — しかしシステムコールがハングしたり、EmacsがCコード
のタイトなループにハマっているときは機能しないケースがあります。


File: emacs-ja.info,  Node: Bugs,  Next: Contributing,  Prev: Lossage,  Up: Top

51 バグの報告
*************

Emacsでバグを見つけたと思ったときは、それを報告してください。それをfixす
ることは約束できませんし、それがバグであると常に認める訳ではありませんが
、もちろんそれについて知りたいのです。追加したいと考える機能についても、
同じことが言えます。以下のセクションは、有効なバグレポートを作成する助け
となるでしょう。

* Menu:

* Known Problems::           既知の問題とバグについて読む方法。
* Criteria: Bug Criteria.    本当にバグを見つけたのか?
* Understanding Bug Reporting::  バグを報告する効果的な方法。
* Checklist::                良いバグレポートのために従うべきステップ。
* Sending Patches::          GNU Emacsにパッチを送る方法。


File: emacs-ja.info,  Node: Known Problems,  Next: Bug Criteria,  Up: Bugs

51.1 既存のバグレポートの既知の問題を読む
=========================================

バグを報告する前に、少しでも可能なら、それが既知のものか確認してください
。実際には、それがもっと後のEmacsリリースや、Emacsの開発バージョンですで
にfixされているかもしれません。以下は、既知の問題について読むことができ
る、主な場所のリストです:

   • ‘etc/PROBLEMS’ファイル。‘C-h C-p’とタイプして読むことができます。こ
     のファイルには、Emacsをコンパイル、インストール、実行するときに出会
     う、既知の問題の詳しいリストが含まれています。次善策や解決策の提案
     も、多くあります。

   • 追加のユーザーレベルの問題のいくつかは、*note Bugs and problems:
     (efaq)Bugs and problems.でも見ることができます。

   • <http://debbugs.gnu.org>のGNU Bug Tracker。Emacsのバグは‘emacs’パッ
     ケージの下のトラッカーにファイルされています。トラッカーは、各バグ
     の状態、最初のバグレポート、バグ報告者とEmacs開発者によるフォローア
     ップメッセージについて情報を記録します。subject、severity、その他の
     条件でバグを検索できます。

     ウェブページでバグトラッカーを閲覧するかわりに、‘debbugs’パッケージ
     を使用して、それをEmacsから閲覧できます。このパッケージはパッケージ
     メニュー(*note Packages::を参照してください)を通じてダウンロードで
     きます。このパッケージは、バグをリストするコマンド‘M-x
     debbugs-gnu’、特定のバグを検索する‘M-x debbugs-gnu-search’を提供し
     ます。Emacsメンテナーにより適用されるユーザータグは、‘M-x
     debbugs-gnu-usertags’で表示されます。

   • ‘bug-gnu-emacs’メーリングリスト(ニュースグループ‘gnu.emacs.bug’も利
     用可能)。リストのアーカイブは
     <http://lists.gnu.org/mailman/listinfo/bug-gnu-emacs>で見ることがで
     きます。このリストはバグトラッカーに送られたEmacsバグレポートとドロ
     ーアップメッセージの、“mirror”として機能します。これにはバグトラッ
     カーが導入される前(2008年以前)の古いバグレポートも含まれています。

     もし望むなら、メーリングリストに登録できます。このリストの目的は
     Emacsメンテナーにバグと機能リクエストの情報を提供するためのもので、
     報告には大量のデータが含まれるかもしれないことに注意してください。
     購読者はこれについて不満を言うべきではありません。

   • ‘emacs-pretest-bug’メーリングリスト。このリストは今は使用されておら
     ず、主に歴史的な興味のためのものです。一時は(たとえばまだリリースさ
     れていない)Emacs開発バージョンのために使用されていました。2003年か
     ら2007年中頃までのアーカイブは、
     <http://lists.gnu.org/archive/html/emacs-pretest-bug/>で見ることが
     できます。現在は‘bug-gnu-emacs’にたいするエイリアスです。

   • ‘emacs-devel’メーリングリスト。このメーリングリストにバグを報告する
     人がときどきいます。しかしこのリストの主な目的は違うので、バグレポ
     ートはバグリストに送るほうがよいでしょう。バグを報告する前に、この
     一覧を読んだことに感謝を感じることはありません。


File: emacs-ja.info,  Node: Bug Criteria,  Next: Understanding Bug Reporting,  Prev: Known Problems,  Up: Bugs

51.2 バグがあったとき
=====================

Emacsが不正なメモリー位置にアクセスする場合(“segmentation fault”)、また
は(“disk full”のようなメッセージではなく)プログラムに問題があることを示
す、オペレーティングシステムのエラーメッセージとともに終了する場合、それ
は確実にバグです。

   Emacsがバッファーの内容を正しく対応して表示しないとき、それはバグです
。しかしバッファーのナローイング(*note Narrowing::を参照してください)チ
ェックするべきです。これはバッファーの一部を隠して、表示される方法を変更
できるので、バグではありません。

   コマンドが永久に完了しないなら、それはバグですが、本当にEmacsのせいか
確認しなくてはなりません。コマンドの中には単に長時間かかるものがいくつか
あります。‘C-g’ (MS-DOSでは‘C-<Break>’)をタイプしてから、‘C-h l’で、
Emacsが受け取った入力が、あなたがタイプしようと意図したものなのか確認し
ます。その入力が、あなたが素早く処理されるべきだと_わかっている_ものだっ
た場合は、バグを報告してください。そのコマンドが長時間かかるものか判らな
い場合は、マニュアルを調べるか、協力してくれる人に尋ねてください。

   あなたの親しんでいるコマンドが、コマンドの通常の定義が正当なのに、
Emacsのエラーメッセージを表示する場合、それはおそらくバグです。

   コマンドが間違ったことを行なうなら、それはバグです。しかしそのコマン
ドが何を行なうべきか確実に知っているか確認してください。そのコマンドに詳
しくない場合、コマンドは実際は正しく動いているのでしょう。疑うなら、コマ
ンドのドキュメント(*note Name Help::を参照してください)を参照してくださ
い。

   あるコマンドの意図された定義が、それを編集するための最良の定義ではな
いこともあります。これはとても重要な問題の一種ですが、判断の問題でもあり
ます。いくつかの既存の機能にたいする無知から、そのような決定を行なうのは
簡単でもあります。通常の方法でドキュメントをチェックして、それを理解した
と確信し、あなたがやりたいことが不可能だと確実に判るまでは、そのような問
題にたいして不満を言わないのが、おそらく最良です。他のEmacsユーザーにも
尋ねてみましょう。マニュアルを注意深く読んだ後でも、そのコマンドが何を想
定しているか確信がもてないときは、不明解な単語をindex(索引)やglossary(用
語集)でチェックしましょう。

   注意深くマニュアルを読んだ後でも、そのコマンドが何を行なうべきか判ら
ないとき、それは報告すべきマニュアルのバグであることを示します。Emacsの
エクスパートでない人 — あなたを含めて — にたいして、すべてを明解にするの
がマニュアルの役目です。プログラムのバグと同様に、ドキュメントのバグレポ
ートは重要です。

   関数や変数のビルトインドキュメントがマニュアルと異なる場合、どちらか
一方が間違っていなければならないので、これはバグです。


File: emacs-ja.info,  Node: Understanding Bug Reporting,  Next: Checklist,  Prev: Bug Criteria,  Up: Bugs

51.3 バグレポートの理解
=======================

バグがあると判断したときは、それを報告すること、そして有用な方法で報告す
ることが重要です。もっとも有用なのは、Emacsを起動するシェルコマンドから
、問題が発生するまでに、何のコマンドをタイプしたかの正確な記述です。

   バグレポートのもっとも重要な原理は、_事実_を報告することです。仮定や
口頭の説明は、詳細な生データの代替にはなりません。事実の報告は簡単ですが
、多くの人は事実のかわりに仮定の説明をしようと懸命に努め、それを報告する
のです。その説明がEmacsが実装されている方法にたいする仮定にもとづく場合
、それらは使い道がありません。その一方で事実の欠落により、わたしたちはバ
グについての実際の情報を得られないでしょう。実際に問題を_デバッグ_して、
推定を超える説明を報告したい場合、それは有用です — しかし、どうか生の事
実も同様に含めてください。

   たとえば、‘C-x C-f /glorp/baz.ugh <RET>’とタイプして、ファイルを
visitしたとき、そのファイルが偶然大きい(とあなたは知っている)ファイルで
、Emacsが‘I feel pretty today’と表示したとします。バグレポートにはすべて
の情報が必要になります。あなたは問題がファイルのサイズにあると仮定して、
“大きなファイルをvisitしたら、Emacsが‘I feel pretty today’と表示します
”、などと報告すべきではありません。これはわたしたちが“推測説明(guessing
explanations)”と呼ぶものです。ファイル名に‘z’があるという事実が、問題の
原因かもしれません。もしそうなら、あなたの報告を受け取ったとき、わたした
ちは“大きなファイル”で問題の再現を試み、それらのファイル名にはおそらく
‘z’が含まれておらず、問題を確認できないでしょう。名前に‘z’が含まれるファ
イルをvisitしてみるべきだと、推測できる方法はありません。

   ‘C-x C-f’のではなく、“ファイルをvisit”とさえ言うべきではありません。
同様にテキストを入力する方法では、“その行に3文字あるとき”ではなく、
“‘<RET> A B C <RET> C-p’とタイプした後”と書いてください。

   可能なら、すぐにバグを再現するために‘emacs -Q’(Emacsは初期のカスタマ
イズなしで開始されます。*note Initial Options::を参照してください)で
Emacsを呼び出して、バグを発生させるステップを繰り返してみてください。こ
の方法でバグを再現できたら、あなたの個人的なカスタマイズをバグから除外で
きます。バグレポートは、Emacsを‘emacs -Q’で開始したことから始まり、バグ
を再現させる正確な一連のステップを続けるべきです。可能ならバグを再現する
のに必要な、正確なファイル内容を報告してください。

   ‘emacs -Q’では再現できないバグもいくつかあります。結局は再現するのが
難しいバグもあります。そのような場合、何を行なったかを報告すべきです — が
、前述したように、どうか最初にバグを発生させた生の事実を固持してください
。

   報告したい複数の問題がある場合は、どうかそれらを個別のバグとしてそれ
ぞれ報告してください。


File: emacs-ja.info,  Node: Checklist,  Next: Sending Patches,  Prev: Understanding Bug Reporting,  Up: Bugs

51.4 バグレポートのためのチェックリスト
=======================================

バグを報告する前に、まずその問題がすでに報告されていないか、確認を試みて
ください(*note Known Problems::を参照してください)。

   もし可能なら、その問題がすでにfixされていないか、最新リリース版の
Emacsも試してみてください。同様に、最新の開発版を試してみるのもよいでし
ょう。これがある人にとっては簡単でないことは認識しているので、バグを報告
する前に、絶対にこれを行なわなければならないと思わないでください。

   Emacsでバグレポートを書くベストな方法は、コマンド‘M-x
report-emacs-bug’を使用する方法です。これはメールバッファー(*note
Sending Mail::を参照してください)をセットアップして、自動的に_いくつかの
_重要な情報を挿入します。しかし、すべての必要な情報は提供できません。だ
から以下のガイドラインを読んで、それに従うべきです。そうすればメッセージ
を送る前に、他の重大な情報を手で入力できます。‘M-x report-emacs-bug’によ
って挿入されたいくつかの情報は、適切ではないと感じるかもしれませんが、完
全に確信があるのでなければそれを残してください。そうすれば開発者たちがそ
れを判断できます。

   レポートを記述し終えたら、‘C-c C-c’とタイプすると、それはEmacsメンテ
ナー <bug-gnu-emacs@gnu.org>に送られます (新しい機能や改善を提案したいと
きも、同じアドレスを使用します)。Emacsの中からメールを送れない場合、バグ
レポートのテキストを通常使用しているメールクライアントにコピーして(シス
テムがサポートしている場合は、‘C-c M-i’でEmacsにそれを行なわせることがで
きます)、そのアドレスに送信できます。または、そのアドレスに問題を説明す
る簡単なメールを送ることもできます。

   レポートは‘bug-gnu-emacs’メーリングリストに送られ、
<http://debbugs.gnu.org>のGNU Bug Trackerに保管されます。報告について、
より詳細な情報を尋ねる必要がある場合のために、どうか有効な返信用アドレス
を含めてください。提出されたレポートは調停されるので、レポートが見られる
ようになるまで遅れが生じることもあります。

   バグを報告するためにGnu Bug Trackerがどのように機能するか知る必要はあ
りませんが、もし望むなら、トラッカーのオンラインドキュメントで、使用でき
るさまざま機能を見ることができます。

   ‘bug-gnu-emacs’メーリングリストに送られたすべてのメールは、
‘gnu.emacs.bug’ニュースグループにもゲートウェイされます。この逆も真です
が、バグレポート(または返信)をニュースグループにポストしないでください。
これにより、さらに情報を尋ねるためにあなたに連絡するのが困難になるのと、
それがバグトラッカーと充分に統合されていないからです。

   データが500,000バイトを超える場合は、どうかそれを直接レポートに含めな
いでください。要求されたら送るという提案に留めるか、データをFTPで利用可
能にしてその場所を知らせてください。

   メンテナーがバグを詳細に調べられるように、レポートには以下の事項を含
めるべきです:

   • Emacsのバージョン番号。これがないと、GNU Emacsのカレントバージョン
     で, バグを探す意義があるかを知ることができません。

     この情報は、‘M-x report-emacs-bug’により自動的にレポートに含まれま
     すが、レポートでこのコマンドを使用しない場合は、‘M-x emacs-version
     <RET>’とタイプして、バージョン番号を取得できます。このコマンドが機
     能しない場合、たぶんあなたはGNU Emacsではない他の何かを使っているの
     で、どこか他のところにそのバグを報告する必要があるでしょう。

   • 使用している機種のタイプ、およびオペレーティングシステム名とバージ
     ョン番号(繰り返しになりますが、これらは‘M-x report-emacs-bug’で自動
     的にレポートに含まれます)。‘M-x emacs-version <RET>’もこの情報を提
     供します。‘*Messages*’バッファーからコマンドの出力をコピーすれば、
     すべてを正確に取得できます。

   • Emacsをインストールしたとき、‘configure’に与えたオプション(‘M-x
     report-emacs-bug’により自動的にレポートに含まれます)。

   • Emacsのソースにたいして行なった変更の完全なリスト(わたしたちには、
     変更されたEmacsのバグを詳細に調べる時間はないでしょう。しかし変更を
     行なっていて、それをわたしたちに告げないとしたら、それはわたしたち
     を野性のダチョウ狩りに送り出すようなものです)。

     これらの変更について正確に記述してください。英語による説明では充分
     ではありません。それらにたいするコンテキストdiffも送ってください。

     独自のファイル追加や、他の機種へのポートも、ソースの変更です。

   • GNU Emacsの標準的なインストール手順からの、その他あらゆる逸脱の詳細
     。

   • バグを再現するのに必要なファイルの完全なテキスト。

     ファイルをvisitせずに問題を発生させる方法を説明できるなら、ぜひそう
     してください。これによりデバッグがとても簡単になります。ファイルが
     必要な場合、わたしたちがファイルの正確な内容を見られるよう確実にし
     てください。たとえば、行末にスペースがあるか、バッファーの最終行の
     後に改行があるかが問題となる場合があります(最終行が終端されているか
     どうかを心配すべき理由はないかもしれませんが、それがバグだと報告す
     ることを試みてください)。

   • バグを再現するためにタイプする必要がある、正確なコマンド。少しでも
     可能なら、‘-Q’オプション(*note Initial Options::を参照してください
     )でEmacsを開始したときからの、完全なレシピを送ってください。このオ
     プションはあなたの個人的なカスタマイズをバイパスします。

     Emacsへの入力を正確に記録する方法の1つとして、それをdribbleファイル
     に書き込む方法があります。このファイルを開始するには、‘M-x
     open-dribble-file <RET>’コマンドを使用します。このコマンドからその
     Emacsプロセスがkillされるまで、Emacsはすべての入力を指定された
     dribbleファイルにコピーします。機密情報(パスワードなど)は、
     dribbleファイルへの記録を終了させることに注意してください。

   • 表示のバグである可能性がある場合は、端末タイプ(環境変数‘TERM’の値
     )、その端末にたいする‘/etc/termcap’の完全なtermcapエントリー(このフ
     ァイルはすべての機種で同じではありません)、Emacsが実際に端末に送っ
     た出力。

     端末出力を収集する方法は、以下のLisp式

          (open-termscript "~/termscript")

     を、Emacs開始直後に、‘M-:’を使用するか、‘*scratch*’バッファーで実行
     します。その後Emacsプロセスがkillされるまで、Emacsはすべての端末出
     力を、指定されたtermscriptファイルにもコピーします。Emacs開始時にそ
     の問題が発生する場合は、この式をEmacs初期化ファイルに記述すれば、
     Emacsが最初にスクリーンを表示するときに、termscriptファイルもオープ
     ンされます。

     警告: バグをシミュレートする端末タイプへのアクセスなしに、端末依存
     バグをfixするのは、しばしば困難で、不可能なときもあります。

   • 非ASCIIまたは国際化されたテキストと関連性がある場合は、Emacsを開始
     したときのlocale。GNU/LinuxとUnixシステム、またはBashのような
     Posixスタイルのシェルを使用している場合、以下のシェルコマンドを使用
     して関連する値を見ることができます:

          echo LC_ALL=$LC_ALL LC_COLLATE=$LC_COLLATE LC_CTYPE=$LC_CTYPE \
            LC_MESSAGES=$LC_MESSAGES LC_TIME=$LC_TIME LANG=$LANG

     別の方法として、システムにそれがある場合は、GNU/LinuxおよびUnixコマ
     ンドを使用して、localeセッティングを表示できます。

     ‘M-!’コマンドを使用してEmacsからこれらのコマンドを実行して、
     ‘*Messages*’バッファーからコマンドの出力をバグレポートにコピーでき
     ます。かわりに‘M-x getenv <RET> LC_ALL <RET>’とタイプすると、
     ‘LC_ALL’の値をエコーエリアに表示するので、‘*Messages*’バッファーか
     らこの出力をコピーすることもできます。

   • あなたが間違いと主張する動作の説明。たとえば“Emacsプロセスが致命的
     なシグナルを受け取った”とか“結果のテキストは以下だが、これは間違い
     だと思う”など。

     もちろん、Emacsが致命的なシグナルを受け取るというバグなら、見逃すこ
     とはないでしょう。しかし、そのバグが正しくないテキストの場合、メン
     テナーは何が間違っているか気づかないかもしれません。なぜそのような
     危険を放置するのですか?

     あなたが遭遇した問題が致命的なシグナルの場合でも、明示的にそれを告
     げるべきです。何か奇妙なこと — たとえばあなたのソースコピーの同期が
     とれていない、またはあなたのシステムのCライブラリーにバグがある(こ
     れはあり得ます) — が起こっているとしましょう。あなたのコピーはクラ
     ッシュするかもしれませんが、私たちのコピーはクラッシュしないでしょ
     う。あなたがクラッシュすることを_告げて_いれば、わたしたちのEmacsは
     クラッシュしないので、バグはなかったとわたしたちは言うことができま
     す。クラッシュすることを告げていない場合、わたしたちはバグがあるか
     どうか知ることができません — わたしたちの観察から、なんらかの結論を
     描くことも不可能です。

   • Emacs ManualやEmacs Lisp Reference Manualが、実際のEmacsの振る舞い
     を記述できていない、またはテキストが分かりにくいといったバグの場合
     、間違いだと思うテキストをマニュアルからコピーしてください。そのセ
     クションが小さければ、セクション名だけで充分です。

   • バグの徴候がEmacsのエラーメッセージの場合、エラーメッセージの正確な
     テキストと、EmacsのLispプログラムがどのようにしてエラーに至ったかを
     示す、backtraceを報告するのが重要です。

     エラーメッセージを正確に取得するには、それを‘*Messages*’バッファー
     からバグレポートにコピーします。一部だけではなく、すべてをコピーし
     てください。

     エラーにたいするbacktraceを作成するには、エラーが発生する前に‘M-x
     toggle-debug-on-error’を使用します(つまり、このコマンドを与えた後で
     、バグを発生させなければなりません)。これはエラーによりbacktraceを
     表示するLispデバッガーを開始します。デバッガーのbacktraceをバグレポ
     ートにコピーしてください。EdebugパッケージでEmacs Lispプログラムを
     デバッグする情報については、*note Edebug: (elisp)Edebug.を参照して
     ください。

     このデバッガーの使用は、バグを再現する方法を知っているときだけ利用
     可能です。バグを再現できなければ、最低でもエラーメッセージ全体をコ
     ピーしてください。

     Emacsが無限ループや、とても長い処理にハマっているように見えるとき、
     (変数‘debug-on-quit’が非‘nil’の場合は)‘C-g’とタイプするとLispデバッ
     ガーを開始して、backtraceを表示します。このbacktraceは、そのような
     長いloopのデバッグにたいして有用なので、backtraceを生成できたら、バ
     グレポートにコピーしてください。

     (‘inhibit-quit’がセットされている等で)、‘C-g’にEmacsが応答しない場
     合、Emacsの外から‘debug-on-event’で指定されたシグナル(デフォルトは
     SIGUSR2)を送ることにより、デバッガーに入ることができます。

   • Lispの世界にロードしたプログラム(初期化ファイルを含みます)をチェッ
     クしてください。任意の変数にたいするセットは、Emacsの機能に影響を与
     えるかもしれません。初期化ファイルをロードせずに、フレッシュな状態
     で開始されたEmacsでも、その問題が発生するか確認してください(‘-Q’ス
     イッチでEmacsを開始することによりinitファイルのロードを抑止できます
     )。それで問題が発生しなかったら、問題を発生させるためにLispの世界に
     ロードしなければならないプログラムの、正確な内容を報告しなければな
     りません。

   • その問題がinitファイルやEmacsの標準システムの一部ではない他のLispプ
     ログラムに依存する場合、最初にそれらのプログラムのメンテナーに苦情
     を訴えて、それがバグでないことを確認すべきです。彼らが機能すると思
     われる方法でEmacsを使用してバグを確認した後、彼らがそのバグを報告す
     べきです。

   • GNU Emacsのソース中の何かについて言及したい場合、数行のコンテキスト
     とともにそのコードの行を示してください。行番号だけを示すのは止めて
     ください。

     開発ソースの行番号と、あなたのソースの行番号は一致しません。行番号
     だけでは、あなたのバージョンでその行番号がどのコードをさすのか、メ
     ンテナーが判断するのに余分な作業を要しますし、それに確信をもつこと
     もできません。

   • GDBのようなCデバッガーからの追加情報は、そのマシンを利用できなくて
     も問題を見つけることを可能にするかもしれません。GDBの使い方を知らな
     ければ、どうかGDBマニュアルを読んでください — 非常に長いという訳で
     はありませんし、GDBは簡単に使用できます。GDBマニュアルを含むGDBディ
     ストリビューションはオンライン形式で見つけることができ、ほとんどは
     Emacsディストリビューションと同じ場所で見つけることができます。
     GDBの下でEmacsを実行するためには、Emacsをコンパイルした場所の
     ‘src’サブディレクトリーに移動するべきです。カレントディレクトリーが
     ‘src’であることは重要です。GDBはこのディレクトリーの‘.gdbinit’を読
     み込みます。

     しかし、何がバグを引き起こしたかを示すような追加の情報を収集すると
     きは、考える必要があります。

     たとえば、多くの人はbacktraceだけを送って着ますが、これだけではとて
     も有用とは言えません。引数つきのシンプルなbacktraceは、GNU Emacsの
     中で何が起こっているかを少ししか伝えないことがしばしばです。なぜな
     らbacktraceにリストされたほとんどの引数は、Lispオブジェクトへのポイ
     ンターだからです。これらのポインターの数値は、何であれ意味をもちま
     せん。問題となるのはポインターが指すオブジェクトの内容(そして、その
     内容自身もポインターの場合がほとんどです)なのです。

     有用な情報を提供するためには、Lispオブジェクトの値をLisp表記で示す
     必要があります。基底スタックの近傍のスタックフレームのいくつかで、
     Lispオブジェクト変数それぞれにたいしてこれを行ないます。どの変数が
     Lispオブジェクトであるかはソースを調べます。なぜならデバッガーはそ
     れらを整数と判断するからです。

     Lisp構文で変数の値を表示するには、最初にその値をプリントして、それ
     からLispオブジェクトをLisp構文でプリントするために、ユーザー定義の
     GDBコマンド‘pr’を使用します(他のデバッガーを使用しなければならない
     場合、そのオブジェクトを引数として、関数‘debug_print’を呼び出します
     )。‘pr’コマンドはファイル‘.gdbinit’で定義されていて、(コアダンプで
     はなく)実行中のプロセスにたいしてデバッグするときだけ機能します。

     LispエラーでEmacsを停止させてGDBに戻るには、‘Fsignal’にブレークポイ
     ントを置きます。

     実行中のLisp関数の短いリストのためには、GDBコマンド‘xbacktrace’をタ
     イプします。

     ファイル‘.gdbinit’では、データ型やLispオブジェクトの内容を調べるた
     めの、他のコマンドも定義されています。これらのコマンドの名前は‘x’で
     始まります。これらのコマンドは‘pr’より低いレベルで動作するので、少
     し不便になりますが、コアダンプをデバッグしていたり、Emacsが致命的な
     シグナルを受け取ったときなど、‘pr’が機能しないようなときでも、機能
     するでしょう。

     Emacsのデバッグにたいする、より詳細なアドバイスと、他の有用なテクニ
     ックは、Emacsディストリビューションの、ファイル‘etc/DEBUG’で利用可
     能です。そのファイルには、Emacsが応答しない問題を詳しく調べる手順も
     含まれています(多くの人はこれをEmacsが“ハング”したとみなしますが、
     実際はおそらく無限ループにハマっているのでしょう)。

     インストールしたEmacsのファイル‘etc/DEBUG’を探すには、変数
     ‘data-directory’に保管されたディレクトリー名を使用します。

   以下はバグレポートには不要な事柄です:

   • バグを取り巻く状況の説明 — これは再現可能なバグにたいしては必要あり
     ません。

     バグに遭遇したとき人は、入力ファイルを変えてバグが発生しなくなるか
     、影響がないかなどを詳しく調べるのに、多くの時間を費やすことがしば
     しばです。

     これは大抵多くの時間がかかる割に、とても有用とは言えません。なぜな
     らわたしたちがバグを探す方法は、ブレークポイントを設定したデバッガ
     ーの元で1つの例を実行することであり、一連の例から得られる推論ではな
     いからです。追加の例を探すのを止めることにより、あなたも時間を節約
     できるでしょう。すぐにバグレポートを送って、編集作業に戻り、報告す
     べき他のバグを探す法がよいでしょう。

     もちろんオリジナルの_かわり_に、簡単な例を見つけることができたら、
     そちらのほうが便利です。出力中のエラーは簡単に見分けられますし、デ
     バッガーでの実行も時間が短くなります

     しかし単純化は必須ではありません、これを行なうことができなかったり
     、試す時間がない場合は、どうかオリジナルのテストケースでバグを報告
     してください。

   • コアダンプファイル。

     コアダンプによるデバッグは有用ですが、それはあなたのEmacs実行ファイ
     ルと、あなたのマシンだけで行なうことができます。したがってEmacsメン
     テナーにコアダンプを送るのは、有益ではないでしょう。何よりも、コア
     ダンプをメールのバグレポートに含めないでください! そのような巨大な
     メッセージは、すこぶる迷惑です。

   • Emacsを実行したときのシステムコールトレース。

     システムコールトレースは、ある特別な種類のデバッグにはとても有用で
     すが、有用な情報が少ない場合がほとんどです。したがって、クラッシュ
     に関する情報を報告する_一番_の方法は、システムコールトレースを送る
     ことだと考えているように思える人が多いのは奇妙です。おそらくソース
     コードやデバッグシンボルがないプログラムをデバッグする経験がもたら
     す、習慣的なやり方なのでしょう。

     ほとんどのプログラムでは、システムコールトレースより、backtraceのほ
     うが、通常はずっとずっと参考になります。完全な情報を得るには、変数
     の値を表示して、それらを‘pr’でLispオブジェクトとしてプリントするこ
     とによりbacktraceを補完すべきであるとはいえ、シンプルなbacktraceの
     ほうが一般的により参考になります(上記参照)。

   • バグにたいするパッチ。

     バグにたいするパッチは、それが良いものなら有用です。しかし、そのパ
     ッチで充分だと思い込んで、テストケースのような、バグレポートに必要
     な他の情報を省略しないでください。わたしたちはそのパッチに問題を見
     つけて別の方法でfixすると判断するかもしれないし、結局はそれを理解で
     きないかもしれません。わたしたちが、あなたがfixしようと試みているバ
     グを理解できなければ、そしてなぜそのパッチが改善なのかを理解できな
     ければ、私たちはそれを採用できません。

     わたしたちにパッチを理解させて、採用を簡単にするためのガイドライン
     については、*note Sending Patches::を参照してください。

   • バグが何か、何に依存するかについての推測。

     そのような推測は通常間違っています。エキスパートでさえ、事実を見つ
     けるために最初にデバッガーを使用しなければ、そのような事柄を正しく
     推測できないのです。


File: emacs-ja.info,  Node: Sending Patches,  Prev: Checklist,  Up: Bugs

51.5 GNU Emacsへのパッチの送付
==============================

GNU Emacsを改善するためにバグfixを書きたいなら、それはとても助けになりま
す。変更を送るとき、メンテナーがそれらを使うのが簡単になるように、どうか
以下のガイドラインにしたがってください。これらのガイドラインにしたがわな
い場合でも、あなたの情報はまだ有用でしょうが、それを使用するのに余分な作
業が必要になります。GNU Emacsの保守は最良の状況でも多くの作業を要すので
、わたしたちを助けるのにあなたがベストをすくさなければ、わたしたちはそれ
を維持できないのです。

   • その変更が何の問題をfixするのか、または何を改善するかの説明を一緒に
     送ってください。既存のバグにたいするfixについては、
     ‘bug-gnu-emacs’リストの関連するディスカッションか、
     <http://debbugs.gnu.org>のGNU Bug Trackerのバグエントリーに返信する
     のが最善でしょう。その変更が、なぜバグをfixするのか説明してください
     。

   • あなたがfixしたと思っている問題にたいする、正しいバグレポートを常に
     含めてください。それを採用する前に、わたしたちはその変更が正しいと
     、私たち自身に納得させる必要があります。もしそれが正しくても、問題
     を再現する方法がない場合、それを理解する妨げになるでしょう。

   • 将来このソースを読む人の理解を助けとなるように、なぜこの変更が必要
     なのか、適切なコメントを含めてください。

   • 異なる理由にたいする変更を一緒に混ぜないでください。それらを_個別
     _に送ってください。

     異なる理由にたいして2つの変更を行なった場合、わたしたちをそれを一緒
     に採用したいとは思わないでしょう。1つだけを採用したいと思うかもしれ
     ません。それらを合わせて1つのdiffにして送った場合、それらを区別する
     ために — 変更のどの部分がどの目的のためかを理解するために — 余計な
     作業を行なう必要があります。これを行なう時間がない場合、わたしたち
     は変更全体を無視する必要があるかもしれません。

     1つの変更を記述したら、その変更の説明と一緒にそれをすぐに送れば、
     2つの変更は混ざることはなくなり、それらを区別する余計な作業なしに、
     わたしたちはそれぞれを正しく判断することができます。

   • 1つの変更を終えたら、それをすぐに送ってください。ときどき人は多くの
     変更を累積して、すべて一緒に送るのがわたしたちの助けとなると考えま
     す。上述したように、それは正にあなたにできる最悪のことです。

     変更は個別に送るべきなので、すぐに送ることができるでしょう。これは
     、その変更が重要なものなら、それをすぐに採用するオプションをわたし
     たちに与えます。

   • diffを作成するために、‘diff -c’を使用してください。コンテキストなし
     のdiffは確実に採用が困難です。それ以上に調べるのが難しくなります。
     わたしたちは変更の採用を望ましいか判断するために、つねにパッチを調
     べなければなりません。Unidiffフォーマットはコンテキストなしのdiffよ
     り優れていますが、‘-c’のように簡単に読むことができません。

     GNU diffがある場合、Cコードのdiffの作成には‘diff -c
     -F'^[_a-zA-Z0-9$]+ *('’を使用してください。これは変更のある関数名を
     表示します。

   • どちらが古いバージョンで、どちらが新しいバージョンか、あいまいにな
     るのを避けてください。どうかdiffの第1引数に古いバージョン、2番目の
     引数に新しいバージョンを指定してください。そして一方のバージョンに
     たいして、それが古いバージョンなのか、変更した新しいバージョンなの
     かを示す名前をつけてください。

   • あなたの変更にたいする、変更ログ(ChangeLog)のエントリーを記述してく
     ださい。それにより、わたしたちがそれを記述するために余計な作業をし
     なくてすみ、あなたが行なった変更をわたしたちが理解する助けにもなり
     ます。

     変更された場所を示すのが、変更ログの目的です。したがって変更した関
     数について、具体的である必要があります。大きな関数では、関数のどこ
     を変更したか示すのが、助けになる場合が多々あります。

     それとは逆に、変更箇所を示せば、変更ログで変更目的の説明をする必要
     はありません。したがって、新しい関数を追加した場合、必要なのはそれ
     が新しいということを示すだけです。変更目的の説明が必要だと感じたら
     、多分その通りなのでしょう、がコードのコメントにその説明を記述して
     ください。変更目的はそこに記述されているほうが、より有用です。

     どのような種類の情報を記述するかを見るために、最近のコミットにたい
     する変更ログエントリーを見て、わたしたちが使用しているスタイルを学
     んでください。*note Change Log::を参照してください。

   • fixを記述するときは、わたしたちが他のシステムを壊すような変更は採用
     できないということを、念頭に置いてください。あなたの変更が、ほかの
     タイプのシステムでコンパイルされた場合の影響について、考えてくださ
     い。

     一般的には改善となる_かもしれない_が、そう確信するのは難しいような
     fixを送る人が、ときどきいます。そのような変更を採用するのは、わたし
     たちがそれをとても慎重に調べなければならないので、難しくなります。
     もちろん、その変更が正しい理由の説明は、わたしたちを納得させる助け
     になります。

     一番安全な変更は、特定の機種の設定ファイルにたいする変更です。これ
     らの変更は、新しいバグを他の機種に作成しないので、安全です。

     インストールの安全性が明確な形式でパッチをデザインして、わたしたち
     の作業量を、良い状態に保つ助けとなってください。


File: emacs-ja.info,  Node: Contributing,  Next: Service,  Prev: Bugs,  Up: Top

52 Emacs開発への貢献
********************

Emacsを改善する作業をしたい場合は、 <emacs-devel@gnu.org>のメンテナーに
連絡してください。 提案されたプロジェクトを尋ねたり、あなたのアイデアを
提案することができます。

   すでに改善を記述したことがある場合は、それについて教えてください。ま
だ作業を開始していなければ、作業を開始する前に、 <emacs-devel@gnu.org> に
連絡をとるのが有益です。Emacsの他の部分にたいして、あなたの拡張がより適
合する方法を提案することが可能かもしれません。

   Emacsの開発バージョンは、開発者グループにより活発にメンテされている、
レポジトリーからダウンロードできます。詳細についてはEmacsプロジェクトの
ページ<http://savannah.gnu.org/projects/emacs/>を参照してください。

   貢献する方法についての情報は、 ‘Emacsディストリビューションの、
etc/CONTRIBUTE’ ファイルを参照してください。


File: emacs-ja.info,  Node: Service,  Next: Copying,  Prev: Contributing,  Up: Top

53 GNU Emacsにたいして助けを得る方法
************************************

インストール、使用方法、またはGNU Emacsの変更について助言を必要とする場
合は、それを探す2つの方法があります:

   • メッセージを メーリングリスト<help-gnu-emacs@gnu.org>に送るか、 あ
     なたの要求をニュースグループ‘gnu.emacs.help’にポストしてください(こ
     のメーリングリストとニュースグループは相互接続しているので、どちら
     を使っても問題ありません)。

   • 手数料を徴収して助言してくれる人物を、service directory
     (http://www.fsf.org/resources/service/)で探してください。


File: emacs-ja.info,  Node: Copying,  Next: GNU Free Documentation License,  Prev: Service,  Up: Top

Appendix A GNU GENERAL PUBLIC LICENSE
*************************************

                        Version 3, 29 June 2007

     Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/>

     Everyone is permitted to copy and distribute verbatim copies of this
     license document, but changing it is not allowed.

Preamble
========

The GNU General Public License is a free, copyleft license for software
and other kinds of works.

   The licenses for most software and other practical works are designed
to take away your freedom to share and change the works.  By contrast,
the GNU General Public License is intended to guarantee your freedom to
share and change all versions of a program—to make sure it remains free
software for all its users.  We, the Free Software Foundation, use the
GNU General Public License for most of our software; it applies also to
any other work released this way by its authors.  You can apply it to
your programs, too.

   When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
them if you wish), that you receive source code or can get it if you
want it, that you can change the software or use pieces of it in new
free programs, and that you know you can do these things.

   To protect your rights, we need to prevent others from denying you
these rights or asking you to surrender the rights.  Therefore, you have
certain responsibilities if you distribute copies of the software, or if
you modify it: responsibilities to respect the freedom of others.

   For example, if you distribute copies of such a program, whether
gratis or for a fee, you must pass on to the recipients the same
freedoms that you received.  You must make sure that they, too, receive
or can get the source code.  And you must show them these terms so they
know their rights.

   Developers that use the GNU GPL protect your rights with two steps:
(1) assert copyright on the software, and (2) offer you this License
giving you legal permission to copy, distribute and/or modify it.

   For the developers’ and authors’ protection, the GPL clearly explains
that there is no warranty for this free software.  For both users’ and
authors’ sake, the GPL requires that modified versions be marked as
changed, so that their problems will not be attributed erroneously to
authors of previous versions.

   Some devices are designed to deny users access to install or run
modified versions of the software inside them, although the manufacturer
can do so.  This is fundamentally incompatible with the aim of
protecting users’ freedom to change the software.  The systematic
pattern of such abuse occurs in the area of products for individuals to
use, which is precisely where it is most unacceptable.  Therefore, we
have designed this version of the GPL to prohibit the practice for those
products.  If such problems arise substantially in other domains, we
stand ready to extend this provision to those domains in future versions
of the GPL, as needed to protect the freedom of users.

   Finally, every program is threatened constantly by software patents.
States should not allow patents to restrict development and use of
software on general-purpose computers, but in those that do, we wish to
avoid the special danger that patents applied to a free program could
make it effectively proprietary.  To prevent this, the GPL assures that
patents cannot be used to render the program non-free.

   The precise terms and conditions for copying, distribution and
modification follow.

TERMS AND CONDITIONS
====================

  0. Definitions.

     “This License” refers to version 3 of the GNU General Public
     License.

     “Copyright” also means copyright-like laws that apply to other
     kinds of works, such as semiconductor masks.

     “The Program” refers to any copyrightable work licensed under this
     License.  Each licensee is addressed as “you”.  “Licensees” and
     “recipients” may be individuals or organizations.

     To “modify” a work means to copy from or adapt all or part of the
     work in a fashion requiring copyright permission, other than the
     making of an exact copy.  The resulting work is called a “modified
     version” of the earlier work or a work “based on” the earlier work.

     A “covered work” means either the unmodified Program or a work
     based on the Program.

     To “propagate” a work means to do anything with it that, without
     permission, would make you directly or secondarily liable for
     infringement under applicable copyright law, except executing it on
     a computer or modifying a private copy.  Propagation includes
     copying, distribution (with or without modification), making
     available to the public, and in some countries other activities as
     well.

     To “convey” a work means any kind of propagation that enables other
     parties to make or receive copies.  Mere interaction with a user
     through a computer network, with no transfer of a copy, is not
     conveying.

     An interactive user interface displays “Appropriate Legal Notices”
     to the extent that it includes a convenient and prominently visible
     feature that (1) displays an appropriate copyright notice, and (2)
     tells the user that there is no warranty for the work (except to
     the extent that warranties are provided), that licensees may convey
     the work under this License, and how to view a copy of this
     License.  If the interface presents a list of user commands or
     options, such as a menu, a prominent item in the list meets this
     criterion.

  1. Source Code.

     The “source code” for a work means the preferred form of the work
     for making modifications to it.  “Object code” means any non-source
     form of a work.

     A “Standard Interface” means an interface that either is an
     official standard defined by a recognized standards body, or, in
     the case of interfaces specified for a particular programming
     language, one that is widely used among developers working in that
     language.

     The “System Libraries” of an executable work include anything,
     other than the work as a whole, that (a) is included in the normal
     form of packaging a Major Component, but which is not part of that
     Major Component, and (b) serves only to enable use of the work with
     that Major Component, or to implement a Standard Interface for
     which an implementation is available to the public in source code
     form.  A “Major Component”, in this context, means a major
     essential component (kernel, window system, and so on) of the
     specific operating system (if any) on which the executable work
     runs, or a compiler used to produce the work, or an object code
     interpreter used to run it.

     The “Corresponding Source” for a work in object code form means all
     the source code needed to generate, install, and (for an executable
     work) run the object code and to modify the work, including scripts
     to control those activities.  However, it does not include the
     work’s System Libraries, or general-purpose tools or generally
     available free programs which are used unmodified in performing
     those activities but which are not part of the work.  For example,
     Corresponding Source includes interface definition files associated
     with source files for the work, and the source code for shared
     libraries and dynamically linked subprograms that the work is
     specifically designed to require, such as by intimate data
     communication or control flow between those subprograms and other
     parts of the work.

     The Corresponding Source need not include anything that users can
     regenerate automatically from other parts of the Corresponding
     Source.

     The Corresponding Source for a work in source code form is that
     same work.

  2. Basic Permissions.

     All rights granted under this License are granted for the term of
     copyright on the Program, and are irrevocable provided the stated
     conditions are met.  This License explicitly affirms your unlimited
     permission to run the unmodified Program.  The output from running
     a covered work is covered by this License only if the output, given
     its content, constitutes a covered work.  This License acknowledges
     your rights of fair use or other equivalent, as provided by
     copyright law.

     You may make, run and propagate covered works that you do not
     convey, without conditions so long as your license otherwise
     remains in force.  You may convey covered works to others for the
     sole purpose of having them make modifications exclusively for you,
     or provide you with facilities for running those works, provided
     that you comply with the terms of this License in conveying all
     material for which you do not control copyright.  Those thus making
     or running the covered works for you must do so exclusively on your
     behalf, under your direction and control, on terms that prohibit
     them from making any copies of your copyrighted material outside
     their relationship with you.

     Conveying under any other circumstances is permitted solely under
     the conditions stated below.  Sublicensing is not allowed; section
     10 makes it unnecessary.

  3. Protecting Users’ Legal Rights From Anti-Circumvention Law.

     No covered work shall be deemed part of an effective technological
     measure under any applicable law fulfilling obligations under
     article 11 of the WIPO copyright treaty adopted on 20 December
     1996, or similar laws prohibiting or restricting circumvention of
     such measures.

     When you convey a covered work, you waive any legal power to forbid
     circumvention of technological measures to the extent such
     circumvention is effected by exercising rights under this License
     with respect to the covered work, and you disclaim any intention to
     limit operation or modification of the work as a means of
     enforcing, against the work’s users, your or third parties’ legal
     rights to forbid circumvention of technological measures.

  4. Conveying Verbatim Copies.

     You may convey verbatim copies of the Program’s source code as you
     receive it, in any medium, provided that you conspicuously and
     appropriately publish on each copy an appropriate copyright notice;
     keep intact all notices stating that this License and any
     non-permissive terms added in accord with section 7 apply to the
     code; keep intact all notices of the absence of any warranty; and
     give all recipients a copy of this License along with the Program.

     You may charge any price or no price for each copy that you convey,
     and you may offer support or warranty protection for a fee.

  5. Conveying Modified Source Versions.

     You may convey a work based on the Program, or the modifications to
     produce it from the Program, in the form of source code under the
     terms of section 4, provided that you also meet all of these
     conditions:

       a. The work must carry prominent notices stating that you
          modified it, and giving a relevant date.

       b. The work must carry prominent notices stating that it is
          released under this License and any conditions added under
          section 7.  This requirement modifies the requirement in
          section 4 to “keep intact all notices”.

       c. You must license the entire work, as a whole, under this
          License to anyone who comes into possession of a copy.  This
          License will therefore apply, along with any applicable
          section 7 additional terms, to the whole of the work, and all
          its parts, regardless of how they are packaged.  This License
          gives no permission to license the work in any other way, but
          it does not invalidate such permission if you have separately
          received it.

       d. If the work has interactive user interfaces, each must display
          Appropriate Legal Notices; however, if the Program has
          interactive interfaces that do not display Appropriate Legal
          Notices, your work need not make them do so.

     A compilation of a covered work with other separate and independent
     works, which are not by their nature extensions of the covered
     work, and which are not combined with it such as to form a larger
     program, in or on a volume of a storage or distribution medium, is
     called an “aggregate” if the compilation and its resulting
     copyright are not used to limit the access or legal rights of the
     compilation’s users beyond what the individual works permit.
     Inclusion of a covered work in an aggregate does not cause this
     License to apply to the other parts of the aggregate.

  6. Conveying Non-Source Forms.

     You may convey a covered work in object code form under the terms
     of sections 4 and 5, provided that you also convey the
     machine-readable Corresponding Source under the terms of this
     License, in one of these ways:

       a. Convey the object code in, or embodied in, a physical product
          (including a physical distribution medium), accompanied by the
          Corresponding Source fixed on a durable physical medium
          customarily used for software interchange.

       b. Convey the object code in, or embodied in, a physical product
          (including a physical distribution medium), accompanied by a
          written offer, valid for at least three years and valid for as
          long as you offer spare parts or customer support for that
          product model, to give anyone who possesses the object code
          either (1) a copy of the Corresponding Source for all the
          software in the product that is covered by this License, on a
          durable physical medium customarily used for software
          interchange, for a price no more than your reasonable cost of
          physically performing this conveying of source, or (2) access
          to copy the Corresponding Source from a network server at no
          charge.

       c. Convey individual copies of the object code with a copy of the
          written offer to provide the Corresponding Source.  This
          alternative is allowed only occasionally and noncommercially,
          and only if you received the object code with such an offer,
          in accord with subsection 6b.

       d. Convey the object code by offering access from a designated
          place (gratis or for a charge), and offer equivalent access to
          the Corresponding Source in the same way through the same
          place at no further charge.  You need not require recipients
          to copy the Corresponding Source along with the object code.
          If the place to copy the object code is a network server, the
          Corresponding Source may be on a different server (operated by
          you or a third party) that supports equivalent copying
          facilities, provided you maintain clear directions next to the
          object code saying where to find the Corresponding Source.
          Regardless of what server hosts the Corresponding Source, you
          remain obligated to ensure that it is available for as long as
          needed to satisfy these requirements.

       e. Convey the object code using peer-to-peer transmission,
          provided you inform other peers where the object code and
          Corresponding Source of the work are being offered to the
          general public at no charge under subsection 6d.

     A separable portion of the object code, whose source code is
     excluded from the Corresponding Source as a System Library, need
     not be included in conveying the object code work.

     A “User Product” is either (1) a “consumer product”, which means
     any tangible personal property which is normally used for personal,
     family, or household purposes, or (2) anything designed or sold for
     incorporation into a dwelling.  In determining whether a product is
     a consumer product, doubtful cases shall be resolved in favor of
     coverage.  For a particular product received by a particular user,
     “normally used” refers to a typical or common use of that class of
     product, regardless of the status of the particular user or of the
     way in which the particular user actually uses, or expects or is
     expected to use, the product.  A product is a consumer product
     regardless of whether the product has substantial commercial,
     industrial or non-consumer uses, unless such uses represent the
     only significant mode of use of the product.

     “Installation Information” for a User Product means any methods,
     procedures, authorization keys, or other information required to
     install and execute modified versions of a covered work in that
     User Product from a modified version of its Corresponding Source.
     The information must suffice to ensure that the continued
     functioning of the modified object code is in no case prevented or
     interfered with solely because modification has been made.

     If you convey an object code work under this section in, or with,
     or specifically for use in, a User Product, and the conveying
     occurs as part of a transaction in which the right of possession
     and use of the User Product is transferred to the recipient in
     perpetuity or for a fixed term (regardless of how the transaction
     is characterized), the Corresponding Source conveyed under this
     section must be accompanied by the Installation Information.  But
     this requirement does not apply if neither you nor any third party
     retains the ability to install modified object code on the User
     Product (for example, the work has been installed in ROM).

     The requirement to provide Installation Information does not
     include a requirement to continue to provide support service,
     warranty, or updates for a work that has been modified or installed
     by the recipient, or for the User Product in which it has been
     modified or installed.  Access to a network may be denied when the
     modification itself materially and adversely affects the operation
     of the network or violates the rules and protocols for
     communication across the network.

     Corresponding Source conveyed, and Installation Information
     provided, in accord with this section must be in a format that is
     publicly documented (and with an implementation available to the
     public in source code form), and must require no special password
     or key for unpacking, reading or copying.

  7. Additional Terms.

     “Additional permissions” are terms that supplement the terms of
     this License by making exceptions from one or more of its
     conditions.  Additional permissions that are applicable to the
     entire Program shall be treated as though they were included in
     this License, to the extent that they are valid under applicable
     law.  If additional permissions apply only to part of the Program,
     that part may be used separately under those permissions, but the
     entire Program remains governed by this License without regard to
     the additional permissions.

     When you convey a copy of a covered work, you may at your option
     remove any additional permissions from that copy, or from any part
     of it.  (Additional permissions may be written to require their own
     removal in certain cases when you modify the work.)  You may place
     additional permissions on material, added by you to a covered work,
     for which you have or can give appropriate copyright permission.

     Notwithstanding any other provision of this License, for material
     you add to a covered work, you may (if authorized by the copyright
     holders of that material) supplement the terms of this License with
     terms:

       a. Disclaiming warranty or limiting liability differently from
          the terms of sections 15 and 16 of this License; or

       b. Requiring preservation of specified reasonable legal notices
          or author attributions in that material or in the Appropriate
          Legal Notices displayed by works containing it; or

       c. Prohibiting misrepresentation of the origin of that material,
          or requiring that modified versions of such material be marked
          in reasonable ways as different from the original version; or

       d. Limiting the use for publicity purposes of names of licensors
          or authors of the material; or

       e. Declining to grant rights under trademark law for use of some
          trade names, trademarks, or service marks; or

       f. Requiring indemnification of licensors and authors of that
          material by anyone who conveys the material (or modified
          versions of it) with contractual assumptions of liability to
          the recipient, for any liability that these contractual
          assumptions directly impose on those licensors and authors.

     All other non-permissive additional terms are considered “further
     restrictions” within the meaning of section 10.  If the Program as
     you received it, or any part of it, contains a notice stating that
     it is governed by this License along with a term that is a further
     restriction, you may remove that term.  If a license document
     contains a further restriction but permits relicensing or conveying
     under this License, you may add to a covered work material governed
     by the terms of that license document, provided that the further
     restriction does not survive such relicensing or conveying.

     If you add terms to a covered work in accord with this section, you
     must place, in the relevant source files, a statement of the
     additional terms that apply to those files, or a notice indicating
     where to find the applicable terms.

     Additional terms, permissive or non-permissive, may be stated in
     the form of a separately written license, or stated as exceptions;
     the above requirements apply either way.

  8. Termination.

     You may not propagate or modify a covered work except as expressly
     provided under this License.  Any attempt otherwise to propagate or
     modify it is void, and will automatically terminate your rights
     under this License (including any patent licenses granted under the
     third paragraph of section 11).

     However, if you cease all violation of this License, then your
     license from a particular copyright holder is reinstated (a)
     provisionally, unless and until the copyright holder explicitly and
     finally terminates your license, and (b) permanently, if the
     copyright holder fails to notify you of the violation by some
     reasonable means prior to 60 days after the cessation.

     Moreover, your license from a particular copyright holder is
     reinstated permanently if the copyright holder notifies you of the
     violation by some reasonable means, this is the first time you have
     received notice of violation of this License (for any work) from
     that copyright holder, and you cure the violation prior to 30 days
     after your receipt of the notice.

     Termination of your rights under this section does not terminate
     the licenses of parties who have received copies or rights from you
     under this License.  If your rights have been terminated and not
     permanently reinstated, you do not qualify to receive new licenses
     for the same material under section 10.

  9. Acceptance Not Required for Having Copies.

     You are not required to accept this License in order to receive or
     run a copy of the Program.  Ancillary propagation of a covered work
     occurring solely as a consequence of using peer-to-peer
     transmission to receive a copy likewise does not require
     acceptance.  However, nothing other than this License grants you
     permission to propagate or modify any covered work.  These actions
     infringe copyright if you do not accept this License.  Therefore,
     by modifying or propagating a covered work, you indicate your
     acceptance of this License to do so.

  10. Automatic Licensing of Downstream Recipients.

     Each time you convey a covered work, the recipient automatically
     receives a license from the original licensors, to run, modify and
     propagate that work, subject to this License.  You are not
     responsible for enforcing compliance by third parties with this
     License.

     An “entity transaction” is a transaction transferring control of an
     organization, or substantially all assets of one, or subdividing an
     organization, or merging organizations.  If propagation of a
     covered work results from an entity transaction, each party to that
     transaction who receives a copy of the work also receives whatever
     licenses to the work the party’s predecessor in interest had or
     could give under the previous paragraph, plus a right to possession
     of the Corresponding Source of the work from the predecessor in
     interest, if the predecessor has it or can get it with reasonable
     efforts.

     You may not impose any further restrictions on the exercise of the
     rights granted or affirmed under this License.  For example, you
     may not impose a license fee, royalty, or other charge for exercise
     of rights granted under this License, and you may not initiate
     litigation (including a cross-claim or counterclaim in a lawsuit)
     alleging that any patent claim is infringed by making, using,
     selling, offering for sale, or importing the Program or any portion
     of it.

  11. Patents.

     A “contributor” is a copyright holder who authorizes use under this
     License of the Program or a work on which the Program is based.
     The work thus licensed is called the contributor’s “contributor
     version”.

     A contributor’s “essential patent claims” are all patent claims
     owned or controlled by the contributor, whether already acquired or
     hereafter acquired, that would be infringed by some manner,
     permitted by this License, of making, using, or selling its
     contributor version, but do not include claims that would be
     infringed only as a consequence of further modification of the
     contributor version.  For purposes of this definition, “control”
     includes the right to grant patent sublicenses in a manner
     consistent with the requirements of this License.

     Each contributor grants you a non-exclusive, worldwide,
     royalty-free patent license under the contributor’s essential
     patent claims, to make, use, sell, offer for sale, import and
     otherwise run, modify and propagate the contents of its contributor
     version.

     In the following three paragraphs, a “patent license” is any
     express agreement or commitment, however denominated, not to
     enforce a patent (such as an express permission to practice a
     patent or covenant not to sue for patent infringement).  To “grant”
     such a patent license to a party means to make such an agreement or
     commitment not to enforce a patent against the party.

     If you convey a covered work, knowingly relying on a patent
     license, and the Corresponding Source of the work is not available
     for anyone to copy, free of charge and under the terms of this
     License, through a publicly available network server or other
     readily accessible means, then you must either (1) cause the
     Corresponding Source to be so available, or (2) arrange to deprive
     yourself of the benefit of the patent license for this particular
     work, or (3) arrange, in a manner consistent with the requirements
     of this License, to extend the patent license to downstream
     recipients.  “Knowingly relying” means you have actual knowledge
     that, but for the patent license, your conveying the covered work
     in a country, or your recipient’s use of the covered work in a
     country, would infringe one or more identifiable patents in that
     country that you have reason to believe are valid.

     If, pursuant to or in connection with a single transaction or
     arrangement, you convey, or propagate by procuring conveyance of, a
     covered work, and grant a patent license to some of the parties
     receiving the covered work authorizing them to use, propagate,
     modify or convey a specific copy of the covered work, then the
     patent license you grant is automatically extended to all
     recipients of the covered work and works based on it.

     A patent license is “discriminatory” if it does not include within
     the scope of its coverage, prohibits the exercise of, or is
     conditioned on the non-exercise of one or more of the rights that
     are specifically granted under this License.  You may not convey a
     covered work if you are a party to an arrangement with a third
     party that is in the business of distributing software, under which
     you make payment to the third party based on the extent of your
     activity of conveying the work, and under which the third party
     grants, to any of the parties who would receive the covered work
     from you, a discriminatory patent license (a) in connection with
     copies of the covered work conveyed by you (or copies made from
     those copies), or (b) primarily for and in connection with specific
     products or compilations that contain the covered work, unless you
     entered into that arrangement, or that patent license was granted,
     prior to 28 March 2007.

     Nothing in this License shall be construed as excluding or limiting
     any implied license or other defenses to infringement that may
     otherwise be available to you under applicable patent law.

  12. No Surrender of Others’ Freedom.

     If conditions are imposed on you (whether by court order, agreement
     or otherwise) that contradict the conditions of this License, they
     do not excuse you from the conditions of this License.  If you
     cannot convey a covered work so as to satisfy simultaneously your
     obligations under this License and any other pertinent obligations,
     then as a consequence you may not convey it at all.  For example,
     if you agree to terms that obligate you to collect a royalty for
     further conveying from those to whom you convey the Program, the
     only way you could satisfy both those terms and this License would
     be to refrain entirely from conveying the Program.

  13. Use with the GNU Affero General Public License.

     Notwithstanding any other provision of this License, you have
     permission to link or combine any covered work with a work licensed
     under version 3 of the GNU Affero General Public License into a
     single combined work, and to convey the resulting work.  The terms
     of this License will continue to apply to the part which is the
     covered work, but the special requirements of the GNU Affero
     General Public License, section 13, concerning interaction through
     a network will apply to the combination as such.

  14. Revised Versions of this License.

     The Free Software Foundation may publish revised and/or new
     versions of the GNU General Public License from time to time.  Such
     new versions will be similar in spirit to the present version, but
     may differ in detail to address new problems or concerns.

     Each version is given a distinguishing version number.  If the
     Program specifies that a certain numbered version of the GNU
     General Public License “or any later version” applies to it, you
     have the option of following the terms and conditions either of
     that numbered version or of any later version published by the Free
     Software Foundation.  If the Program does not specify a version
     number of the GNU General Public License, you may choose any
     version ever published by the Free Software Foundation.

     If the Program specifies that a proxy can decide which future
     versions of the GNU General Public License can be used, that
     proxy’s public statement of acceptance of a version permanently
     authorizes you to choose that version for the Program.

     Later license versions may give you additional or different
     permissions.  However, no additional obligations are imposed on any
     author or copyright holder as a result of your choosing to follow a
     later version.

  15. Disclaimer of Warranty.

     THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
     APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE
     COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM “AS IS”
     WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,
     INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE
     RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.
     SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL
     NECESSARY SERVICING, REPAIR OR CORRECTION.

  16. Limitation of Liability.

     IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN
     WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES
     AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR
     DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR
     CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE
     THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA
     BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
     PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
     PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF
     THE POSSIBILITY OF SUCH DAMAGES.

  17. Interpretation of Sections 15 and 16.

     If the disclaimer of warranty and limitation of liability provided
     above cannot be given local legal effect according to their terms,
     reviewing courts shall apply local law that most closely
     approximates an absolute waiver of all civil liability in
     connection with the Program, unless a warranty or assumption of
     liability accompanies a copy of the Program in return for a fee.

END OF TERMS AND CONDITIONS
===========================

How to Apply These Terms to Your New Programs
=============================================

If you develop a new program, and you want it to be of the greatest
possible use to the public, the best way to achieve this is to make it
free software which everyone can redistribute and change under these
terms.

   To do so, attach the following notices to the program.  It is safest
to attach them to the start of each source file to most effectively
state the exclusion of warranty; and each file should have at least the
“copyright” line and a pointer to where the full notice is found.

     ONE LINE TO GIVE THE PROGRAM'S NAME AND A BRIEF IDEA OF WHAT IT DOES.
     Copyright (C) YEAR NAME OF AUTHOR

     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation, either version 3 of the License, or (at
     your option) any later version.

     This program is distributed in the hope that it will be useful, but
     WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with this program.  If not, see <http://www.gnu.org/licenses/>.

   Also add information on how to contact you by electronic and paper
mail.

   If the program does terminal interaction, make it output a short
notice like this when it starts in an interactive mode:

     PROGRAM Copyright (C) YEAR NAME OF AUTHOR
     This program comes with ABSOLUTELY NO WARRANTY; for details type ‘show w’.
     This is free software, and you are welcome to redistribute it
     under certain conditions; type ‘show c’ for details.

   The hypothetical commands ‘show w’ and ‘show c’ should show the
appropriate parts of the General Public License.  Of course, your
program’s commands might be different; for a GUI interface, you would
use an “about box”.

   You should also get your employer (if you work as a programmer) or
school, if any, to sign a “copyright disclaimer” for the program, if
necessary.  For more information on this, and how to apply and follow
the GNU GPL, see <http://www.gnu.org/licenses/>.

   The GNU General Public License does not permit incorporating your
program into proprietary programs.  If your program is a subroutine
library, you may consider it more useful to permit linking proprietary
applications with the library.  If this is what you want to do, use the
GNU Lesser General Public License instead of this License.  But first,
please read <http://www.gnu.org/philosophy/why-not-lgpl.html>.


File: emacs-ja.info,  Node: GNU Free Documentation License,  Next: Emacs Invocation,  Prev: Copying,  Up: Top

Appendix B GNU Free Documentation License
*****************************************

                     Version 1.3, 3 November 2008

     Copyright © 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.
     <http://fsf.org/>

     Everyone is permitted to copy and distribute verbatim copies
     of this license document, but changing it is not allowed.

  0. PREAMBLE

     The purpose of this License is to make a manual, textbook, or other
     functional and useful document “free” in the sense of freedom: to
     assure everyone the effective freedom to copy and redistribute it,
     with or without modifying it, either commercially or
     noncommercially.  Secondarily, this License preserves for the
     author and publisher a way to get credit for their work, while not
     being considered responsible for modifications made by others.

     This License is a kind of “copyleft”, which means that derivative
     works of the document must themselves be free in the same sense.
     It complements the GNU General Public License, which is a copyleft
     license designed for free software.

     We have designed this License in order to use it for manuals for
     free software, because free software needs free documentation: a
     free program should come with manuals providing the same freedoms
     that the software does.  But this License is not limited to
     software manuals; it can be used for any textual work, regardless
     of subject matter or whether it is published as a printed book.  We
     recommend this License principally for works whose purpose is
     instruction or reference.

  1. APPLICABILITY AND DEFINITIONS

     This License applies to any manual or other work, in any medium,
     that contains a notice placed by the copyright holder saying it can
     be distributed under the terms of this License.  Such a notice
     grants a world-wide, royalty-free license, unlimited in duration,
     to use that work under the conditions stated herein.  The
     “Document”, below, refers to any such manual or work.  Any member
     of the public is a licensee, and is addressed as “you”.  You accept
     the license if you copy, modify or distribute the work in a way
     requiring permission under copyright law.

     A “Modified Version” of the Document means any work containing the
     Document or a portion of it, either copied verbatim, or with
     modifications and/or translated into another language.

     A “Secondary Section” is a named appendix or a front-matter section
     of the Document that deals exclusively with the relationship of the
     publishers or authors of the Document to the Document’s overall
     subject (or to related matters) and contains nothing that could
     fall directly within that overall subject.  (Thus, if the Document
     is in part a textbook of mathematics, a Secondary Section may not
     explain any mathematics.)  The relationship could be a matter of
     historical connection with the subject or with related matters, or
     of legal, commercial, philosophical, ethical or political position
     regarding them.

     The “Invariant Sections” are certain Secondary Sections whose
     titles are designated, as being those of Invariant Sections, in the
     notice that says that the Document is released under this License.
     If a section does not fit the above definition of Secondary then it
     is not allowed to be designated as Invariant.  The Document may
     contain zero Invariant Sections.  If the Document does not identify
     any Invariant Sections then there are none.

     The “Cover Texts” are certain short passages of text that are
     listed, as Front-Cover Texts or Back-Cover Texts, in the notice
     that says that the Document is released under this License.  A
     Front-Cover Text may be at most 5 words, and a Back-Cover Text may
     be at most 25 words.

     A “Transparent” copy of the Document means a machine-readable copy,
     represented in a format whose specification is available to the
     general public, that is suitable for revising the document
     straightforwardly with generic text editors or (for images composed
     of pixels) generic paint programs or (for drawings) some widely
     available drawing editor, and that is suitable for input to text
     formatters or for automatic translation to a variety of formats
     suitable for input to text formatters.  A copy made in an otherwise
     Transparent file format whose markup, or absence of markup, has
     been arranged to thwart or discourage subsequent modification by
     readers is not Transparent.  An image format is not Transparent if
     used for any substantial amount of text.  A copy that is not
     “Transparent” is called “Opaque”.

     Examples of suitable formats for Transparent copies include plain
     ASCII without markup, Texinfo input format, LaTeX input format,
     SGML or XML using a publicly available DTD, and standard-conforming
     simple HTML, PostScript or PDF designed for human modification.
     Examples of transparent image formats include PNG, XCF and JPG.
     Opaque formats include proprietary formats that can be read and
     edited only by proprietary word processors, SGML or XML for which
     the DTD and/or processing tools are not generally available, and
     the machine-generated HTML, PostScript or PDF produced by some word
     processors for output purposes only.

     The “Title Page” means, for a printed book, the title page itself,
     plus such following pages as are needed to hold, legibly, the
     material this License requires to appear in the title page.  For
     works in formats which do not have any title page as such, “Title
     Page” means the text near the most prominent appearance of the
     work’s title, preceding the beginning of the body of the text.

     The “publisher” means any person or entity that distributes copies
     of the Document to the public.

     A section “Entitled XYZ” means a named subunit of the Document
     whose title either is precisely XYZ or contains XYZ in parentheses
     following text that translates XYZ in another language.  (Here XYZ
     stands for a specific section name mentioned below, such as
     “Acknowledgements”, “Dedications”, “Endorsements”, or “History”.)
     To “Preserve the Title” of such a section when you modify the
     Document means that it remains a section “Entitled XYZ” according
     to this definition.

     The Document may include Warranty Disclaimers next to the notice
     which states that this License applies to the Document.  These
     Warranty Disclaimers are considered to be included by reference in
     this License, but only as regards disclaiming warranties: any other
     implication that these Warranty Disclaimers may have is void and
     has no effect on the meaning of this License.

  2. VERBATIM COPYING

     You may copy and distribute the Document in any medium, either
     commercially or noncommercially, provided that this License, the
     copyright notices, and the license notice saying this License
     applies to the Document are reproduced in all copies, and that you
     add no other conditions whatsoever to those of this License.  You
     may not use technical measures to obstruct or control the reading
     or further copying of the copies you make or distribute.  However,
     you may accept compensation in exchange for copies.  If you
     distribute a large enough number of copies you must also follow the
     conditions in section 3.

     You may also lend copies, under the same conditions stated above,
     and you may publicly display copies.

  3. COPYING IN QUANTITY

     If you publish printed copies (or copies in media that commonly
     have printed covers) of the Document, numbering more than 100, and
     the Document’s license notice requires Cover Texts, you must
     enclose the copies in covers that carry, clearly and legibly, all
     these Cover Texts: Front-Cover Texts on the front cover, and
     Back-Cover Texts on the back cover.  Both covers must also clearly
     and legibly identify you as the publisher of these copies.  The
     front cover must present the full title with all words of the title
     equally prominent and visible.  You may add other material on the
     covers in addition.  Copying with changes limited to the covers, as
     long as they preserve the title of the Document and satisfy these
     conditions, can be treated as verbatim copying in other respects.

     If the required texts for either cover are too voluminous to fit
     legibly, you should put the first ones listed (as many as fit
     reasonably) on the actual cover, and continue the rest onto
     adjacent pages.

     If you publish or distribute Opaque copies of the Document
     numbering more than 100, you must either include a machine-readable
     Transparent copy along with each Opaque copy, or state in or with
     each Opaque copy a computer-network location from which the general
     network-using public has access to download using public-standard
     network protocols a complete Transparent copy of the Document, free
     of added material.  If you use the latter option, you must take
     reasonably prudent steps, when you begin distribution of Opaque
     copies in quantity, to ensure that this Transparent copy will
     remain thus accessible at the stated location until at least one
     year after the last time you distribute an Opaque copy (directly or
     through your agents or retailers) of that edition to the public.

     It is requested, but not required, that you contact the authors of
     the Document well before redistributing any large number of copies,
     to give them a chance to provide you with an updated version of the
     Document.

  4. MODIFICATIONS

     You may copy and distribute a Modified Version of the Document
     under the conditions of sections 2 and 3 above, provided that you
     release the Modified Version under precisely this License, with the
     Modified Version filling the role of the Document, thus licensing
     distribution and modification of the Modified Version to whoever
     possesses a copy of it.  In addition, you must do these things in
     the Modified Version:

       A. Use in the Title Page (and on the covers, if any) a title
          distinct from that of the Document, and from those of previous
          versions (which should, if there were any, be listed in the
          History section of the Document).  You may use the same title
          as a previous version if the original publisher of that
          version gives permission.

       B. List on the Title Page, as authors, one or more persons or
          entities responsible for authorship of the modifications in
          the Modified Version, together with at least five of the
          principal authors of the Document (all of its principal
          authors, if it has fewer than five), unless they release you
          from this requirement.

       C. State on the Title page the name of the publisher of the
          Modified Version, as the publisher.

       D. Preserve all the copyright notices of the Document.

       E. Add an appropriate copyright notice for your modifications
          adjacent to the other copyright notices.

       F. Include, immediately after the copyright notices, a license
          notice giving the public permission to use the Modified
          Version under the terms of this License, in the form shown in
          the Addendum below.

       G. Preserve in that license notice the full lists of Invariant
          Sections and required Cover Texts given in the Document’s
          license notice.

       H. Include an unaltered copy of this License.

       I. Preserve the section Entitled “History”, Preserve its Title,
          and add to it an item stating at least the title, year, new
          authors, and publisher of the Modified Version as given on the
          Title Page.  If there is no section Entitled “History” in the
          Document, create one stating the title, year, authors, and
          publisher of the Document as given on its Title Page, then add
          an item describing the Modified Version as stated in the
          previous sentence.

       J. Preserve the network location, if any, given in the Document
          for public access to a Transparent copy of the Document, and
          likewise the network locations given in the Document for
          previous versions it was based on.  These may be placed in the
          “History” section.  You may omit a network location for a work
          that was published at least four years before the Document
          itself, or if the original publisher of the version it refers
          to gives permission.

       K. For any section Entitled “Acknowledgements” or “Dedications”,
          Preserve the Title of the section, and preserve in the section
          all the substance and tone of each of the contributor
          acknowledgements and/or dedications given therein.

       L. Preserve all the Invariant Sections of the Document, unaltered
          in their text and in their titles.  Section numbers or the
          equivalent are not considered part of the section titles.

       M. Delete any section Entitled “Endorsements”.  Such a section
          may not be included in the Modified Version.

       N. Do not retitle any existing section to be Entitled
          “Endorsements” or to conflict in title with any Invariant
          Section.

       O. Preserve any Warranty Disclaimers.

     If the Modified Version includes new front-matter sections or
     appendices that qualify as Secondary Sections and contain no
     material copied from the Document, you may at your option designate
     some or all of these sections as invariant.  To do this, add their
     titles to the list of Invariant Sections in the Modified Version’s
     license notice.  These titles must be distinct from any other
     section titles.

     You may add a section Entitled “Endorsements”, provided it contains
     nothing but endorsements of your Modified Version by various
     parties—for example, statements of peer review or that the text has
     been approved by an organization as the authoritative definition of
     a standard.

     You may add a passage of up to five words as a Front-Cover Text,
     and a passage of up to 25 words as a Back-Cover Text, to the end of
     the list of Cover Texts in the Modified Version.  Only one passage
     of Front-Cover Text and one of Back-Cover Text may be added by (or
     through arrangements made by) any one entity.  If the Document
     already includes a cover text for the same cover, previously added
     by you or by arrangement made by the same entity you are acting on
     behalf of, you may not add another; but you may replace the old
     one, on explicit permission from the previous publisher that added
     the old one.

     The author(s) and publisher(s) of the Document do not by this
     License give permission to use their names for publicity for or to
     assert or imply endorsement of any Modified Version.

  5. COMBINING DOCUMENTS

     You may combine the Document with other documents released under
     this License, under the terms defined in section 4 above for
     modified versions, provided that you include in the combination all
     of the Invariant Sections of all of the original documents,
     unmodified, and list them all as Invariant Sections of your
     combined work in its license notice, and that you preserve all
     their Warranty Disclaimers.

     The combined work need only contain one copy of this License, and
     multiple identical Invariant Sections may be replaced with a single
     copy.  If there are multiple Invariant Sections with the same name
     but different contents, make the title of each such section unique
     by adding at the end of it, in parentheses, the name of the
     original author or publisher of that section if known, or else a
     unique number.  Make the same adjustment to the section titles in
     the list of Invariant Sections in the license notice of the
     combined work.

     In the combination, you must combine any sections Entitled
     “History” in the various original documents, forming one section
     Entitled “History”; likewise combine any sections Entitled
     “Acknowledgements”, and any sections Entitled “Dedications”.  You
     must delete all sections Entitled “Endorsements.”

  6. COLLECTIONS OF DOCUMENTS

     You may make a collection consisting of the Document and other
     documents released under this License, and replace the individual
     copies of this License in the various documents with a single copy
     that is included in the collection, provided that you follow the
     rules of this License for verbatim copying of each of the documents
     in all other respects.

     You may extract a single document from such a collection, and
     distribute it individually under this License, provided you insert
     a copy of this License into the extracted document, and follow this
     License in all other respects regarding verbatim copying of that
     document.

  7. AGGREGATION WITH INDEPENDENT WORKS

     A compilation of the Document or its derivatives with other
     separate and independent documents or works, in or on a volume of a
     storage or distribution medium, is called an “aggregate” if the
     copyright resulting from the compilation is not used to limit the
     legal rights of the compilation’s users beyond what the individual
     works permit.  When the Document is included in an aggregate, this
     License does not apply to the other works in the aggregate which
     are not themselves derivative works of the Document.

     If the Cover Text requirement of section 3 is applicable to these
     copies of the Document, then if the Document is less than one half
     of the entire aggregate, the Document’s Cover Texts may be placed
     on covers that bracket the Document within the aggregate, or the
     electronic equivalent of covers if the Document is in electronic
     form.  Otherwise they must appear on printed covers that bracket
     the whole aggregate.

  8. TRANSLATION

     Translation is considered a kind of modification, so you may
     distribute translations of the Document under the terms of section
     4.  Replacing Invariant Sections with translations requires special
     permission from their copyright holders, but you may include
     translations of some or all Invariant Sections in addition to the
     original versions of these Invariant Sections.  You may include a
     translation of this License, and all the license notices in the
     Document, and any Warranty Disclaimers, provided that you also
     include the original English version of this License and the
     original versions of those notices and disclaimers.  In case of a
     disagreement between the translation and the original version of
     this License or a notice or disclaimer, the original version will
     prevail.

     If a section in the Document is Entitled “Acknowledgements”,
     “Dedications”, or “History”, the requirement (section 4) to
     Preserve its Title (section 1) will typically require changing the
     actual title.

  9. TERMINATION

     You may not copy, modify, sublicense, or distribute the Document
     except as expressly provided under this License.  Any attempt
     otherwise to copy, modify, sublicense, or distribute it is void,
     and will automatically terminate your rights under this License.

     However, if you cease all violation of this License, then your
     license from a particular copyright holder is reinstated (a)
     provisionally, unless and until the copyright holder explicitly and
     finally terminates your license, and (b) permanently, if the
     copyright holder fails to notify you of the violation by some
     reasonable means prior to 60 days after the cessation.

     Moreover, your license from a particular copyright holder is
     reinstated permanently if the copyright holder notifies you of the
     violation by some reasonable means, this is the first time you have
     received notice of violation of this License (for any work) from
     that copyright holder, and you cure the violation prior to 30 days
     after your receipt of the notice.

     Termination of your rights under this section does not terminate
     the licenses of parties who have received copies or rights from you
     under this License.  If your rights have been terminated and not
     permanently reinstated, receipt of a copy of some or all of the
     same material does not give you any rights to use it.

  10. FUTURE REVISIONS OF THIS LICENSE

     The Free Software Foundation may publish new, revised versions of
     the GNU Free Documentation License from time to time.  Such new
     versions will be similar in spirit to the present version, but may
     differ in detail to address new problems or concerns.  See
     <http://www.gnu.org/copyleft/>.

     Each version of the License is given a distinguishing version
     number.  If the Document specifies that a particular numbered
     version of this License “or any later version” applies to it, you
     have the option of following the terms and conditions either of
     that specified version or of any later version that has been
     published (not as a draft) by the Free Software Foundation.  If the
     Document does not specify a version number of this License, you may
     choose any version ever published (not as a draft) by the Free
     Software Foundation.  If the Document specifies that a proxy can
     decide which future versions of this License can be used, that
     proxy’s public statement of acceptance of a version permanently
     authorizes you to choose that version for the Document.

  11. RELICENSING

     “Massive Multiauthor Collaboration Site” (or “MMC Site”) means any
     World Wide Web server that publishes copyrightable works and also
     provides prominent facilities for anybody to edit those works.  A
     public wiki that anybody can edit is an example of such a server.
     A “Massive Multiauthor Collaboration” (or “MMC”) contained in the
     site means any set of copyrightable works thus published on the MMC
     site.

     “CC-BY-SA” means the Creative Commons Attribution-Share Alike 3.0
     license published by Creative Commons Corporation, a not-for-profit
     corporation with a principal place of business in San Francisco,
     California, as well as future copyleft versions of that license
     published by that same organization.

     “Incorporate” means to publish or republish a Document, in whole or
     in part, as part of another Document.

     An MMC is “eligible for relicensing” if it is licensed under this
     License, and if all works that were first published under this
     License somewhere other than this MMC, and subsequently
     incorporated in whole or in part into the MMC, (1) had no cover
     texts or invariant sections, and (2) were thus incorporated prior
     to November 1, 2008.

     The operator of an MMC Site may republish an MMC contained in the
     site under CC-BY-SA on the same site at any time before August 1,
     2009, provided the MMC is eligible for relicensing.

ADDENDUM: How to use this License for your documents
====================================================

To use this License in a document you have written, include a copy of
the License in the document and put the following copyright and license
notices just after the title page:

       Copyright (C)  YEAR  YOUR NAME.
       Permission is granted to copy, distribute and/or modify this document
       under the terms of the GNU Free Documentation License, Version 1.3
       or any later version published by the Free Software Foundation;
       with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
       Texts.  A copy of the license is included in the section entitled ``GNU
       Free Documentation License''.

   If you have Invariant Sections, Front-Cover Texts and Back-Cover
Texts, replace the “with...Texts.” line with this:

         with the Invariant Sections being LIST THEIR TITLES, with
         the Front-Cover Texts being LIST, and with the Back-Cover Texts
         being LIST.

   If you have Invariant Sections without Cover Texts, or some other
combination of the three, merge those two alternatives to suit the
situation.

   If your document contains nontrivial examples of program code, we
recommend releasing these examples in parallel under your choice of free
software license, such as the GNU General Public License, to permit
their use in free software.


File: emacs-ja.info,  Node: Emacs Invocation,  Next: X Resources,  Prev: GNU Free Documentation License,  Up: Top

Appendix C Emacs呼び出しにたいするコマンドライン引数
****************************************************

Emacsは、Emacsを開始するとき、様々な動作を要求するための、コマンドライン
引数をサポートします。これらのコマンド引数の中には、他のエディターとの互
換性のためのものや、高度な動作を指定するものがあります。通常の編集にこれ
らを使用することはお勧めしません(コマンドラインから既存のEmacsジョブにア
クセスする方法は、*note Emacs Server::を参照してください)。

   ‘-’で始まる引数は“オプションで”、‘+LINENUM’もオプションです。Emacsは
、スタートアップ時に指定されたファイルをvisitします。コマンドラインで最
後に指定されたファイルがカレントバッファーになり、それ以外のファイルも別
のバッファーでvisitされます。ほとんどのプログラムと同様に、特別な引数
‘--’は、それ以降のすべての引数が、(名前が‘-’で始まっていても)オプション
ではなくファイル名であることを指定します。

   Emacsのコマンドオプションは、XウィンドウでEmacsが使用するウィンドウの
サイズや位置、カラーなど、多くのことを指定できます。多くはありませんが、
ファイルのLisp関数をバッチモードで実行するなど、高度な使い方をサポートす
るためのオプションもあります。このチャプターの各セクションでは、利用可能
なオプションを、その目的に合わせて整理して説明します。

   オプションを記述するには2つの方法があります。それは1つの‘-’で始まる短
い形式と、‘--’で始まる長い形式です。たとえば、短い形式が‘-d’で、それに対
応する長い形式は‘--display’です。

   ‘--’の長い形式は、覚えるのが簡単ですが、多くタイプしなければなりませ
ん。しかしオプション名全体を綴る必要はありません。あいまいさのない省略形
で充分です。長いオプションが引数をとる場合、オプション名と、そのオプショ
ンにたいする引数を区切るには、スペースとイコール記号の両方を使用すること
ができます。したがって‘--display sugar-bombs:0.0’と
‘--display=sugar-bombs:0.0’の、どちらでも記述することができます。関連性
が明確になるのでイコール記号を推奨します。以下の表では、常にイコール記号
で記すことにします。

   ほとんどのオプションは、Emacsを初期化する方法や、Emacsセッションのパ
ラメーターを指定します。これらを“初期化オプション(initial options)”と呼
びます。多くはありませんが、ライブラリーのロードや、Lisp関数の呼び出しな
ど、動作を指定するオプションもあります。これらを“動作オプション(action
options)”と呼びます。これらとファイル名を合わせたものを、“動作引数
(action arguments)”と呼びます。動作引数は、変数‘command-line-args’に、文
字列のリストとして保管されます(実際のところ、Emacsスタートアップ時には、
コマンドラインで渡されたすべての引数が、‘command-line-args’に含まれてい
ますが、初期化を行なう間に、初期化引数は処理されるごとにこのリストから削
除され、動作引数だけが残ります)。

* Menu:

* Action Arguments::         ファイルのvisit、ライブラリーのロード、関数を呼び出す引数。
* Initial Options::          Emacsの開始に影響する引数。
* Command Example::          コマンドライン引数の使用例。
* Environment::              Emacsが使用する環境変数。
* Display X::                デフォルトディスプレーの変更と、リモートログインの使用。
* Font X::                   Xでのテキストのフォント選択。
* Colors X::                 ディスプレーカラーの選択。
* Window Size X::            Xでのスタートアップウィンドウのサイズ。
* Borders X::                Xでの内枠ボーダーと外枠ボーダー。
* Title X::                  初期フレームのタイトルの指定。
* Icons X::                  Xで使用するアイコンの選択。
* Misc X::                   その他のディスプレーオプション。


File: emacs-ja.info,  Node: Action Arguments,  Next: Initial Options,  Up: Emacs Invocation

C.1 動作引数
============

以下は動作引数の表です:

‘FILE’
‘--file=FILE’
‘--find-file=FILE’
‘--visit=FILE’
     ‘find-file’を使用して、FILEをvisitします。*note Visiting::を参照し
     てください。

     Emacsスタートアップ時、1つのウィンドウでスタートアップバッファーを
     表示し、FILEをvisitするバッファーを別のウィンドウで表示します(*note
     Windows::を参照してください)。複数のファイル引数を与えた場合、コマ
     ンドラインの最後に指定されたファイルが表示され、他のファイルも
     visitされますが、表示はされません。

     スタートアップバッファーが無効(*note Entering Emacs::を参照してくだ
     さい)の場合、ファイル引数が1つのときは1つのウィンドウだけでFILEが
     visitされ、ファイル引数が2つのときは、Emacsはファイルを2つの別のウ
     ィンドウに表示します。ファイル引数が3つ以上の場合、Emacsは最後に指
     定されたファイルを1つのウィンドウに表示して、別のウィンドウにバッフ
     ァーメニュー(*note Several Buffers::を参照してください)を表示します
     。このバッファーメニューの使用を抑制するには、変数
     ‘inhibit-startup-buffer-menu’を‘t’に変更してください。

‘+LINENUM FILE’
     ‘find-file’を使用してFILEをvisitし、行番号LINENUMに移動します。

‘+LINENUM:COLUMNNUM FILE’
     ‘find-file’を使用してFILEをvisitし、行番号LINENUMに移動して、列番号
     COLUMNNUMにポイントを置きます。

‘-l FILE’
‘--load=FILE’
     関数‘load’で、FILEという名前のLispライブラリーをロードします。
     FILEが絶対ファイル名でない場合、Emacsは最初にカレントディレクトリー
     を探して、次に‘load-path’ (*note Lisp Libraries::を参照してください
     )にリストされたディレクトリーを探します。

     *警告: *前のコマンドライン引数にvisitされたファイルがある場合、カレ
     ントディレクトリーは最後にvisitされたファイルのディレクトリーになり
     ます。

‘-L DIR’
‘--directory=DIR’
     変数‘load-path’にリストされたディレクトリーの前に、ディレクトリー
     DIRを追加します。複数の‘-L’オプションを指定した場合、Emacsはその順
     番を保持します。たとえば‘-L /foo -L /bar’を使用すると、
     ‘load-path’は‘("/foo" "/bar" ...)’となります。DIRが‘:’で始まる場合
     、Emacsは‘:’を削除した残りを、‘load-path’にリストされたディレクトリ
     ーの(前ではなく)後ろに追加します(MS Windowsでは‘:’のかわりに、
     ‘path-separator’の値‘;’を使用します)。

‘-f FUNCTION’
‘--funcall=FUNCTION’
     Lisp関数FUNCTIONを呼び出します。それがインタラクティブな関数(コマン
     ド)の場合、同じ関数をキーシーケンスで呼び出したときのように、引数を
     対話的に読み取ります。そうでない場合は、その関数を引数なしで呼び出
     します。

‘--eval=EXPRESSION’
‘--execute=EXPRESSION’
     Lisp式EXPRESSIONを評価します。

‘--insert=FILE’
     FILEの内容を、コマンドライン引数が処理されるときにカレントのバッフ
     ァーに挿入します。これは通常、‘*scratch*’バッファー(*note Lisp
     Interaction::を参照してください)ですが、コマンドラインの前の引数が
     ファイルをvisitしたりバッファーを切り替えるときは、別のバッファーに
     なるでしょう。このコマンドライン引数の効果は、‘M-x insert-file’が行
     なうのと同様です(*note Misc File Ops::を参照してください)。

‘--kill’
     確認なしでEmacsを終了します。

‘--help’
     利用可能なすべてのオプションがリストされたUsageメッセージをプリント
     してから、正常終了します。

‘--version’
     Emacsのバージョンをプリントしてから、正常終了します。


File: emacs-ja.info,  Node: Initial Options,  Next: Command Example,  Prev: Action Arguments,  Up: Emacs Invocation

C.2 初期化オプション
====================

初期化オプションは、Emacsセッションにたいするパラメーターを指定します。
このセクションでは、より一般的な初期化オプションを説明します。いくつかの
オプションは、厳密には以降のセクションで説明するXウィンドウシステムに関
連したオプションです。

   いくつかの初期化オプションは、初期化ファイルのロードに影響します。
Emacsは通常、‘site-start.el’が存在する場合は最初にそれをロードし、ユーザ
ーの初期化ファイルが存在すれば次にそれをロードして、デフォルト初期化ファ
イル‘default.el’が存在すれば最後にそれをロードします(*note Init File::を
参照してください)。それらのファイルのロードを抑制したり、それらのファイ
ルを別のファイルで置き換えるオプションもあります。

‘-chdir DIRECTORY’
‘--chdir=DIRECTORY’
     他のことを行なう前にまず、カレントディレクトリーをDIRECTORYに変更し
     ます。これはEmacsが停止したのと同じディレクトリーで開始されるように
     、主にXでのセッション管理に使用されます。これによりデスクトップの保
     存と復元が簡単になります。

‘-t DEVICE’
‘--terminal=DEVICE’
     端末の入出力にDEVICEをデバイスとして使用します。このオプションは暗
     に‘--no-window-system’を含みます。

‘-d DISPLAY’
‘--display=DISPLAY’
     Emacs初期フレームを開くために、XウィンドウシステムとDISPLAYという名
     前のディスプレーを使用します。詳細は、*note Display X::を参照してく
     ださい。

‘-nw’
‘--no-window-system’
     環境変数‘DISPLAY’がセットされていても、ウィンドウシステムと直接やり
     とりしません。これはEmacsが、Emacsのすべての表示と出力のために、開
     始された端末を使用することを意味します。

‘-batch’
‘--batch’
     Emacsを“バッチモード(batch mode)”で実行します。バッチモードは、シェ
     ルスクリプトやmakeファイルから、Emacs Lispで記述されたプログラムを
     実行するために使用されます。Lispプログラムを呼び出すには、
     ‘-batch’オプションと併せて、1つ以上の‘-l’、‘-f’、‘--eval’を使用しま
     す(*note Action Arguments::を参照してください)。使用例は、*note
     Command Example::を参照してください。

     バッチモードでは、Emacsは編集されるテキストを表示せず、‘C-z’や
     ‘C-c’のような、標準の端末割り込みが通常の効果をもちます。通常はエコ
     ーエリアにメッセージをプリントするEmacs関数は、かわりに標準出力スト
     リーム(‘stdout’)、または標準エラーストリーム(‘stderr’)にメッセージ
     をプリントします(正確に言うと、‘prin1’、‘princ’、‘print’のような関
     数は‘stdout’にプリントし、‘message’や‘error’は‘stderr’にプリントし
     ます)。通常はミニバッファーからキーボード入力を読み取る関数は、かわ
     りに端末の標準入力ストリーム(‘stdin’)から入力を受け取ります。

     ‘--batch’は暗に‘-q’(初期化ファイルをロードしません)を含みますが、そ
     れでも‘site-start.el’はロードされます。これはすべてのコマンドオプシ
     ョンを処理した後に、Emacsを終了します。それに加えて、自動保存が明示
     的に要求された場合を除き、自動保存を無効にします。また自動保存が要
     求されていない場合は、ファイルの保存での‘fsync’システムコールを省略
     します。

‘--script FILE’
     ‘--batch’と同様に、Emacsをバッチモードで実行してから、FILEのLispコ
     ードを読み込み実行します。

     このオプションは通常、Emacsを実行する実行可能スクリプトの中で使用し
     ます。これは以下のテキストを最初の行に記述します:

          #!/usr/bin/emacs --script

     これは‘--script’でEmacsを呼び出し、スクリプトファイル名はFILEです。
     それからEmacs Lispは最初の行の‘#!’をコメント区切りとして扱います。

‘-q’
‘--no-init-file’
     初期化ファイルをロードしません(*note Init File::を参照してください
     )。Emacsがこのオプションで呼び出された場合、Customize機能は、保存の
     オプションを受け付けません(*note Easy Customization::を参照してくだ
     さい)。このオプションは‘site-start.el’のロードは無効にしません。

‘--no-site-file’
     ‘site-start.el’をロードしません(*note Init File::を参照してください
     )。‘-Q’オプションもこれを行ないますが、‘-q’のような他のオプションは
     これを行ないません。

‘--no-site-lisp’
     ‘load-path’に‘site-lisp’ディレクトリーを含めません(*note Init
     File::を参照してください)。‘-Q’オプションもこれを行ないます。

‘--no-splash’
     スタートアップ画面を表示しません。初期化ファイルで変数
     ‘inhibit-startup-screen’を非‘nil’にセットしても、この効果を得ること
     ができます(*note Entering Emacs::を参照してください)。

‘-Q’
‘--quick’
     最小のカスタマイズでEmacsを開始します。これは‘-q’、
     ‘--no-site-file’、‘--no-site-lisp’、‘--no-splash’を一緒に使用したの
     と同様です。これは‘inhibit-x-resources’を‘t’にセットすることにより
     、EmacsがXリソースの処理を行なうことも停止します(*note Resources::を
     参照してください)。

‘-daemon’
‘--daemon’
     Emacsをデーモンとして開始します。これはフレームをオープンせずに、ま
     ずEmacsを開始した後、Emacsサーバーを開始してから、端末との接続を切
     断します。‘emacsclient’コマンドを使用して、編集のためにEmacsに接続
     できます。デーモンとしてのEmacsの使用についての情報は、*note Emacs
     Server::を参照してください。

‘-daemon=SERVER-NAME’
     バックグラウンドでEmacsをデーモンとして開始して、サーバー名には
     SERVER-NAMEを使用します。

‘--no-desktop’
     保存されたデスクトップをリロードしません。*note Saving Emacs
     Sessions::を参照してください。

‘-u USER’
‘--user=USER’
     あなたの初期化ファイルのかわりに、USERの初期化ファイルをロードしま
     す。(1)

‘--debug-init’
     initファイルのエラーにたいして、Emacs Lispデバッガーを有効にします
     。*note Entering the Debugger on an Error: (elisp)Error Debugging.を
     参照してください。

   ---------- Footnotes ----------

   (1) このオプションはMS-Windowsでは効果がありません。


File: emacs-ja.info,  Node: Command Example,  Next: Environment,  Prev: Initial Options,  Up: Emacs Invocation

C.3 コマンド引数の例
====================

以下は、引数とオプションを指定してEmacsを使用する例です。ここでは、ロー
ドすることにより、Cプログラムをvisitしたカレントバッファーにたいして、何
か便利な操作を行なう、‘hack-c.el’という名前のLispプログラムファイルがあ
るとしましょう。

     emacs --batch foo.c -l hack-c -f save-buffer >& log

これは‘foo.c’をvisitしてから、‘hack-c.el’(これはvisitされたファイルに何
らかの変更を行ないます)をロードし、‘foo.c’を保存(‘save-buffer’は‘C-x
C-s’にバインドされた関数であることに注意してください)した後に、
(‘--batch’オプションなので)Emacsを終了してシェルに戻ります。‘--batch’は
、出力を‘log’にリダイレクトしても問題がないことが保証されます。なぜなら
Emacsは作業するためのディスプレー端末をもたないと想定されるからです。


File: emacs-ja.info,  Node: Environment,  Next: Display X,  Prev: Command Example,  Up: Emacs Invocation

C.4 環境変数
============

“環境(environment)”とは、オペレーティングシステムの機能です。これは値と
名前をもつ変数のコレクションからなります。それぞれの変数は“環境変数
(environment variable)”と呼ばれます。環境変数名は大文字小文字を区別し、
慣習では大文字だけを使用します。値はすべてテキスト文字列です。

   何が環境を便利にしているかというと、それはサブプロセスが親プロセスか
ら自動的に環境を継承できることです。これはログインシェルで環境変数をセッ
トして、実行するすべて(Emacsを含む)のプログラムが、それを参照できること
を意味します。Emacsのサブプロセス(シェル、コンパイラー、バージョンコント
ロールシステムなど)も、Emacsから環境を継承します。

   Emacsの中では、コマンド‘M-x getenv’は環境変数の名前を読み取って、その
値をエコーエリアにプリントします。‘M-x setenv’はEmacs環境で変数をセット
し、‘C-u M-x setenv’は変数を削除します(‘$’による環境変数の置き換えは、フ
ァイル名にたいする値と同様に機能します。*note File Names with $::を参照
してください)。変数‘initial-environment’は、Emacsにより継承された初期環
境を保管します。

   Emacsの外で環境変数をセットする方法は、オペレーティングシステム、特に
使用しているシェルに依存します。たとえば以下はBashを使用して、環境変数
‘ORGANIZATION’に‘not very much’をセットする例です:

     export ORGANIZATION="not very much"

以下はcshまたはtcshでこれを行なう方法の例です:

     setenv ORGANIZATION "not very much"

   EmacsがXウィンドウシステムを使用している場合、Xを制御するさまざまな環
境変数は、Emacsも同様に制御します。詳細は、Xのドキュメントを参照してくだ
さい。

* Menu:

* General Variables::        すべてのバージョンのEmacsが使用する環境変数。
* Misc Variables::           システム固有の変数。
* MS-Windows Registry::      MS-Windowsでの環境の代用。


File: emacs-ja.info,  Node: General Variables,  Next: Misc Variables,  Up: Environment

C.4.1 一般的な変数
------------------

以下は、Emacsで特別な意味をもつ環境変数の、アルファベット順のリストです
。これらの変数のほとんどは、他のプログラムでも使用されます。Emacsはこれ
らの環境変数がセットされていることを要求しませんが、セットされている場合
はその値を使用します。

‘CDPATH’
     相対ディレクトリー名を指定したときに、指定したディレクトリーを検索
     するために、‘cd’コマンドにより使用されます。
‘DBUS_SESSION_BUS_ADDRESS’
     D-BusサポートつきでEmacsがコンパイルされている場合、D-Busにより使用
     されます。通常これを変更する必要はありません。
     ‘unix:path=/dev/null’のようなダミーアドレスをセットすることにより、
     D-Busセッションバスとの接続を抑止し、同様にD-Busセッションバスがま
     だ実行されていないときは自動的に開始します。
‘EMACSDATA’
     Emacsに含まれるアーキテクチャーに独立なファイルのディレクトリーです
     。これは変数‘data-directory’の初期化に使用されます。
‘EMACSDOC’
     ドキュメント文字列ファイルのディレクトリーで、Lisp変数
     ‘doc-directory’の初期化に使用されます。
‘EMACSLOADPATH’
     Emacs Lispファイルを検索する、コロンで区切られたディレクトリーのリ
     スト(1)です。セットされている場合は、変数‘load-path’の初期値です
     (*note Lisp Libraries::を参照してください)。空の要素は、
     ‘load-path’のデフォルト値を意味します。たとえば
     ‘EMACSLOADPATH="/tmp:"’を使用すると、デフォルトの‘load-path’の前に
     ‘/tmp’を追加します。リストの中間に空の要素を指定するには、
     ‘EMACSLOADPATH="/tmp::/foo"’のように、2つのコロンを続けます。
‘EMACSPATH’
     実行可能ファイルを検索するための、コロンで区切られたディレクトリー
     のリストです。セットされている場合、Emacsは変数‘exec-path’(*note
     Shell::を参照してください)を初期化するときに、‘PATH’(以下参照)に加
     えてこれをを使用します。
‘EMAIL’
     メールアドレスです。Lisp変数‘user-mail-address’を初期化するために使
     用されます。Emacsのメールインターフェースは、送信メッセージの
     ‘From’ヘッダーにこれを使用します(*note Mail Headers::を参照してくだ
     さい)。
‘ESHELL’
     シェルモードで、環境変数‘SHELL’をオーバーライドするために使用されま
     す(*note Interactive Shell::を参照してください)。
‘HISTFILE’
     ログインしている間のシェルコマンドが保存されるファイルの名前です。
     この変数のデフォルトは、Bashを使用している場合は‘~/.bash_history’、
     kshのときは‘~/.sh_history’、それ以外では‘~/.history’です。
‘HOME’
     ディレクトリーツリー上で、あなたのファイルがある場所です。チルダ
     (‘~’)で始まるファイル名の展開に使用されます。MS-DOSでは、この変数の
     デフォルトはEmacsが開始されたディレクトリーで、そのディレクトリー名
     が‘/bin’で終わる場合、‘/bin’は取り除かれます。Windowsでは、‘HOME’の
     デフォルト値は、ユーザープロファイルディレクトリーの‘Application
     Data’サブディレクトリー(つまり通常は‘C:/Documents and
     Settings/USERNAME/Application Data’。USERNAMEはユーザー名)ですが、
     後方互換のため、‘C:/’に‘.emacs’がある場合は、かわりに‘C:/’がデフォ
     ルト値になります。
‘HOSTNAME’
     Emacsが実行されているホストの名前です。
‘INFOPATH’
     コロンで区切られた、Infoファイルを検索するディレクトリーのリストで
     す。
‘LC_ALL’
‘LC_COLLATE’
‘LC_CTYPE’
‘LC_MESSAGES’
‘LC_MONETARY’
‘LC_NUMERIC’
‘LC_TIME’
‘LANG’
     そのユーザーの優先されるlocaleです。localeには6つのカテゴリーがあり
     、それぞれ環境変数で指定されます。ソートは‘LC_COLLATE’、文字エンコ
     ーディングは‘LC_CTYPE’、システムメッセージは‘LC_MESSAGES’、通貨形式
     は‘LC_MONETARY’、数字は‘LC_NUMERIC’、日時は‘LC_TIME’でlocaleを指定
     します。これらの変数の1つがセットされていない場合、そのカテゴリーの
     デフォルトは環境変数‘LANG’の値、‘LANG’がセットされていない場合は‘C’
     localeになります。しかし‘LC_ALL’が指定された場合、これは他のすべて
     のlocale環境変数のセッティングをオーバーライドします。

     MS-Windowsでは、Emacsを開始したとき環境で‘LANG’がまだセットされてい
     ない場合、Emacsはシステムワイドなデフォルト言語にもとづき、‘LANG’を
     セットします。MS-Windowsのいくつかのバージョンでは、これはコントロ
     ールパネルの‘Regional Settings’でセットできます。

     ‘LC_CTYPE’カテゴリーの値は、デフォルトの言語環境(language
     environment)とコーディングシステム(coding system)を選択するために、
     ‘locale-language-names’、‘locale-charset-language-names’、
     ‘locale-preferred-coding-systems’のエントリーにたいしてマッチされま
     す。*note Language Environments::を参照してください。
‘LOGNAME’
     ユーザーのログイン名です。‘USER’も参照してください。
‘MAIL’
     システムのメールinbox名です。
‘MH’
     mhシステムのセットアップファイル名です。*note MH-E: (mh-e)Top.を参
     照してください。
‘NAME’
     あなたの現実世界での名前です。これは変数‘user-full-name’を初期化す
     るために使用されます(*note Mail Headers::を参照してください)。
‘NNTPSERVER’
     ニュースサーバーの名前です。Gnusパッケージで使用されます。
‘ORGANIZATION’
     あなたが属する組織の名前です。Gnusパッケージで、ポストの
     ‘Organization:’ヘッダーをセットするために使用されます。
‘PATH’
     コロンで区切られた、実行可能ファイルを含むディレクトリーのリストで
     す。これは変数‘exec-path’を初期化するために使用されます(*note
     Shell::を参照してください)。
‘PWD’
     セットされている場合、これはEmacsが開始されたときのデフォルトディレ
     クトリーになるはずです。
‘REPLYTO’
     セットされている場合は、変数‘mail-default-reply-to’の初期値になりま
     す(*note Mail Headers::を参照してください)。
‘SAVEDIR’
     新しいアーティクルがデフォルトで保存されるディレクトリーの名前です
     。Gnusパッケージにより使用されます。
‘SHELL’
     Emacsの中からプログラムのパースや実行に使用されるインタープリターの
     名前です。
‘SMTPSERVER’
     送信メールサーバーの名前です。これは変数‘smtpmail-smtp-server’を初
     期化するために使用されます(*note Mail Sending::を参照してください
     )。
‘TERM’
     Emacsが使用する端末タイプです。Emacsがバッチモードで実行されていな
     いとき、この変数はセットされていなければなりません。MS-DOSでは、デ
     フォルトは‘internal’で、これはその機種固有のディスプレーを扱う、ビ
     ルトインの端末エミュレーションを指定します。
‘TERMCAP’
     ‘TERM’で指定された端末をどのようにプログラムするかを記述する、
     termcapライブラリーファイルの名前です。デフォルトは‘/etc/termcap’で
     す。
‘TMPDIR’
‘TMP’
‘TEMP’
     これらの環境変数は、変数‘temporary-file-directory’を初期化するため
     に使用されます。これは一時ファイルを置く場所を指定します(*note
     Backup::を参照してください)。Emacsは最初に‘TMPDIR’の使用を試みます
     。これがセットされていない場合、通常Emacsは‘/tmp’にフォールバックし
     ます。しかしMS-WindowsとMS-DOSでは、かわりに‘TMP’、次に‘TEMP’、最後
     に‘c:/temp’にフォールバックします。
‘TZ’
     これはカレントタイムゾーン(もしかしたらサマータイムの情報も)を指定
     します。MS-DOSでは、Emacsを開始したときの環境で‘TZ’がセットされてい
     ない場合、EmacsはDOSが返す国コードにたいして、適切なデフォルト値を
     定義します。MS-Windowsでは、Emacsは‘TZ’を使用しません。
‘USER’
     ユーザーのログイン名です。‘LOGNAME’も参照してください。MS-DOSでは、
     デフォルトは‘root’です。
‘VERSION_CONTROL’
     変数‘version-control’の初期化に使用されます(*note Backup Names::を
     参照してください)。

   ---------- Footnotes ----------

   (1) これ以降、“コロンで区切られたディレクトリーのリスト”という場合は
、UnixおよびGNU/Linuxシステムの場合を指します。MS-DOSおよびMS-Windowsで
は、DOS/Windowsファイル名にはドライブ文字の後のコロンが含まれるので、か
わりにセミコロンでディレクトリーが区切られます。


File: emacs-ja.info,  Node: Misc Variables,  Next: MS-Windows Registry,  Prev: General Variables,  Up: Environment

C.4.2 その他の変数
------------------

これらの変数は、特定の設定だけにたいして使用されます:

‘COMSPEC’
     MS-DOSとMS-Windowsで、バッチファイルとシェルの内部コマンドを呼び出
     すときに使用する、コマンドインタープリターの名前です。MS-DOSでは、
     環境変数‘SHELL’のデフォルト値のためにも使用されます。

‘NAME’
     MS-DOSで、この変数は変数‘USER’のデフォルト値として使用されます。

‘EMACSTEST’
     MS-DOSで、内部端末エミュレーターの操作ログに使用するファイルを指定
     します。この機能はバグレポートを送るときに便利です。

‘EMACSCOLORS’
     MS-DOSで、スクリーンカラーを指定します。Emacsは開始時の数瞬、デフォ
     ルトカラーを表示するので、それらの指定にこの方法が便利です。

     この変数の値は2文字のエンコーディングで指定し、それぞれデフォルトフ
     ェイスにたいして、1文字目はフォアグラウンドカラー、2文字目はバック
     グラウンドカラーを指定します。それぞれの文字は、標準のPCテキストモ
     ードディスプレーのカラーを記述する、16進コードを指定します。たとえ
     ばlight grayの背景色でblueのテキストを得たい場合は、
     ‘EMACSCOLORS=17’を指定します。ここで1はカラーblue、7はカラーlight
     grayを指定しています。

     PCディスプレーは通常、8色のバックグラウンドカラーだけをサポートしま
     す。しかしバックグラウンドカラーにたいして、16色すべてを使用できる
     DOSディスプレーにモードを切り替えるので、実際には4ビットのバックグ
     ラウンドカラーすべてが使用されます。

‘PRELOAD_WINSOCK’
     MS-Windowsでこの変数をセットしている場合、Emacsは開始時に、最初に要
     求されたときまで待たずに、ネットワークライブラリーのロードと初期化
     を行ないます。

‘emacs_dir’
     MS-Windowsでは、‘emacs_dir’は特別な環境変数で、これはEmacsがインス
     トールされたディレクトリーのフルパスを指します。Emacsが標準的なディ
     レクトリー構造にインストールされた場合、この変数の値は自動的に計算
     されます。他の環境変数とは異なり、これは開始時にEmacsによりオーバー
     ライドされるので、標準的なインストールをした場合には、あなた自身が
     この変数のセッティングを使用することは、あまりないでしょう。
     ‘EMACSLOADPATH’のような他の環境変数をセットするとき、絶対パスをハー
     ドコーディングするより、‘emacs_dir’を使う法が便利だと気づくでしょう
     。これにより複数バージョンのEmacsが、同じ環境変数のセッティングを共
     有することが可能になり、環境やレジストリーのセッティングを変更せず
     に、Emacsのインストールディレクトリーを変更できるようになります。


File: emacs-ja.info,  Node: MS-Windows Registry,  Prev: Misc Variables,  Up: Environment

C.4.3 MS-Windowsのシステムレジストリー
--------------------------------------

MS-Windowsでは、インストールプログラム‘addpm.exe’が、システムレジストリ
ーの‘HKEY_LOCAL_MACHINE’セクションの、‘/Software/GNU/Emacs’の下の
‘emacs_dir’、‘EMACSLOADPATH’、‘EMACSDATA’、‘EMACSPATH’、‘EMACSDOC’、
‘SHELL’、‘TERM’の値を追加します。これを行なうのは、異なるバージョンの
Windowsにたいして環境変数をセットする、標準的な場所がないからです。最近
のバージョンのEmacsでは、‘addpm.exe’の実行は絶対に必要ではなくなりました
が、古いバージョンからアップグレードする場合、‘addpm.exe’は以前のインス
トールから、(おそらく最新のEmacsと互換性がない)古いレジストリーエントリ
ーを取得しないことを保証します。

   Emacsを開始したときは、環境のチェックと同様に、システムレジストリーの
、これらの変数と‘HOME’、‘LANG’、‘PRELOAD_WINSOCK’もチェックします。

   これらの変数の値を決定するために、Emacsは次の手順にしたがいます。最初
に環境がチェックされます。そこで変数が見つからない場合、Emacsは
‘/Software/GNU/Emacs’のレジストリーキーを名前で探します。最初にレジスト
リーの‘HKEY_CURRENT_USER’セクション、そこで見つからなければ、
‘HKEY_LOCAL_MACHINE’セクションを探します。それでもなおEmacsが値を決定で
きない場合、コンパイルされたときのデフォルトが使用されます。

   上記の環境変数に加えて、‘/Software/GNU/Emacs’のレジストリーキーで、
Xに属する‘.Xdefaults’ファイル(*note X Resources::)のセッティングの多くを
追加することもできます。


File: emacs-ja.info,  Node: Display X,  Next: Font X,  Prev: Environment,  Up: Emacs Invocation

C.5 ディスプレー名の指定
========================

環境変数‘DISPLAY’は、Emacsを含むすべてのXクライアントに、ウィンドウをど
こに表示するかを指定します。通常の状況では、この変数の値は、Xサーバーを
開始してローカルでジョブを実行したとき、デフォルトにセットされます。ディ
スプレーを自分で指定することもできます。これを行なう理由の1つは、他のシ
ステムにログインして、そこでEmacsを実行し、ウィンドウはローカル端末のウ
ィンドウに表示させたい場合です。

   ‘DISPLAY’は、‘HOST:DISPLAY.SCREEN’という構文をもちます。ここでHOSTは
Xウィンドウシステムのサーバー機のホスト名、DISPLAYは、あなたのサーバー
(Xサーバー)を、同一機種上の他のサーバーと区別するために任意に割り当てら
れる数字、そしてSCREENフィールドは、Xサーバーが複数の端末スクリーンを制
御することを可能にします。ピリオドとSCREENフィールドはオプションです。
SCREENが含まれる場合、通常は0です。

   たとえば、あなたのホスト名が‘glasperle’で、あなたのサーバーが設定にリ
ストされた最初の(もしかしたら唯一の)サーバーの場合、‘DISPLAY’は
‘glasperle:0.0’になります。

   Emacsを実行するとき、変数‘DISPLAY’を変更するか、オプション‘-d
DISPLAY’または‘--display=DISPLAY’で、明示的にディスプレーを指定できます
。以下は例です:

     emacs --display=glasperle:0 &

   ‘-nw’オプションで、Xウィンドウシステムの使用を抑止できます。その場合
、Emacsはディスプレーとして制御テキスト端末を使用します。*note Initial
Options::を参照してください。

   セキュリティーの規制により、リモートシステムのプログラムが、ローカル
システムで表示を行なうのを禁ずることがあります。この場合、Emacsは以下の
ようなメッセージを出力します:

     Xlib:  connection to "glasperle:0.0" refused by server

ローカル機で‘xhost’コマンドを使用することにより、リモート機からアクセス
する権限を与えれば、この問題を解決できるでしょう。


File: emacs-ja.info,  Node: Font X,  Next: Colors X,  Prev: Display X,  Up: Emacs Invocation

C.6 フォント指定オプション
==========================

デフォルトのフォントを指定するために、コマンドラインオプション‘-fn
FONT’(または‘--font’。これは‘-fn’のエイリアスです)を使用できます。

‘-fn FONT’
‘--font=FONT’
     FONTをデフォルトフォントとして使用します。

   コマンドラインでフォント名をEmacsに渡す場合、フォント名にシェルが特別
に扱う文字(たとえばスペース)が含まれる場合は、クォーテーションマークで囲
んで“クォート”する必要があるでしょう。たとえば:

     emacs -fn "DejaVu Sans Mono-12"

   フォント名やデフォルトフォントを指定する別の方法についての詳細は、
*note Fonts::を参照してください。


File: emacs-ja.info,  Node: Colors X,  Next: Window Size X,  Prev: Font X,  Up: Emacs Invocation

C.7 ウィンドウカラーオプション
==============================

Emacsディスプレーのさまざまな場所で使用するカラーを指定するために、以下
のコマンドラインオプションを使用できます。カラーは、カラーネーム(color
names)か、RGBトリプレット(RGB triplets)のどちらかを使用して、指定します
。

‘-fg COLOR’
‘--foreground-color=COLOR’
     フォアグラウンドカラーを指定します。‘default’フェイス(*note
     Faces::を参照してください)で指定されたカラーをオーバーライドします
     。
‘-bg COLOR’
‘--background-color=COLOR’
     バックグラウンドカラーを指定します。‘default’フェイスで指定されたカ
     ラーをオーバーライドします。
‘-bd COLOR’
‘--border-color=COLOR’
     Xウィンドウのボーダーカラーを指定します。EmacsがGTK+サポートつきで
     ンパイルされいてる場合、効果はありません。
‘-cr COLOR’
‘--cursor-color=COLOR’
     ポイントがある位置を示すEmacsのカーソルカラーを指定します。
‘-ms COLOR’
‘--mouse-color=COLOR’
     Emacsウィンドウにマウスがあるときの、マウスカーソルカラーを指定しま
     す。
‘-r’
‘-rv’
‘--reverse-video’
     フォアグラウンドカラーとバックグラウンドカラーを入れ替えて、反転表
     示します。
‘--color=MODE’
     Emacsをテキスト端末で実行するときの、“カラーサポートモード(color
     support mode)”をセットします。その文字端末の‘terminfo’データベース
     または‘termcap’で示される、いくつかのサポートされたカラーをオーバー
     ライドします。パラメーターMODEには、以下の1つを指定できます:
     ‘never’
     ‘no’
          端末の能力がカラーをサポートすると指定していても、カラーを使用
          しません。
     ‘default’
     ‘auto’
          ‘--color’を指定しないときと同じです。Emacsは開始時に端末がカラ
          ーをサポートするか検知して、もしサポートされていれば、カラーデ
          ィスプレーをオンに切り替えます。
     ‘always’
     ‘yes’
     ‘ansi8’
          無条件にカラーサポートをオンに切り替えて、標準的な8カラーにた
          いするANSIエスケープシーケンスによるカラーコマンドを使用します
          。
     ‘NUM’
          NUM個のカラーにたいするカラーモードを使用します。NUMが-1の場合
          、カラーサポートをオフに切り替えます(‘never’と同じです)。0の場
          合、この端末にたいするデフォルトのカラーサポートを使用します
          (‘auto’と同じです)。そうでない場合、NUM個のカラーにたいする適
          切な標準モードを使用します。端末の能力により、NUMの値に応じて
          、Emacsは8色、16色、88色、256色のカラーモードに切り替えること
          ができるでしょう。NUMカラーをサポートするモードが存在しない場
          合、EmacsはあたかもNUMに0が指定された場合のように、その端末の
          デフォルトのカラーサポートを使用します。
     MODEが省略された場合のデフォルトは、ANSI8です。

   たとえばcoralのマウスカーソルと、slate blueのテキストカーソルを使用す
るには、以下のように入力します:

     emacs -ms coral -cr 'slate blue' &

   ‘-rv’オプションを指定するか、Xリソースの‘reverseVideo’で、フォアグラ
ウンドとバックグラウンドのカラーを反転できます。

   ‘-fg’、‘-bg’、‘-rv’オプションの機能は、テキスト端末でも、グラフィカル
なディスプレーと同様です。


File: emacs-ja.info,  Node: Window Size X,  Next: Borders X,  Prev: Colors X,  Up: Emacs Invocation

C.8 ウィンドウのサイズと位置にたいするオプション
================================================

以下は、Emacsの初期フレームのサイズと位置を指定する、コマンドラインオプ
ションのリストです:

‘-g WIDTHxHEIGHT[{+-}XOFFSET{+-}YOFFSET]]’
‘--geometry=WIDTHxHEIGHT[{+-}XOFFSET{+-}YOFFSET]]’
     サイズWIDTHとHEIGHT(文字の列数と行数)、および位置XOFFSETと
     YOFFSET(ピクセル)を指定します。パラメーターWIDTHとHEIGHTはすべての
     フレームに適用されますが、XOFFSETとYOFFSETは初期フレームだけに適用
     されます。

‘-fs’
‘--fullscreen’
     スクリーンのサイズになるように、幅と高さを指定します。通常は、ウィ
     ンドウマネージャーによる装飾は表示されません(Emacsを起動した後に、
     <F11> ‘toggle-frame-fullscreen’を使用して、この状態を切り替えること
     ができます)。

‘-mm’
‘--maximized’
     Emacsのフレームが最大化されるよう指定します。これは通常、そのフレー
     ムがウィンドウマネージャーによる装飾をもつことを意味します(Emacsを
     起動した後に、‘M-F10’ ‘toggle-frame-maximized’を使用して、この状態
     を切り替えることができます)。

‘-fh’
‘--fullheight’
     高さがスクリーンの高さになるように指定します。

‘-fw’
‘--fullwidth’
     幅がスクリーンと同じ幅になるように指定します。

‘--geometry’オプションでは、‘{+-}’は、プラス記号かマイナス記号のどちらか
を意味します。XOFFSETの前のプラス記号はスクリーンの左端からの距離、マイ
ナス記号は右端からの距離を意味します。YOFFSETの前のプラス記号はスクリー
ンの上端からの距離、マイナス記号は下端からの距離を意味します。XOFFSETと
YOFFSETの値自体に正または負の値を指定できますが、それはこれらの意味を変
更するものではなく、方向だけを変更します。

   Emacsは、‘xterm’がジオメトリーを解釈するのと同じ単位を使用します。
WIDTHとHEIGHTは文字で数えられるので、大きなフォントは、小さなフォントよ
り大きなフレームを作成します(プロポーショナルフォントを指定した場合、
Emacsは幅の単位として、そのプロポーショナルフォントの最大幅を使用します
)。XOFFSETとYOFFSETはピクセルで数えます。

   ジオメトリー指定で、すべてのフィールドを指定する必要はありません。
XOFFSETとYOFFSETの両方を省略した場合、ウィンドウマネージャーがEmacsフレ
ームをどこに配置するかを決定するか、もしかしたらマウスでその場所を指定で
きるかもしれません。たとえば‘164x55’は、ウィンドウの幅が164(通常のウィン
ドウを横に2つ並べられる幅)で、55行分の高さを指定します。

   デフォルトのフレーム幅は80文字で、デフォルトの高さは40行です。幅と高
さの、どちらか一方、または両方を省略できます。ジオメトリーが整数で開始さ
れる場合、Emacsはそれを幅と解釈します。ジオメトリーの開始が‘x’でその後に
整数が続く場合、Emacsはそれを高さと解釈します。したがって‘81’は幅だけを
指定し、‘x45’は高さだけを指定します。

   ‘+’か‘-’で開始した場合、それはオフセットを示し、幅と高さの両方のサイ
ズが省略されたことを意味します。したがって‘-3’はXOFFSETだけを指定します
(オフセットを1つだけ与えたとき、それは常にXOFFSETになります)。‘+3-3’は
XOFFSETとYOFFSETの両方を指定し、フレームをスクリーンの左下に配置します。

   Xリソースファイル(*note Resources::を参照してください)で、任意または
すべてのフィールドにたいするデフォルトを指定できます。それらにたいしてフ
ィールドを選択して、‘--geometry’オプションでオーバーライドできます。

   モードラインとエコーエリアはフレームの2行を占めるので、初期のテキスト
ウィンドウの高さは、ジオメトリーで指定した高さより、2つ少なくなります。
非X-toolkitバージョンのEmacsでは、指定した数から、メニューバーの占める
1行が引かれます。しかしX-toolkitバージョンでは、メニューバーは付加的で、
指定された高さにたいして数えられません。ツールバーがある場合も、それは付
加的です。

   メニューバーやツールバーを有効または無効にすることにより、通常のテキ
ストが利用できるスペースが変わります。したがって、Emacsがツールバーつき
(デフォルト)で開始しされ、ツールバーがあることを前提にジオメトリー指定を
処理して、それを初期化ファイルでツールバーを無効にしていた場合、あなたが
指定したのと異なるフレームジオメトリーになるでしょう。ツールバーがないサ
イズを得るには、Xリソースで“no tool bar”を指定します(*note Table of
Resources::を参照してください)。そうすれば、Emacsは指定されたジオメトリ
ーを処理するときに、ツールバーがないことを知ることができます。

   ‘--fullscreen’、‘--maximized’、‘--fullwidth’、‘--fullheight’のどれか
1つを使用するとき、フレームが本当に“最大化”または“フルスクリーン”に見え
るようにするために、変数‘frame-resize-pixelwise’を非‘nil’値にすることを
要求するウィンドウマネージャーがいくつかあります。

   位置にたいする、プログラム指定とユーザー指定の両方を無視するようにで
きるオプションをもつウィンドウマネージャーがいくつかあります。これらのオ
プションがセットされている場合、Emacsはウィンドウを正しく配置するのに失
敗します。


File: emacs-ja.info,  Node: Borders X,  Next: Title X,  Prev: Window Size X,  Up: Emacs Invocation

C.9 内枠ボーダーと外枠ボーダー
==============================

Emacsフレームは内枠ボーダー(internal border)と、外枠ボーダー(external
border)をもちます。内枠ボーダーはフレームのテキスト部分の周囲にある、バ
ックグラウンドカラーによる縁取りです。内枠ボーダーはEmacs自身が描画しま
す。外枠ボーダーはフレームの外側にあり、ウィンドウマネージャーにより追加
されます。使用しているウィンドウマネージャーにより、ウィンドウを移動させ
たりアイコン化する様々なボックスを含む場合があります。

‘-ib WIDTH’
‘--internal-border=WIDTH’
     内枠ボーダー(テキストと外枠ボーダーの間)の幅に、ピクセル単位で
     WIDTHを指定します。

‘-bw WIDTH’
‘--border-width=WIDTH’
     外枠ボーダーの幅に、ピクセル単位でWIDTHを指定します。

   フレームのサイズを指定するとき、ボーダーは含まれません。フレームの位
置は、外枠ボーダーの縁端から測られます。

   ピクセル幅Nの内枠ボーダーを指定するには、‘-ib N’オプションを使用しま
す。デフォルトは1です。外枠ボーダーの幅を指定するには、‘-bw N’を使用しま
す(ウィンドウマネージャーはその指定に注意を払わないかもしれませんが)。外
枠ボーダーのデフォルト幅は2です。


File: emacs-ja.info,  Node: Title X,  Next: Icons X,  Prev: Borders X,  Up: Emacs Invocation

C.10 フレームタイトル
=====================

Emacshフレームが指定されたタイトルをもつ場合もあり、もたない場合もありま
す。フレームタイトルが指定された場合、それはウィンドウ装飾とアイコンに、
フレームの名前として表示されます。Emacsフレームが指定されたタイトルをも
たない場合、デフォルトのタイトルは‘INVOCATION-NAME@MACHINE’という形式(フ
レームが1つだけのとき)か、選択されたウィンドウのバッファー名(複数のフレ
ームがある場合)になります。

   コマンドラインオプションで、Emacsの初期フレームのタイトルを指定できま
す:

‘-T TITLE’
‘--title=TITLE’
     Emacs初期フレームのタイトルとしてTITLEを指定します。

   ‘--name’オプション(*note Resources::を参照してください)でも、Emacs初
期フレームのタイトルを指定できます。


File: emacs-ja.info,  Node: Icons X,  Next: Misc X,  Prev: Title X,  Up: Emacs Invocation

C.11 アイコン
=============

‘-iconic’
‘--iconic’
     Emacsをアイコン化(“最小化”)した状態で開始します。

‘-nbi’
‘--no-bitmap-icon’
     Emacsアイコンの使用を無効にします。

   ほとんどのウィンドウマネージャーでは、Emacsフレームを“アイコン化”(ま
たは“最小化”)して、見えなくすることができます。いくつかのウィンドウマネ
ージャーでは、他のウィンドウマネージャーがアイコン化されたウィンドウを完
全に見えなくするのにたいして、アイコン化されたウィンドウを小さな“アイコ
ン”でおきかえるものもあります。‘-iconic’オプションは、フレームをすぐに表
示するのではなく、アイコン化された状態で実行を開始するよう、Emacsに指示
します。テキストフレームはアイコン化の解除(または“最小化の解除”)をするま
で表示されません。

   デフォルトでは、EmacsはEmacsロゴを含むアイコンを使用します。Gnomeのよ
うなデスクトップ環境では、このアイコンは他のコンテキスト、たとえば
Emacsフレームに切り替えるときにも表示されます。‘-nbi’または
‘--no-bitmap-icon’オプションは、使用するアイコンの種類をウィンドウマネー
ジャーに選択させるよう、Emacsに指示します。通常これはフレームのタイトル
を含んだ、ただの矩形です。


File: emacs-ja.info,  Node: Misc X,  Prev: Icons X,  Up: Emacs Invocation

C.12 その他のディスプレーオプション
===================================

‘--parent-id ID’
     XEmbedプロトコルを通じて、IDを親XウィンドウIDとする、クライアント
     Xウィンドウとして、Emacsを開始します。現在のところ、このオプション
     は開発者にとって有用です。

‘-vb’
‘--vertical-scroll-bars’
     垂直スクロールバーを有効にします。

‘-lsp PIXELS’
‘--line-spacing=PIXELS’
     行間の追加のスペースPIXELSを、ピクセルで指定します。

‘-nbc’
‘--no-blinking-cursor’
     グラフィカルなディスプレーで、点滅カーソルを無効にします。

‘-D’
‘--basic-display’
     メニューバー、ツールバー、スクロールバー、ツールチップを無効にして
     、点滅カーソルをオフに切り替えます。これは表示問題のデバッグするテ
     ストケースを簡単にするのに有用です。

   ‘--xrm’オプション(*note Resources::を参照してください)は、追加のXリソ
ース値を指定します。


File: emacs-ja.info,  Node: X Resources,  Next: Antinews,  Prev: Emacs Invocation,  Up: Top

Appendix D Xのオプションとリソース
**********************************

Xを使用するプログラムにたいして通常行なうように、Xリソースを使用して
EmacsのXに関連する外観をカスタマイズできます。

   EmacsがGTK+サポートつきでコンパイルされている場合、メニューバー、スク
ロールバー、ダイアログボックスなどの、さまざまなグラフィカルウィジェット
の外観は “GTKリソース”で決定されるので、これについても説明します。
EmacsがGTK+のサポートなしでビルドされた場合、これらのウィジェットの外観
は追加のXリソースにより決定されます。

   MS-Windowsでは、システムレジストリー(*note MS-Windows Registry::を参
照してください)を使用して、いくつかの外観を同じようにカスタマイズできま
す。

* Menu:

* Resources::                EmacsでXリソースを使用する(概説)。
* Table of Resources::       Emacsに影響する特定のXリソースの表。
* Lucid Resources::          LucidメニューにたいするXリソース。
* Motif Resources::          MotifおよびLessTifメニューにたいするXリソース。
* GTK resources::            GTKウィジェットにたいするリソース。


File: emacs-ja.info,  Node: Resources,  Next: Table of Resources,  Up: X Resources

D.1 Xリソース
=============

Xウィンドウシステムの下で実行されているプログラムは、クラスとリソースの
階層の下にユーザーオプションを組織化します。これらのオプションにたいして
、“Xリソースファイル(X resource file)”でデフォルト値を指定できます。Xリ
ソースファイルは、通常‘~/.Xdefaults’または‘~/.Xresources’という名前です
。このファイルの内容を変更しても、変更は即座に効果をもちません。これは
Xサーバーが独自にリソースのリストを保持しているからです。これを更新する
には、たとえば‘xrdb ~/.Xdefaults’のように、コマンド‘xrdb’を使用します。

   (MS-WindowsシステムはXリソースファイルをサポートしません。そのような
システムでは、EmacsはWindowsレジストリーの中からXリソースを探します。最
初にキー‘HKEY_CURRENT_USER\SOFTWARE\GNU\Emacs’の下を探します。これはカレ
ントユーザーだけに影響し、システムワイドなセッティングをオーバーライドし
ます。次にキー‘HKEY_LOCAL_MACHINE\SOFTWARE\GNU\Emacs’の下を探します。こ
れはシステムのすべてのユーザーに影響します。メニューとスクロールバーは、
MS-Windowsのネイティブなウィジェットなので、Display Control Panelのシス
テムワイドなセッティングからしかカスタマイズできません。以下で説明するよ
うに、コマンドラインオプション‘-xrm’を使用して、リソースをセットすること
もできます。)

   Xリソースファイルの各行は、1つのオプション、または関連するオプション
のコレクションにたいして値を指定します。ファイル内で行が出現する順番に意
味はありません。各リソース指定は、“プログラム名(program name)”と“リソー
ス名(resource name)”から構成されます。これらの名前の大文字小文字は区別さ
れます。以下は例です:

     emacs.cursorColor: dark green

   プログラム名は、そのリソースが適用される実行可能ファイルの名前です。
Emacsでは通常、‘emacs’です。Emacsの実行可能ファイル名の如何にかかわらず
に、Emacsのすべてのインスタンスに適用される定義を指定するには、‘Emacs’を
使用します。

   リソース名はプログラムセッティングの名前です。たとえばEmacsは、
‘cursorColor’リソースを、テキストカーソルのカラーを制御するリソースと認
識します。

   リソースは、名前のついたクラスにグループ化されます。たとえば
‘Foreground’クラスには、リソース‘cursorColor’、‘foreground’、
‘pointerColor’が含まれます(*note Table of Resources::を参照してください
)。以下のように、リソース名を使用するかわりに、クラス内のすべてのリソー
スにたいしてデフォルト値を指定するのに、クラス名を使用できます:

     emacs.Foreground: dark green

   変数‘inhibit-x-resources’を非‘nil’値にセットした場合、EmacsはXリソー
スを処理しません。コマンドラインオプション‘-Q’ (または‘--quick’)で
Emacsを呼び出した場合、‘inhibit-x-resources’は自動的に‘t’にセットされま
す(*note Initial Options::を参照してください)。

   これに加えて、Xリソースファイルをオーバーライドするために、以下のコマ
ンドラインオプションが使用できます:

‘-name NAME’
‘--name=NAME’
     このオプションは初期Emacsフレームのプログラム名をNAMEにセットします
     。これは初期フレームのタイトルもNAMEにセットします。このオプション
     は、それ以降のフレームには影響しません。

     このオプションを指定しない場合、プログラム名としてEmacs実行可能ファ
     イル名をデフォルトとして使用されます。

     整合性のため、‘-name’は、特定のフレームに属さない、他のリソース値に
     たいして使用する名前も指定します。

     Emacs呼び出しの名前がつくリソースは、‘Emacs’という名前のクラスにも
     所属します。‘emacs’のかわりに‘Emacs’と記述した場合、実行可能ファイ
     ル名にかかわらず、そのリソースは、すべてのEmacsジョブのすべてのフレ
     ームに適用されます。

‘-xrm RESOURCE-VALUES’
‘--xrm=RESOURCE-VALUES’
     このオプションは、現在のEmacsジョブにたいして、Xリソース値を指定し
     ます。

     RESOURCE-VALUESは、Xリソースファイルの内部で使用するのと同じ形式を
     もつ必要があります。RESOURCE-VALUESに複数のリソース指定を含めるには
     、ファイルに記述するときのように、リソース間に改行を置きます。ファ
     イルのリソース指定をすべてインクルードするために、‘#include
     "FILENAME"’を使用することもできます。‘-xrm’で指定されたリソース値は
     、他のすべてのリソース指定に優先します。


File: emacs-ja.info,  Node: Table of Resources,  Next: Lucid Resources,  Prev: Resources,  Up: X Resources

D.2 EmacsにたいするXリソースの表
================================

以下の表は、メニューバーのようなグラフィカルなウィジェットの外観を制御す
るものを除いた、Emacsが認識するXリソース名です:

‘background’ (class ‘Background’)
     バックグラウンドカラーです(*note Colors::を参照してください)。

‘bitmapIcon’ (class ‘BitmapIcon’)
     ‘on’のときはEmacsアイコンを表示し、‘off’のときは表示しないように、
     ウィンドウマネージャーに指示します。アイコンの説明は、*note Icons
     X::を参照してください。

‘borderColor’ (class ‘BorderColor’)
     フレームの外枠ボーダーのカラーです。EmacsがGTK+サポートつきでコンパ
     イルされている場合、効果はありません。

‘borderWidth’ (class ‘BorderWidth’)
     フレームの外枠ボーダーの幅(ピクセル)です。EmacsがGTK+サポートつきで
     コンパイルされている場合、効果はありません。

‘cursorColor’ (class ‘Foreground’)
     テキストカーソルのカラーです。Emacs開始時にこのリソースが指定されて
     いる場合、Emacsはその値を‘cursor’フェイス(*note Faces::を参照してく
     ださい)のバックグラウンドカラーとしてセットします。

‘cursorBlink’ (class ‘CursorBlink’)
     開始時に、このリソースの値が‘off’、‘false’、‘0’の場合、EmacsはBlink
     Cursorモードを無効にします(*note Cursor Display::を参照してください
     )。

‘font’ (class ‘Font’)
     ‘default’フェイスにたいするフォント名です(*note Fonts::を参照してく
     ださい)。フォントセット名(*note Fontsets::を参照してください)を指定
     することもできます。

‘fontBackend’ (class ‘FontBackend’)
     フォントの描画に使用するバックエンドを、優先順にカンマ区切りで記述
     したリストです。たとえば値‘x,xft’は、EmacsにXコアフォントドライバー
     (X core font driver)を使用してフォントを描画し、それに失敗したとき
     はXftフォントドライバー(Xft font driver)にフォールバックするよう指
     示します。このリソースは通常、セットしないでおくべきです。その場合
     、Emacsは利用可能なすべてのバックエンドの使用を試みます。

‘foreground’ (class ‘Foreground’)
     Default foreground color for text.

‘geometry’ (class ‘Geometry’)
     ウィンドウのサイズと位置です。値にはコマンドラインオプション‘-g’ま
     たは‘--geometry’と同じ形式で、サイズと位置を指定します。

     サイズはEmacsセッションのすべてのフレームに適用されますが、位置は初
     期フレーム(特定のフレームにたいするリソースの場合は、そのフレーム
     )だけに適用されます。

     このリソースを、‘emacs*geometry’のように指定しないように気をつけて
     ください。これはEmacsのメインのフレームと同じように、個別のメニュー
     にも影響します。

‘fullscreen’ (class ‘Fullscreen’)
     望ましいフルスクリーンサイズを指定します。値は‘fullboth’、
     ‘maximized’、‘fullwidth’、‘fullheight’のうちどれか1つを指定でき、こ
     れらはコマンドラインオプションの‘-fs’、‘-mm’、‘-fw’、‘-fh’に相当し
     ます(*note Window Size X::を参照してください)。これは初期フレームだ
     けに適用されることに注意してください。

‘iconName’ (class ‘Title’)
     アイコンに表示する名前です。

‘internalBorder’ (class ‘BorderWidth’)
     フレームの内枠ボーダーの幅(ピクセル)です。

‘lineSpacing’ (class ‘LineSpacing’)
     行間の追加のスペース(ピクセル)です。

‘menuBar’ (class ‘MenuBar’)
     このリソースの値が‘off’、‘false’、‘0’の場合、Emacsは開始時にMenu
     Barモードを無効にします(*note Menu Bars::を参照してください)。

‘minibuffer’ (class ‘Minibuffer’)
     ‘none’の場合、Emacsはこのフレームにミニバッファーを作成しません。か
     わりに別のミニバッファーフレームを使用します。

‘paneFont’ (class ‘Font’)
     ツールキット版ではない、Emacsのメニューのタイトルのフォント名です。

‘pointerColor’ (class ‘Foreground’)
     マウスカーソルのカラーです。多くのグラフィカルなデスクトップ環境で
     は、この方法でEmacsがマウスカーソルを変更するのを許さないので、効果
     はありません。

‘privateColormap’ (class ‘PrivateColormap’)
     ‘on’の場合、Emacsが使用するクラスPseudoColorの“default visual”が使
     用されている場所で、プライベートなカラーマップを使用します。

‘reverseVideo’ (class ‘ReverseVideo’)
     ‘on’の場合はデフォルトのフォア九ラウンドカラーとバックグラウンドカ
     ラーを切り替え、‘off’の場合は指定されたカラーを使用します。

‘screenGamma’ (class ‘ScreenGamma’)
     カラーのガンマ補正で、フレームパラメーターの‘screen-gamma’と等価で
     す。

‘scrollBarWidth’ (class ‘ScrollBarWidth’)
     スクロールバーの幅(ピクセル)で、フレームパラメーターの
     ‘scroll-bar-width’と等価です。EmacsがGTK+サポートつきでコンパイルさ
     れている場合は、このリソースをセットしないでください。

‘selectionFont’ (class ‘SelectionFont’)
     ツールキット版でないEmacsの、ポップアップメニューのフォント名です
     (ツールキット版の場合は*note Lucid Resources::と*note Motif
     Resources::を参照してください)。

‘selectionTimeout’ (class ‘SelectionTimeout’)
     選択にたいする応答を待つ時間(ミリ秒)です。選択したオーナーが、この
     時間内に応答しない場合は諦めます。値0は必要なだけ待つことを意味しま
     す。

‘synchronous’ (class ‘Synchronous’)
     ‘on’の場合、Emacsを同期モード(synchronous mode)で実行します。同期モ
     ードはXに関する問題のデバッグに有用です。

‘title’ (class ‘Title’)
     初期Emacsフレームのタイトルバーに表示する名前です。

‘toolBar’ (class ‘ToolBar’)
     このリソースの値が‘off’、‘false’、‘0’の場合、Emacsは開始時にTool
     Barモードを無効にします(*note Tool Bars::を参照してください)。

‘useXIM’ (class ‘UseXIM’)
     ‘false’または‘off’の場合、X入力メソッド(XIM: X input methods)の使用
     を無効にします。これはEmacsがXIMサポートつきでビルドされた場合だけ
     関係があります。Xのクライアント/サーバーのリンクが遅いときは、XIMを
     オフにするのが便利かもしれません。

‘verticalScrollBars’ (class ‘ScrollBars’)
     ‘on’の場合はフレームはスクロールバーをもち、‘off’のときはスクロール
     バーをもちません。

‘visualClass’ (class ‘VisualClass’)
     Xカラーディスプレーの“visual class”です。指定する場合、値は
     ‘TrueColor’、‘PseudoColor’、‘DirectColor’、‘StaticColor’、
     ‘GrayScale’、‘StaticGray’で始まり、その後に‘-DEPTH’が続きます。ここ
     でDEPTHは色平面の数です。

   特定のEmacsフェイスのカスタマイズに、Xリソースを使用することもできま
す(*note Faces::を参照してください)。たとえば
‘FACE.attributeForeground’をセットするのは、フェイスFACEの‘foreground’属
性をカスタマイズするのと等価です。しかし、わたしたちはXリソースを使用し
てフェイスのカスタマイズするかわりに、Emacs内でフェイスをカスタマイズす
る方法を推奨します。*note Face Customization::を参照してください。


File: emacs-ja.info,  Node: Lucid Resources,  Next: Motif Resources,  Prev: Table of Resources,  Up: X Resources

D.3 Lucidのメニューとダイアログ
===============================

EmacsがLucidウィジェットを使用したXツールキットサポートつきでコンパイル
された場合、メニューバー、ポップアップメニュー、ダイアログボックスの外観
をカスタマイズするために、Xリソースを使用できます。メニューバーにたいす
るリソースは、‘pane.menubar’クラスの中に集められています(例のごとく
Emacs実行可能ファイル名または、すべてのEmacs呼び出しに対応する‘Emacs’の
後に続けて記述します)。ポップアップメニューにたいするリソースは、
‘menu*’クラスの中です。ダイアログボックスにたいするリソースは、
‘dialog*’クラスの中です。

   たとえばメニューバーエントリーを‘Courier-12’フォントで表示するには、
以下のように記述します:

     Emacs.pane.menubar.font: Courier-12

Lucidウィジェットは、あなたのlocaleで他国語テキストを表示できます。これ
を有効にするには、‘font’リソースのかわりに、‘fontSet’リソースを指定しま
す。‘font’と‘fontSet’の両方のリソースが指定された場合は、‘fontSet’リソー
スが使用されます。

   以下はメニューバー、ポップアップメニュー、ダイアログにたいするリソー
スのリストです:

‘font’
     メニューアイテムのテキストにたいするフォントです。
‘fontSet’
     メニューアイテムのテキストにたいするフォントセットです。
‘foreground’
     フォアグラウンドカラーです。
‘background’
     バックグラウンドカラーです。
‘buttonForeground’
     選択されたアイテムのフォアグラウンドカラーです。
‘horizontalSpacing’
     アイテム間の水平間隔(ピクセル)です。デフォルトは3です。
‘verticalSpacing’
     アイテム間の垂直間隔(ピクセル)です。デフォルトは2です。
‘arrowSpacing’
     (サブメニューを示す)矢印と、それに付随するテキストの間の水平間隔で
     す。デフォルトは10です。
‘shadowThickness’
     3Dのボタン、矢印、その他グラフィカルな要素の陰線(shadow lines)の厚
     さです。デフォルトは1です。
‘margin’
     メニューバーの余白(文字数)です。デフォルトは1です。


File: emacs-ja.info,  Node: Motif Resources,  Next: GTK resources,  Prev: Lucid Resources,  Up: X Resources

D.4 MotifメニューのXリソース
============================

EmacsがMotifまたはLessTifのウィジェットを使用するXツールキットサポートつ
きでコンパイルされた場合、メニューバー、ポップアップメニュー、ダイアログ
ボックスの外観をカスタマイズするために、Xリソースを使用できます。しかし
、これらのリソースは、Lucidウィジェットとは組織方法が異なります。

   メニューバーにたいするリソース名は‘pane.menubar’クラスの中にあり、そ
れらは以下の形式で指定しなければなりません:

     Emacs.pane.menubar.SUBWIDGET.RESOURCE:  VALUE

ポップアップメニューにたいするリソースは、‘pane.menubar’ではなく、
‘menu*’クラスの中にあります。ダイアログボックスにたいするリソースは
‘dialog’クラスの中です。どの場合でも、それぞれのメニュー文字列がサブウィ
ジェットです。サブウィジェットの名前は、メニューアイテム文字列と同じです
。たとえば、メニューバーの中の‘File’メニューは、
‘emacs.pane.menubar.File’という名前のサブウィジェットです。

   通常は、メニューバー全体に同じリソースを指定したいでしょう。これを行
なうには、特定のウィジェット名のかわりに‘*’を使用します。たとえば、サブ
メニューを含むすべてのメニューバーアイテムに、フォント‘8x16’を指定するに
は、以下のように記述します:

     Emacs.pane.menubar.*.fontList:  8x16

   サブメニューの中の各アイテムは、Xリソースにたいする独自の名前をもちま
す。たとえば‘File’サブメニューは、‘Save (current buffer)’という名前のア
イテムをもちます。サブメニューアイテムにたいするリソース指定は以下のよう
になります:

     Emacs.pane.menubar.popup_*.MENU.ITEM.RESOURCE: VALUE

たとえば、以下は‘Save (current buffer)’アイテムにフォントを指定する方法
です:

     Emacs.pane.menubar.popup_*.File.Save (current buffer).fontList: 8x16

‘Tools’の下の、‘Spell Checking’の下の‘Complete Word’のような、第2レベル
のアイテムには、以下のテンプレートが当てはまります:

     Emacs.pane.menubar.popup_*.popup_*.MENU.RESOURCE: VALUE

たとえば、

     Emacs.pane.menubar.popup_*.popup_*.Spell Checking.Complete Word: VALUE

(これは長い1行で記述する必要があります。)

   サブメニューアイテムにメニューバー自体とは異なる外観を与えたい場合、
最初にすべてにたいしてリソースを指定してから、そのサブメニューにたいする
値をオーバーライドしなければなりません。以下は例です:

     Emacs.pane.menubar.*.fontList:  8x16
     Emacs.pane.menubar.popup_*.fontList: 8x16

   LessTifのファイル選択ボックスにたいしてリソースを指定するには、以下の
ように‘fsb*’を使用します:

     Emacs.fsb*.fontList: 8x16

   以下はLessTifのメニューバーとポップアップメニューにたいするリソースの
リストです:

‘armColor’
     アームドボタン(armed button: 押されてまだ離されていないボタン)を表
     示するカラーです。
‘fontList’
     使用するフォントです。
‘marginBottom’
‘marginHeight’
‘marginLeft’
‘marginRight’
‘marginTop’
‘marginWidth’
     アイテムの周囲に残すスペースの量を、ボーダーも含めて指定します。
‘borderWidth’
     メニューアイテムの各辺のボーダーの幅です。
‘shadowThickness’
     ボーダーの影の幅です。
‘bottomShadowColor’
     ボーダーの影の底辺と右辺のカラーです。
‘topShadowColor’
     ボーダーの影の上辺と左辺のカラーです。


File: emacs-ja.info,  Node: GTK resources,  Prev: Motif Resources,  Up: X Resources

D.5 GTKリソース
===============

EmacsがGTK+サポートつきでコンパイルされた場合、EmacsのGTK+ウィジェット
(例: メニュー、ダイアログ、ツールバー、スクロールバー)をカスタマイズする
一番簡単な方法は、たとえばGNOME theme selectorなどで適切なGTK+テーマを選
択する方法です。

   GTK+バージョン2では、Emacsで使用されるGTK+ウィジェットの外観をカスタ
マイズするために、“GTK+リソース”も使用できます。これらのリソースは、ファ
イル‘~/.emacs.d/gtkrc’(Emacs固有のGTK+リソース用)、またはファイル
‘~/.gtkrc-2.0’(一般的なGTK+リソース用)のどちらかで指定されます。GTK+は、
GNOMEでGConfを実行するとき‘~/.gtkrc-2.0’を無視するように思われるため、わ
たしたちは‘~/.emacs.d/gtkrc’の使用を推奨します。しかし
‘~/.emacs.d/gtkrc’によるカスタマイズをオーバーライドするGTKテーマがある
ことに注意してください。これにたいして、わたしたちができることはありませ
ん。GTK+リソースは、EmacsのGTK+ウィジェットと関係のない側面、たとえば
Emacsのメインウィンドウのフォントやカラーにたいしては影響しません。これ
らは通常のXリソースに管理されます(*note Resources::を参照してください)。

   以下のセクションでは、EmacsにたいしてGTK+リソースをカスタマイズする方
法を説明します。GTK+リソースについての詳細は、
<http://developer.gnome.org/gtk2/stable/gtk2-Resource-Files.html>のGTK+
APIドキュメントを参照してください。

   GTK+バージョン3では、GTK+リソースは完全に異なるシステムに置き換えられ
ました。GTK+ウィジェットの外観は、今やCSS-likeなスタイルのファイル、すな
わちGTK+をインストールしたディレクトリーの‘gtk-3.0/gtk.css’、およびロー
カルなスタイルセッティングにたいしては
‘~/.themes/THEME/gtk-3.0/gtk.css’で決定されます(THEMEはカレントGTK+テー
マの名前です)。したがってこのセクションのGTK+リソースの説明は、GTK+3に適
合しません。GTK+3スタイリングシステムについての詳細は、
<http://developer.gnome.org/gtk3/3.0/GtkCssProvider.html>を参照してくだ
さい。

* Menu:

* GTK Resource Basics::      GTK+リソースの基本的な使い方。
* GTK Widget Names::         GTK+ウィジェットの命名方法。
* GTK Names in Emacs::       Emacsが使用するGTK+ウィジェット。
* GTK styles::               GTK+ウィジェットの何がカスタマイズできるか。


File: emacs-ja.info,  Node: GTK Resource Basics,  Next: GTK Widget Names,  Up: GTK resources

D.5.1 GTKリソースの基本
-----------------------

GTK+2リソースファイル(通常は‘~/.emacs.d/gtkrc’)で、リソースをセットする
一番簡単な方法は、単に変数に値を割り当てる方法です。たとえば以下の行を利
ソースファイルに置くことにより、すべてのGTK+ウィジェットのフォントが
‘courier-12’に変更されます:

     gtk-font-name = "courier 12"

この場合、フォント名はFontconfigスタイルのフォント名やXLFDではなく、
GTKフォントパターン(“Pangoフォント名”とも呼ばれます)で記述しなければなり
ません。*note Fonts::を参照してください。

   ウィジェットをカスタマイズするには、最初に“スタイル”を定義して、その
スタイルをウィジェットに適用します。以下はメニューにたいしてフォントをセ
ットする例です(文字‘#’はコメントを示します):

     # Define the style ‘my_style’.
     style "my_style"
     {
       font_name = "helvetica bold 14"
     }

     # Specify that widget type ‘*emacs-menuitem*’ uses ‘my_style’.
     widget "*emacs-menuitem*" style "my_style"

この例のウィジェット名にはワイルドカードが含まれるので、このスタイルは
‘*emacs-menuitem*’にマッチするすべてのウィジェットに適用されます。ウィジ
ェットは、外側のウィジェットから内側のウィジェットへと、それが含まれる方
法により、名前がつけられます。以下はEmacsメニューバーに‘my_style’を指定
して適用する例です:

     widget "Emacs.pane.menubar.*" style "my_style"

   以下はスクロールバーを部分的に変更する方法を示す、より複雑な例です:

     style "scroll"
     {
       fg[NORMAL] = "red"     # Arrow color.
       bg[NORMAL] = "yellow"  # Thumb and background around arrow.
       bg[ACTIVE] = "blue"    # Trough color.
       bg[PRELIGHT] = "white" # Thumb color when the mouse is over it.
     }

     widget "*verticalScrollBar*" style "scroll"


File: emacs-ja.info,  Node: GTK Widget Names,  Next: GTK Names in Emacs,  Prev: GTK Resource Basics,  Up: GTK resources

D.5.2 GTKウィジェット名
-----------------------

GTK+ウィジェットは“ウィジェット名(widget name)”と“ウィジェットクラス
(widget class)”により指定されます。ウィジェット名は特定のウィジェット(た
とえば‘emacs-menuitem’)を参照し、ウィジェットクラスは似通ったウィジェッ
ト(たとえば‘GtkMenuItem’)のコレクションを参照します。ウィジェットは常に
クラスをもちますが、名前をもつ必要はありません。

   “絶対名(absolute names)”とは、一連のウィジェット名またはウィジェット
クラスで、他のウィジェットに埋め込まれたウィジェットの階層に対応します。
たとえば、‘top’という名前の‘GtkWindow’が、‘box’という名前の‘GtkVBox’を含
み、それがさらに‘menubar’という名前の‘GtkMenuBar’を含む場合、メニューバ
ーウィジェットの完全クラス名は‘GtkWindow.GtkVBox.GtkMenuBar’で、完全ウィ
ジェット名は‘top.box.menubar’になります。

   GTK+リソースファイルには、ウィジェットの外観を指定する2種類のコマンド
を含めることができます:

‘widget’
     クラス名または単にクラスにもとづいてウィジェットのスタイルを指定し
     ます。

‘widget_class’
     クラス名にもとづいてウィジェットのスタイルを指定します。

‘widget’コマンドを使用する例は、前のセクションを参照してください。
‘widget_class’コマンドも同じように使用されます。ウィジェット名/ウィジェ
ットクラスとスタイルはダブルクォートで囲わなければならないこと、そしてこ
れらのコマンドはGTK+リソースファイルのトップレベルに記述しなければならな
いことに注意してください。

   前に記したように、ウィジェット名とウィジェットクラスはシェルのワイル
ドカード構文で指定することができます。‘*’は0文字以上にマッチし、‘?’は1文
字にマッチします。以下はすべてのウィジェットにスタイルを割り当てる例です
:

     widget "*" style "my_style"


File: emacs-ja.info,  Node: GTK Names in Emacs,  Next: GTK styles,  Prev: GTK Widget Names,  Up: GTK resources

D.5.3 EmacsでのGTKウィジェット名
--------------------------------

Emacsフレームが使用するGTK+ウィジェットを以下にリストします:

‘Emacs’ (class ‘GtkWindow’)
     ‘pane’ (class ‘GtkVBox’)
          ‘menubar’ (class ‘GtkMenuBar’)
               [menu item widgets]
          [unnamed widget] (class ‘GtkHandleBox’)
               ‘emacs-toolbar’ (class ‘GtkToolbar’)
                    [tool bar item widgets]
          ‘emacs’ (class ‘GtkFixed’)
               ‘verticalScrollBar’ (class ‘GtkVScrollbar’)

Emacsウィンドウの内容は、‘emacs’ウィジェットにより描画されます。複数の
Emacsウィンドウがある場合でも、それぞれのスクロールバーウィジェットの名
前は‘verticalScrollBar’であることに注意してください。

   たとえば、以下はメニューバーのスタイルをセットする、2つの異なる方法の
例です:

     widget "Emacs.pane.menubar.*" style "my_style"
     widget_class "GtkWindow.GtkVBox.GtkMenuBar.*" style "my_style"

   GTK+ダイアログにたいしては、Emacsはクラス‘GtkDialog’の、
‘emacs-dialog’という名前のウィジェットを使用します。ファイル選択にたいし
ては、Emacsはクラス‘GtkFileSelection’の、‘emacs-filedialog’という名前の
ウィジェットを使用します。

   ポップアップメニューとダイアログのウィジェットは独立したウィンドウで
あり、‘Emacs’ウィジェットに“含まれ”ていないので、それらのGTK+完全名は
‘Emacs’で始まりません。これらのウィジェットをカスタマイズするには、以下
のようにワイルドカードを使用します:

     widget "*emacs-dialog*" style "my_dialog_style"
     widget "*emacs-filedialog* style "my_file_style"
     widget "*emacs-menuitem* style "my_menu_style"

   Emacsのすべてのメニューにスタイルを適用したい場合は、以下を使用します
:

     widget_class "*Menu*" style "my_menu_style"


File: emacs-ja.info,  Node: GTK styles,  Prev: GTK Names in Emacs,  Up: GTK resources

D.5.4 GTKスタイル
-----------------

以下は2つのGTK+スタイル宣言の例です:

     pixmap_path "/usr/share/pixmaps:/usr/include/X11/pixmaps"

     style "default"
     {
       font_name = "helvetica 12"

       bg[NORMAL] = { 0.83, 0.80, 0.73 }
       bg[SELECTED] = { 0.0, 0.55, 0.55 }
       bg[INSENSITIVE] = { 0.77, 0.77, 0.66 }
       bg[ACTIVE] = { 0.0, 0.55, 0.55 }
       bg[PRELIGHT] = { 0.0, 0.55, 0.55 }

       fg[NORMAL] = "black"
       fg[SELECTED] = { 0.9, 0.9, 0.9 }
       fg[ACTIVE] = "black"
       fg[PRELIGHT] = { 0.9, 0.9, 0.9 }

       base[INSENSITIVE] = "#777766"
       text[INSENSITIVE] = { 0.60, 0.65, 0.57 }

       bg_pixmap[NORMAL] = "background.xpm"
       bg_pixmap[INSENSITIVE] = "background.xpm"
       bg_pixmap[ACTIVE] = "background.xpm"
       bg_pixmap[PRELIGHT] = "<none>"

     }

     style "ruler" = "default"
     {
       font_name = "helvetica 8"
     }


   スタイル‘ruler’は‘default’を継承します。この方法により、既存のスタイ
ルを元にすることができます。フォントとカラーの構文は以下に記述されていま
す。

   この例が示すように、ウィジェットの“状態”にもとづいてフォアグラウンド
とバックグラウンドのカラーに複数の値を指定することが可能です。以下の状態
が利用できます:

‘NORMAL’
     ウィジェットのフォルトの状態です。
‘ACTIVE’
     ウィジェットが何かを行なう準備ができた状態です。これはスクロールバ
     ーの溝(trough)にも適用できます。たとえば‘bg[ACTIVE] = "red"’はスク
     ロールバーの溝を赤にセットします。ボタンが押されてまだ離されていな
     い状態(“armed”)も、この状態です。
‘PRELIGHT’
     マウスポインターがその上にきたとき、ウィジェットが操作可能な状態で
     す — たとえばマウスがスクロールバーのハンドルの上やメニューアイテム
     の上にきたときの状態です。押されていないボタンの上にマウスがくると
     、そのボタンはこの状態になります。
‘SELECTED’
     ユーザーにより選択されたデータにたいする状態です。それは選択された
     テキストやリストの選択されたアイテムの場合もあります。この状態は
     Emacsでは使用されません。
‘INSENSITIVE’
     ウィジェットが可視だが通常の方法では操作できない状態 — たとえば押せ
     ないボタンや、無効なメニューアイテムなどです。無効なメニューアイテ
     ムを黄色で表示するには、‘fg[INSENSITIVE] = "yellow"’を使用します。

   以下をスタイル宣言に記述できます:

‘bg[STATE] = COLOR’
     ウィジェットのバックグラウンドカラーを指定します。編集可能なテキス
     トは‘bg’ではなく‘base’を使用することに注意してください。

‘base[STATE] = COLOR’
     編集可能なテキストのバックグラウンドカラーを指定します。Emacsでは、
     ファイルダイアログのテキストフィールドのバックグラウンドに、このカ
     ラーが使用されます。

‘bg_pixmap[STATE] = "PIXMAP"’
     (バックグラウンドカラーのかわりに)バックグラウンドイメージを指定し
     ます。PIXMAPはイメージファイル名です。GTKはXPM、XBM、GIF、JPEG、
     PNGヲ含む、いくつかのイメージファイルを使用することができます。親ウ
     ィジェットと同じイメージをウィジェットに使用したい場合は、
     ‘<parent>’を使用します。イメージを使わない場合は、‘<none>’を使用し
     ます。‘<none>’で、親スタイルから継承されたバックグラウンドイメージ
     をキャンセルできます。

     ファイル名は絶対ファイル名で指定できません。GTKは‘pixmap_path’で指
     定されたディレクトリーのpixmapファイルを探します。‘pixmap_path’は、
     ダブルクォートされたファイルをコロンで区切ったリストで、‘gtkrc’ファ
     イルのトップレベルで指定します(スタイル定義の中ではありません。上記
     の例を参照してください)。

          pixmap_path "/usr/share/pixmaps:/usr/include/X11/pixmaps"

‘fg[STATE] = COLOR’
     使用するウィジェットのフォアグラウンドカラーを指定します。これはメ
     ニューやボタンのテキストのカラー、スクロールバーの矢印のカラーです
     。編集可能なテキストにたいしては、‘text’を使用します。

‘text[STATE] = COLOR’
     編集可能なテキストのカラーです。Emacsでは、ファイルダイアログのテキ
     ストフィールドに使用されるカラーです。

‘font_name = "FONT"’
     ウィジェット内のテキストのフォントを指定します。FONTは、‘Sans
     Italic 10’のような、GTK(Pango)スタイルのフォント名です。*note
     Fonts::を参照してください。名前は大文字小文字を区別しません。

   カラーを指定する3つの方法があります。それはカラーネーム、RGBトリプレ
ット、GTKスタイルRGBトリプレットです。カラーネームとRGBトリプレットにつ
いては、*note Colors::を参照してください。カラーネームは‘"red"’のように
、ダブルクォートで囲む必要があります。RGBトリプレットは‘#ff0000’のように
、ダブルクォートで囲う必要がありません。GTKスタイルRGBトリプレットは
‘{ R, G, B }’という形式をもち、R、G、Bは、0から65535の整数か、0.0から
1.0の浮動小数点数です。


File: emacs-ja.info,  Node: Antinews,  Next: Mac OS / GNUstep,  Prev: X Resources,  Up: Top

Appendix E Emacs 23 アンチニュース
**********************************

時代に逆らって生きるユーザーのために、以下はEmacsバージョン23.4へのダウ
ングレードに関する情報です。Emacs 24.5機能の不在による結果としての偉大な
る単純さを、ぜひ堪能してください。

   • “双方向(bidirectional)”テキストの表示と編集にたいするサポートは削除
     されました。テキストは背景にあるスクリプトとは無関係に、スクリーン
     上で常に単一の方向 — つまり左から右に表示されます。同様に‘C-f’と
     ‘C-b’は、常にテキストカーソルを右または左に移動します。また
     <RIGHT>と<LEFT>は、あなたが期待するとおり、背景にある“パラグラフの
     方向(paragraph direction)”にもとづいて前方や後方に移動するのではな
     く、‘C-f’と‘C-b’に等価になりました。

     おそらくアラビア語やヘブライ語のような“right-to-left(右から左に記述
     する)”言語のユーザーは、テキストの読み取りおよび/または編集を
     left-to-right(左から右)の方向に適合させることでしょう。

   • Emacs Lispパッケージマネージャーは削除されました。追加のLispパッケ
     ージは“ユーザーインターフェース”(‘M-x list-packages’)を使用するので
     はなく、もっとも柔軟かつ“Lispっぽい”手法、すなわち手作業でインスト
     ールしなければなりません。これは通常、そのパッケージをインストール
     したディレクトリーをload-pathに追加して、いくつかのautoloadを定義す
     るための、initファイル編集を伴うだけです。詳細はそのパッケージのコ
     メントセクションおよび/またはREADMEファイルを参照してください。

   • オプション‘delete-active-region’は削除されました。リージョンがアク
     ティブのとき、<DEL>または<Delete>とタイプしても、もはやそのリージョ
     ンのテキストは削除されず、1文字だけを削除します。

   • わたしたちは、EmacsがクリップボードとXのプライマリー選択(primary
     selection)を扱う方法を書き直しました。‘C-w’や‘C-y’のような、killと
     yankを行なうコマンドは、クリップボードではなくプライマリー選択を使
     用するので、他のプログラムに“カット”や“ペースト”してしまう恐れなく
     、これらのコマンドを使用できます。メニューアイテム
     ‘Cut’/‘Copy’/‘Paste’は、‘C-w’/‘M-w’/‘C-y’と同じコマンドではなく、そ
     れとは別のクリップボードコマンドにバインドされます。

     マウスでテキストをドラッグして選択すると、そのテキストはプライマリ
     ー選択に加えてkillリングに置かれるようになりました。しかしテキスト
     のハイライト表示が同じでも、‘C-<SPC>’によるリージョンのアクティブ化
     による選択では、そのテキストはkillリングにもプライマリー選択にも置
     かないことに注意してください。

   • isearch(インクリメンタル検索)での‘C-y’と‘M-y’は、もはや
     ‘isearch-yank-kill’と‘isearch-yank-pop’にバインドされません。かわり
     に‘C-y’はカレント行の残りを検索文字列にyankし
     (‘isearch-yank-line’)、‘M-y’が‘isearch-yank-kill’にバインドされます
     。‘C-y’と‘M-y’がもつ通常の意味との不整合は、意図したものではありま
     せん。

   • さまざまな補完機能は単純化されました。オプション
     ‘completion-category-overrides’は削除されたので、Emacsは補完の生成
     、(たとえば)バッファー名補完にたいして別のスキームを使用するのでは
     なく、1つの一貫したスキームを使用します。Shellモードのようないくつ
     かのメジャーモードは、‘completion-at-point’を使用するかわりに、独自
     のインライン補完コマンドを実装するようになりました。

   • ウィンドウが使用される方法を制御する‘display-buffer-base-action’、
     ‘display-buffer-alist’、‘window-combination-limit’、
     ‘window-combination-resize’のような、いくつかのオプションは削除され
     ました。

   • コマンド‘M-x customize-themes’は削除されました。Emacsにはもはや事前
     定義されたテーマはありません(あなたが自分で記述できます)。

   • Emacsは、GTK+セッティングにたいしてEmacs表示のさまざまな様相を適応
     させなくなり、それを選択するかわりに統一性のあるツールキットとは独
     立した外見をもちます。GTK+スクロールバーは、非GTK+のXスクロールバー
     と同じ位置の、左側に配されます。もはやEmacsはデフォルトの‘region’フ
     ェイスをセットしたり、ツールチップを描画するために、GTK+を参照しま
     せん。

   • オプション‘delete-by-moving-to-trash’を非‘nil’値にセットすることに
     より、それがLispプログラムにより作成された一時ファイルでも、すべて
     のファイル削除にシステムのゴミ箱(trash)を使用するようになりました。
     さらにコマンド‘M-x delete-file’と‘M-x delete-directory’は、もはや完
     全な削除を行なわせるためのプレフィクス引数を受け付けません。

   • GNU/LinuxおよびUnixでは、(‘send-mail-function’により指定される)デフ
     ォルトのメール送信方法は、‘sendmail’プログラムを使用するようになり
     ました。Emacsは最初にメールを送るときに配信方法を尋ねず、かわりにそ
     のシステムがメール送信のために設定されたシステムだと信じるようにな
     りました。

   • 配付版のバージョンコントロールシステムでプル(‘C-x v +’)やマージ
     (‘C-x v m’)を行なうコマンドを含め、いくつかのVC機能は削除され、‘C-x
     v L’で作成されるログバッファーのログエントリーをインラインで閲覧す
     る機能も削除されました。

   • Emacs 23.4では、コンピューターのメモリー容量とディスク容量を削減し
     て、良好な状態に保つために、その他多くの機能とファイルが削除されま
     した。


File: emacs-ja.info,  Node: Mac OS / GNUstep,  Next: Microsoft Windows,  Prev: Antinews,  Up: Top

Appendix F EmacsとMac OS
************************

このセクションでは、GNU/Linuxまたはその他のオペレーティングシステムで
GNUstepライブラリーとともにビルドされたEmacs、またはMAC OS Xでネイティブ
ウィンドウシステムのサポートつきでビルドされたEmacsを使用する際の特性を
説明します。Mac OS Xでは、Emacsはウィンドウシステムサポートなし/あり、
X11、Cocoaインターフェースのいずれかでビルドできます。このセクションは
Cocoaビルドだけに適合します。これは、Mac OS Xのバージョン10.4以前はサポ
ートしません。

   さまざまな歴史的、技術的な理由により、Emacsは内部的に“Cocoa”や“Mac OS
X”ではなく、‘Nextstep’という用語を使用します。たとえばこのセクションで説
明するほとんどのコマンドや変数は‘ns-’で始まりますが、これは‘Nextstep’を
短縮したものです。NeXTstepは1980年代にNeXT Incからリリースされたアプリケ
ーションインターフェースで、Cocoaはそれの直系の子孫です。Cocoaとは別に、
他にもNeXTstepスタイルのシステムのGNUstepがあり、これはフリーソフトウェ
アです。これを記述している時点で、EmacsのGNUstepサポートはアルファ状態
(*note GNUstep Support::を参照してください)ですが、わたしたちは、将来こ
れを改善したいと望んでいます。

* Menu:

* Mac / GNUstep Basics::     GNUstepまたはMac
                               OSでのEmacsの基本的な使用方法。
* Mac / GNUstep Customization::  GNUstepまたはMac
                                   OSでのカスタマイズ。
* Mac / GNUstep Events::     ウィンドウシステムイベントが処理される方法。
* GNUstep Support::          GNUstepサポート状態の詳細。


File: emacs-ja.info,  Node: Mac / GNUstep Basics,  Next: Mac / GNUstep Customization,  Up: Mac OS / GNUstep

F.1 Mac OSおよびGNUstepでのEmacsの基本的な使い方
================================================

デフォルトでは、キー<alt>と<option>は、<Meta>と同じです。Macの<Cmd>キー
は<Super>と同じで、Emacsは他のMac/GNUstepアプリケーション(*note Mac /
GNUstep Events::を参照してください)を模倣するこれらの修飾キーを使用した
、一連のキーバインドを提供します。これらのキーバインドは通常の方法で変更
できます(*note Key Bindings::を参照してください)。

   変数‘ns-right-alternate-modifier’は、右の<alt>と<option>キーの動作を
制御します。変数の値が‘left’(デフォルト)の場合、これらのキーは左側のキー
と同じように動作します。値が‘control’、‘meta’、‘alt’、‘super’、‘hyper’の
場合、これらのキーはその値に対応する修飾キーのように動作します。値
‘left’は、‘ns-alternate-modifier’と同じキーであることを意味します。値
‘none’は、Emacsにこれらを無視するよう指示します。

   ‘S-Mouse-1’は‘Mouse-3’と同様に、クリックした位置にリージョンを調整し
ます(‘mouse-save-then-kill’)。‘S-Mouse-1’が通常行なうように、デフォルト
フェイスを変更するためのポップアップメニュー(*note Text Scale::を参照し
てください)は表示しません。この変更は、Emacsが他のMac/GNUstepアプリケー
ションと同じように動作させるためです。

   メニューを使用してファイルを開いたり保存するときや、‘Cmd-o’や
‘Cmd-S’といったキーバインドを使用する場合、Emacsはファイル名の読み取りに
グラフィカルなファイルダイアログを使用します。しかし‘C-x C-f’のような標
準のEmacsのキーシーケンスを使用する場合、Emacsはミニバッファーを使用して
ファイル名を読み取ります。

   GNUstepでは、X-windows環境においてテキストをXのプライマリー選択
(primary selection)に転送するために、‘C-w’や‘M-w’のかわりに、‘Cmd-c’を使
用する必要があります。そうでない場合、Emacsは“クリップボード”選択を使用
します。同様に(‘C-y’のかわりに)‘Cmd-y’は、killリングやクリップボードでは
なく、Xのプライマリー選択からyankします。

F.1.1 環境変数の取得
--------------------

latexやmanのような、Emacsの下で実行される多くのプログラムは、環境変数の
セッティングに依存します。Emacsがシェルから起動された場合、自動的にこれ
らの環境変数を継承し、Emacsのサブプロセスもそれらを継承します。しかし
EmacsがFinderから起動された場合は、シェルの子プロセスではないので、環境
変数はセットされません。これによりサブプロセスの振る舞いが、シェルから実
行したときと異なることが起こり得ます。

   変数PATHおよびMANPATHにたいしては、MAC OS X10.5以降ではPATHをセットす
るシステムワイドな手法は、‘/etc/paths’ファイルと‘/etc/paths.d’ディレクト
リーを使用することが推奨されています。


File: emacs-ja.info,  Node: Mac / GNUstep Customization,  Next: Mac / GNUstep Events,  Prev: Mac / GNUstep Basics,  Up: Mac OS / GNUstep

F.2 GNUstepでのカスタマイズ
===========================

多くはありませんが、Nextstepポートに特有のカスタマイズオプションがいくつ
かあります。たとえば修飾キーやフルスクリーン動作に影響するオプションです
。そのようなオプションをすべて閲覧するには、‘M-x customize-group <RET>
ns <RET>’を使用します。

F.2.1 フォントパネルとカラーパネル
----------------------------------

標準のMac/GNUstepのフォントパネルとカラーパネルには、Lispコマンドを通じ
てアクセスできます。フォントパネルにアクセスするには、‘M-x
ns-popup-font-panel’を使用します。これは一番最近使用された、またはクリッ
クされたフレームの、デフォルトフォントをセットします。

   ‘M-x ns-popup-color-panel’でカラーパネルを起動して、変更したいEmacsフ
ェイスの上にカラーをドラッグできます。通常のドラッグではフォアグラウンド
カラーを変更します。シフトを押しながらドラッグした場合は、バックグラウン
ドを変更します。カラーのセットを破棄したい場合は、新しいフレームを作成し
て、変更したフレームを閉じてください。

   このコンテキストで有用なのは、‘M-x list-faces-display’によりすべての
フェイスのリストを取得することです。

   Mac OS X 10.5以降では、EmacsはデフォルトでCore Textベースのフォントバ
ックエンドを使用します。古いフォントスタイルにしたい場合は、Emacsを起動
する前に、以下のコマンドラインを入力します:

     % defaults write org.gnu.Emacs FontBackend ns


File: emacs-ja.info,  Node: Mac / GNUstep Events,  Next: GNUstep Support,  Prev: Mac / GNUstep Customization,  Up: Mac OS / GNUstep

F.3 Mac OSおよびGNUstepでのウィンドウシステムイベント
=====================================================

Nextstepアプリケーションは、Xでは同等なものがない、特別なイベントを受け
取ります。これらは、対応するキーストロークのシーケンスとしてではなく、特
別に定義された“キー”として送られます。Emacsでは、これらの“キー”イベント
を、通常のキーストロークのように、関数にバインドできます。以下はこのよう
なイベントのリストです。

<ns-open-file>
     このイベントは、他のNextstepアプリケーションがEmacsにファイルを開く
     よう要求したときに発生します。これの典型的な理由としては、ユーザー
     がFinderアプリケーションでファイルをダブルクリックしたときなどです
     。デフォルトでは、Emacsはこのイベントにたいして、新しいフレームを開
     いて、そのフレームでファイルをvisitして応答します(‘ns-find-file’)。
     例外として、選択されたバッファーが‘*scratch*’バッファーの場合、
     Emacsは選択されたフレームでファイルをvisitします。

     Emacsが‘ns-open-file’イベントにたいしてどのように応答するかは、
     ‘ns-pop-up-frames’を変更することにより、変えることができます。デフ
     ォルト値は‘fresh’で、これは上で説明したとおりの動作を行ないます。値
     ‘t’は、ファイルを常に新しいフレームでvisitすることを意味します。値
     ‘nil’は、ファイルを常に既存のフレームでvisitすることを意味します。

<ns-open-temp-file>
     このイベントは、他のアプリケーションがEmacsに一時ファイルを開くよう
     に要求したとき発生します。デフォルトでは、単に‘ns-open-file’イベン
     トを生成することにより処理され、結果は上で説明したとおりになります
     。

<ns-open-file-line>
     ProjectBuilderやgdbのようないくつかのアプリケーションは、特定のファ
     イルだけではなく、そのファイルの特定の行、または一連の行を要求しま
     す。Emacsはそのファイルをvisitして要求された行をハイライトすること
     により、これを処理します(‘ns-open-file-select-line’)。

<ns-drag-file>
     このイベントは、ユーザーが他のアプリケーションから、Emacsフレームに
     ファイルをドラッグしたとき発生します。デフォルトの動作は、カレント
     バッファーにドラッグされたファイルのすべての内容を挿入します
     (‘ns-insert-files’)。ドラッグされたファイルのリストは、変数
     ‘ns-input-file’に格納されます。

<ns-drag-color>
     このイベントは、ユーザーがcolor well(または他のソース)からカラーを
     ドラッグしたとき発生します。デフォルトの動作では、その領域のフォア
     グラウンドカラーを、ドラッグされたカラーに変更します
     (‘ns-set-foreground-at-mouse’)。このイベントが<Shift>修飾キーととも
     に発行された場合、Emacsはかわりにバックグラウンドカラーを変更します
     (‘ns-set-background-at-mouse’)。ドラッグされたカラーの名前は、変数
     ‘ns-input-color’に格納されます。

<ns-change-font>
     このイベントは、ユーザーがNextstep font panel(これは‘Cmd-t’で開くこ
     とができます)でフォントを選択したとき発生します。デフォルトの動作は
     、選択されたフレームのフォントを変更します
     (‘ns-respond-to-changefont’)。選択されたフォントの名前とサイズは、
     変数‘ns-input-font’と‘ns-input-fontsize’に格納されます。

<ns-power-off>
     このイベントは、ユーザーがEmacsを実行中にログアウトしたとき、または
     アプリケーションメニューから‘Quit Emacs’を選択したとき発生します。
     デフォルトの動作は、ファイルをvisitしているすべてのバッファーを保存
     します。

   Emacsはユーザーに、‘ns-service-’で始まりサービス名で終わるコマンドを
通じて、Nextstepサービスを使用することも可能にします。‘M-x
ns-service-<TAB>’とタイプして、これらのコマンドをリストを見ることができ
ます。これらの関数は、マークされたテキストを処理(結果でそれを置き換える
)したり、文字列を引数として結果を文字列で返します。Lisp関数
‘ns-perform-service’を使用して、任意の文字列を任意のサービスに渡して、結
果を受けとることもできます。新たに利用可能になったサービスにアクセスする
には、Emacsの再起動が必要なことに注意してください。


File: emacs-ja.info,  Node: GNUstep Support,  Prev: Mac / GNUstep Events,  Up: Mac OS / GNUstep

F.4 GNUstepにたいするサポート
=============================

EmacsはGNUstepの下でビルドして実行することができますが、解決すべき問題が
残っています。興味のある開発者は、 <emacs-devel@gnu.org>に連絡してくださ
い。


File: emacs-ja.info,  Node: Microsoft Windows,  Next: Manifesto,  Prev: Mac OS / GNUstep,  Up: Top

Appendix G EmacsとMicrosoft Windows/MS-DOS
******************************************

このセクションでは、Microsoft WindowsでEmacsを使用する際の特性を説明しま
す。これらの特性の中には、Microsoft’sの古いMS-DOS“オペレーティングシステ
ム”(“MS-DOG”としても知られる)に関連するものもあります。しかしMS-DOS_だけ
_に関連するEmacs機能については、別の セクション(*note MS-DOS::を参照して
ください)で説明します。

   MS-WindowsでのEmacsの振る舞いは、ロングファイル名のサポート、複数フレ
ーム、スクロールバー、マウスメニュー、サブプロセスを含めて、このマニュア
ルの他の部分でドキュメントされているのと、だいたい同じです。しかし多くは
ありませんが、特別に考慮すべきこともあるので、それらについてはここで説明
します。

* Menu:

* Windows Startup::          WindowsでEmacsを開始する方法。
* Text and Binary::          行末にCRLFを使用するテキストファイル。
* Windows Files::            Windowsのファイル名の慣習。
* ls in Lisp::               Diredにたいする‘ls’のエミュレーション。
* Windows HOME::             開始時にEmacsが‘.emacs’を探す場所。
* Windows Keyboard::         Windows特有のキーボード機能。
* Windows Mouse::            Windows特有のマウス機能。
* Windows Processes::        Windowsでのサブプロセスの実行。
* Windows Printing::         MS-Windowsでプリンターを指定する方法。
* Windows Fonts::            MS-Windowsでのフォントの指定。
* Windows Misc::             その他のWindowsの機能。
* MS-DOS:: MS-DOSでのEmacsの使用。


File: emacs-ja.info,  Node: Windows Startup,  Next: Text and Binary,  Up: Microsoft Windows

G.1 MS-WindowsでEmacsを開始する方法
===================================

MS-WindowsでEmacsを開始するには、いくつかの方法があります:

  1. デスクトップのショートカットアイコンから、それを左マウスボタンでダ
     ブルクリックするか、1回クリックしてから<RET>を押します。デスクトッ
     プのショートカットは、ショートカットの“Target”(ショートカットの
     ‘Properties”の中にあります)に、‘emacs.exe’ではなく、
     ‘runemacs.exe’の絶対ファイル名を指定する必要があります。なぜならシ
     ョートカットのターゲットが‘emacs.exe’(Windowsから見る限りこれはコン
     ソールプログラムです)のときに作成されるコンソールウィンドウを、
     ‘runemacs.exe’は隠すからです。この方法を使用する場合、Emacsはショー
     トカットで指定されたディレクトリーで開始されます。これを制御するに
     は、ショートカットを右クリックして“Properties”を選択し、
     “Shortcut”タブで“Start in”フィールドを変更します。

  2. コマンドプロンプトウィンドウから、プロンプトにたいして‘emacs
     <RET>’とタイプします。そのコマンドプロンプトウィンドウからは、
     Emacsを終了するまで、他のコマンドを呼び出すことはできなくなります。
     この場合、EmacsはWindowsシェルのカレントディレクトリーで開始されま
     す。

  3. コマンドプロンプトウィンドウから、プロンプトにたいして‘runemacs
     <RET>’とタイプします。そのコマンドプロンプトウィンドウから、すぐに
     別のコマンドを呼び出すことが可能になります。この場合Emacsは
     Windowsシェルのカレントディレクトリーで開始されます。

  4. ‘emacsclient.exe’または‘emacsclientw.exe’を通じてEmacsを開始します
     。これらのコマンドは、Emacsを他のプログラムから呼び出して、他のプロ
     グラムから要求された編集ジョブのために、実行中のEmacsプロセスを再使
     用します。*note Emacs Server::を参照してください。2つのコマンドの違
     いは、‘emacsclient.exe’がコンソールプログラムなのにたいして、
     ‘emacsclientw.exe’はWindowsのGUIプログラムであるという点です。どち
     らのプログラムも、プログラムを終了して呼び出したプログラムに制御を
     戻す前に、Emacsが編集ジョブの終了をシグナルするまで待ちます。これら
     のコマンドを、それぞれどのような場合に使用するかは、編集サービスを
     必要とするプログラムが期待することに依存します。そのプログラム自身
     がコンソール(テキストモード)プログラムの場合は、‘emacsclient.exe’を
     使用するべきです。そうすれば呼び出したプログラムと同じコマンドウィ
     ンドウにメッセージとプロンプトが表示されます。対照的に呼び出し側の
     プログラムがGUIプログラムの場合は、‘emacsclientw.exe’を使用するほう
     がよいでしょう。なぜなら‘emacsclient.exe’はGUIプログラムから呼び出
     された場合、コマンドウィンドウをポップアップするからです。
     ‘emacsclientw.exe’を使いたい状況としては、Windows Explorerでファイ
     ルを右クリックして、ポップアップメニューで“Open With”を選択する場合
     です。‘emacsclient’を呼び出すときにEmacsが実行中でない(またはサーバ
     ーとして実行されていない)場合は、‘--alternate-editor=’または‘-a’オ
     プションを使用します。このオプションは常にエディターを与えます。
     ‘emacsclient’を通じて呼び出された場合、Emacsは‘emacsclient’を呼び出
     したプログラムのカレントディレクトリーで開始されます。

   MS-Windowsの制限により、Emacsは同一セッションでGUIとテキストモードの
フレームをもつことはできないことに注意してください。また複数の“コマンド
プロンプト”ウィンドウでテキストモードのフレームを開くこともできません。
なぜならWindowsのプログラムは、それぞれ1度に1つのコンソールしかもつこと
ができないからです。これらの理由により、‘emacsclient’を‘-c’オプションで
呼び出したとき、Emacsサーバーがテキストモードセッションで実行されている
場合、Emacsは常にそれが開始されたのと同じ“コマンドプロンプト”ウィンドウ
に、テキストモードのフレームを開きます。GUIフレームはサーバーがGUIセッシ
ョンで実行されているときだけ作成されます。同様に、‘emacsclient’を‘-t’オ
プションで呼び出したとき、サーバーがGUIセッションで実行されている場合は
GUIフレームを作成し、サーバーセッションが“コマンドプロンプト”ウィンドウ
のテキストモードで実行されている場合はテキストモードのフレームを作成しま
す。*note emacsclient Options::を参照してください。


File: emacs-ja.info,  Node: Text and Binary,  Next: Windows Files,  Prev: Windows Startup,  Up: Microsoft Windows

G.2 テキストファイルとバイナリーファイル
========================================

GNU Emacsはテキスト行を分けるのに改行文字を使用します。これはGNU、
Unixmその他のPosix準拠システムで使用されている慣習です。

   対照的にMS-DOSとMS-Windowsは、テキスト行を分けるのに、通常は
CR(carriage-return: キャリッジリターン)とLF(linefeed: ラインフィード)の
、2文字からなるシーケンスを使用します(LFは改行と同じ文字です)。したがっ
てこれらのファイルを便利に編集するために、Emacsはこれらの行末(EOL:
end-of-line)文字を変換する必要があります。そしてこれはEmacsが通常行なっ
ていることです。Emacsはファイルを読み込むときCRLFを改行に変換して、ファ
イルに書き込むときは改行をCRLFに変換します。国際化文字コードの変換を処理
するのと同じ仕組みが、この変換でも行なわれます(*note Coding Systems::を
参照してください)。

   ほとんどのファイルにおいて、この特別なフォーマット変換の重要な問題は
、Emacsが報告する文字の位置(*note Position Info::を参照してください)が、
オペレーティングシステムが認識するファイルサイズの情報と一致しないことで
す。

   それに加えて、ファイル内容から行の区切りにCRLFではなく改行(LF)が使用
されているとEmacsが認識した場合、Emacsはファイルの読み書きでEOL変換を行
ないません。したがって特別に何かを行なわなくても、GNUおよびUnixシステム
のファイルをMS-DOSで読み書きでき、編集した後でも、それらのファイルの
EOLはUnixスタイルの慣習にしたがいます。

   カレントバッファーにたいして、どのEOL変換が使用されているかは、モード
ラインに表示されます。そのバッファーにたいしてMS-DOSのEOL変換が使用され
ている場合、MS-WindowsでビルドされたEmacsでは、モードラインの先頭付近の
、コーディングシステムニーモニックの後ろにバックスラッシュ‘\’が表示され
ます。なんのEOL変換も処理されていない場合、そのファイルのEOLフォーマット
が通常のCRLFではないことを警告するために、バックスラッシュのかわりに文字
列‘(Unix)’が表示されます。

   ファイルをvisitして、DOSスタイルとUnixスタイルのどちらを使用するか指
定するには、コーディングシステムを指定します(*note Text Coding::を参照し
てください)。たとえば‘C-x <RET> c unix <RET> C-x C-f foobar.txt’は、
EOL変換をせずに、ファイル‘foobar.txt’をvisitします。CRLFで終わる行がある
場合、Emacsは行末に‘^M’を表示します。同様に、‘C-x <RET> f’コマンドで、そ
のバッファーを指定したEOLフォーマットで保存するよう指示できます。たとえ
ばバッファーをUnixのEOLフォーマットで保存するには、‘C-x <RET> f unix
<RET> C-x C-s’とタイプします。DOSのEOL変換でファイルをvisitしていて、そ
れをUnixのEOLフォーマットで保存すると、‘dos2unix’コマンドのように、その
ファイルをUnixのEOLスタイルに変換できます。

   NFS、Samba、または他の類似した方法により、GNUおよびUnixシステムを使用
しているコンピューターのファイルシステムにアクセスする場合、Emacsはそれ
らのファイルシステム上のファイル — たとえファイルを新たに作成する場合で
も、EOL変換を行なうべきではありません。EOL変換を行なわないようにするには
、関数‘add-untranslated-filesystem’を呼び出して、それらのファイルシステ
ムが“untranslated(変換なし)”だと指定します。この関数は、ドライブ文字とオ
プションでディレクトリーを含む、ファイルシステム名を引数にとります。たと
えば、

     (add-untranslated-filesystem "Z:")

これはZドライブが変換なしのファイルシステムであると指定し、

     (add-untranslated-filesystem "Z:\\foo")

これはドライブZのディレクトリー‘\foo’は、変換なしのファイルシステムだと
指定します。

   ‘.emacs’や‘site-start.el’の中でで‘add-untranslated-filesystem’を使用
するのが、ほとんどでしょう。‘site-start.el’に記述しておけば、そのサイト
のすべてのユーザーが恩恵にあずかることができます。

   ‘add-untranslated-filesystem’の効果を取り消すには、関数
‘remove-untranslated-filesystem’を使用します。この関数は、前に
‘add-untranslated-filesystem’で使用された文字列と同様の文字列を引数にと
ります。

   ファイルシステムを変換なしと指定しても、影響があるのはEOL変換だけで、
文字セットの変換に影響はありません。原則的として、行末に改行を使用する
Unixスタイルで、新たにファイルを作成するようEmacsに指示します。*note
Coding Systems::を参照してください。


File: emacs-ja.info,  Node: Windows Files,  Next: ls in Lisp,  Prev: Text and Binary,  Up: Microsoft Windows

G.3 MS-Windowsのファイル名
==========================

MS-WindowsとMS-DOSでは通常、ファイル名の名前単位の区切りにバックスラッシ
ュを使用します(他のシステムではスラッシュを使用します)。MS-DOSおよび
MS-WindowsのEmacsは、スラッシュとバックスラッシュのどちらも使用でき、フ
ァイル名に含まれるドライブ文字も識別できます。

   MS-DOSおよびMS-Windowsでは、ファイル名は大文字小文字を区別せず、
Emacsもデフォルトではファイル名の補完で大文字小文字の違いを無視します。

   変数‘w32-get-true-file-attributes’は、‘file-attributes’や
‘directory-files-and-attributes’のように、より正確にプリミティブなファイ
ル属性を判断するために、Emacsが追加のシステムコールを呼び出すべきかを制
御します。これらの追加のシステムコールは、ファイルの正しい所有者、リンク
カウントと、パイプのような特殊ファイルのファイルタイプを取得するのに必要
となります。システムコールを使用しない場合、ファイルの所有者はカレントユ
ーザーとなり、リンクカウントは常に1に、そして特殊ファイルは通常ファイル
となるでしょう。

   この変数の値が‘local’(デフォルト)の場合、Emacsはローカルの固定ドライ
ブのファイルにたいしてのみ、システムコールを呼び出します。他の非‘nil’値
は、ファイルがリムーバブルメディアやリモートボリュームにある場合も、シス
テムコールを呼び出すことを意味し、これはDiredやその他の関連する機能の速
度低下を招く恐れがあります。値‘nil’はシステムコールを呼び出さないことを
意味します。非‘nil’値は、FAT、FAT32、exFATのようなボリュームより、ハード
リンクやファイルセキュリティーをサポートするNTFSのボリュームの場合のほう
が有用です。

   Unixとは異なり、MS-Windowsのファイルシステムでは、ファイル名に使用さ
れるかもしれない複数の文字にたいして制限があります。以下の文字は使用でき
ません:

   • シェルのリダイレクション文字‘<’、‘>’、‘|’。

   • コロン‘:’(ただしドライブ文字を除く)。

   • スラッシュ‘/’とバックスラッシュ‘\’(ただしディレクトリー区切り文字の
     場合を除く)。

   • ワイルドカード文字‘*’と‘?’。

   • コードポイントが10進の1から31の制御文字。特にファイル名の中の改行は
     許されていません。

   • コードポイント0のnull文字(この制限はUnixファイルシステムにもありま
     す)。

これらに加えて、ファイル名拡張子の有無に関わらず、‘NUL’、‘LPT1’、‘PRN’、
‘CON’のようなDOSの文字デバイスに名前がマッチする任意のファイルは、どのデ
ィレクトリーにあっても、文字デバイスとして解釈されます。したがってその文
字デバイスを使用したいときだけ、そのようなファイル名を使用します。


File: emacs-ja.info,  Node: ls in Lisp,  Next: Windows HOME,  Prev: Windows Files,  Up: Microsoft Windows

G.4 MS-Windowsでの‘ls’のエミュレーション
========================================

Diredは通常、Diredバッファーで表示するディレクトリーリストを生成するため
に、外部プログラムの‘ls’を使用します。しかしMS-WindowsとMS-DOSには、GNU
‘ls’のいくつかのポートは存在するものの、システムにはそのようなプログラム
がありません。したがって、そのようなシステム上のEmacsは、‘ls-lisp.el’パ
ッケージを使用することにより、Lispで‘ls’を_エミュレート_します。
‘ls-lisp.el’は、‘ls’のほぼ完全なエミュレーションを提供し、エミュレーショ
ンに特化したオプションと機能もあります。 それらについては、このセクショ
ンで説明します。

   ‘ls’エミュレーションは、‘ls’スイッチの多くをサポートしますが、すべて
をサポートする訳ではありません。サポートされているオプションは、‘-A’、
‘-a’、‘-B’、‘-C’、‘-c’、‘-G’、‘-g’、‘-h’、‘-i’、‘-n’、‘-R’、‘-r’、‘-S’、
‘-s’、‘-t’、‘-U’、‘-u’、‘-X’です。‘-F’オプションは、部分的にサポートされ
ています(ファイルをクラス化する文字を追加しますが、シンボリックリンクの
フォローを抑止しません)。

   MS-WindowsとMS-DOSでは、‘ls-lisp.el’はEmacsが構築されるとき事前ロード
されるので、それらの環境では常に‘ls’のLispエミュレーションが使用されます
。ポートされた‘ls’がある場合、‘ls-lisp-use-insert-directory-program’を非
‘nil’値にセットすることにより、変数‘insert-directory-program’にセットさ
れた名前の外部プログラムを使用するように戻すことができます。

   デフォルトでは、‘ls-lisp.el’はディレクトリーのリストを生成するのに、
大文字小文字を区別するソート順を使用します。これは他のプラットフォームと
同じような見映えにリストするためです。大文字小文字を区別せずにファイルを
ソートしたい場合は、変数‘ls-lisp-ignore-case’に非‘nil’値をセットしてくだ
さい。

   デフォルトでは、‘ls’の動作をエミュレートするために、ファイルとサブデ
ィレクトリーは一緒にソートされます。しかしネイティブのMS-Windowsと
MS-DOSのファイルマネージャーでは、ファイルの前にディレクトリーがリストさ
れます。このように動作させたい場合は、オプション‘ls-lisp-dirs-first’を非
‘nil’値にカスタマイズしてください。

   変数‘ls-lisp-verbosity’は、‘ls-lisp.el’が表示するファイル属性を制御し
ます。値にはシンボル‘links’、‘uid’、‘gid’を1つ以上含むリストを指定します
。‘links’は、そのファイルデータに関連付けられている(“links to”とも言いま
す)別のファイルの数を表示することを意味し、これはNTFSボリュームでのみ有
用です。‘uid’はそのファイルを所有するユーザーの、数字による識別子を表示
することを意味します。‘gid’はそのファイルの所有者のグループの、数字によ
る識別子を表示することを意味します。デフォルト値は‘(links uid gid)’で、
3つのすべてのオプション属性が表示されます。

   変数‘ls-lisp-emulation’は、上記で説明した3つのオプション
‘ls-lisp-ignore-case’、‘ls-lisp-dirs-first’、‘ls-lisp-verbosity’でデフォ
ルトをセットすることにより、‘ls’エミュレーションの風合いを制御します。こ
のオプションの値には、以下のシンボルを指定できます:

‘GNU’
‘nil’
     GNUシステムをエミュレートします(デフォルト)。これは
     ‘ls-lisp-ignore-case’と‘ls-lisp-dirs-first’を‘nil’に、
     ‘ls-lisp-verbosity’を‘(links uid gid)’にセットします。
‘UNIX’
     Unixシステムをエミュレートします。‘GNU’と同様ですが、
     ‘ls-lisp-verbosity’は‘(links uid)’にセットします。
‘MacOS’
     MacOSをエミュレートします。‘ls-lisp-ignore-case’を‘t’に、
     ‘ls-lisp-dirs-first’と‘ls-lisp-verbosity’を‘nil’にセットします。
‘MS-Windows’
     MS-Windowsをエミュレートします。‘ls-lisp-ignore-case’と
     ‘ls-lisp-dirs-first’を‘t’にセットし、‘ls-lisp-verbosity’を、Windows
     NT/2000/XP/003では‘(links)’、Windows 9Xでは‘nil’にセットします。こ
     れらのプラットフォームのEmacsユーザーの多くがデフォルトとしてGNUを
     好むため、たとえWindowsにおいても、デフォルトのエミュレーションは
     ‘MS-Windows’ではないことに注意してください。

これ以外の値を‘ls-lisp-emulation’にセットするのは、‘GNU’をセットするのと
同じです。このオプションをカスタマイズすることにより、必要に応じて3つの
従属オプションを更新するために、関数‘ls-lisp-set-options’が呼び出されま
す。‘ls-lisp.el’がロードされた後(MS-WindowsとMS-DOSでは事前ロードされる
ことに注意してください)に、customizeを使用せずにこの変数の値を変更した場
合、この関数を手動で呼び出して、同じ結果を得ることができます。

   変数‘ls-lisp-support-shell-wildcards’は、ファイル名パターンがサポート
される方法を制御します。非‘nil’(デフォルト)の場合、ファイル名パターンは
シェルスタイルのワイルドカードとして扱われ、‘nil’の場合はEmacsの正規表現
として扱われます。

   変数‘ls-lisp-format-time-list’は、ファイルの日付と時刻の書式をフォー
マットする方法を定義します。Emacsがカレントlocaleを判断できる場合、_この
変数の値は無視されます_(しかし‘ls-lisp-use-localized-time-format’の値が
非‘nil’の場合、Emacsはカレントlocaleが利用できるときでも
‘ls-lisp-format-time-list’にしたがいます。以下を参照してください)。

   ‘ls-lisp-format-time-list’の値は、2つの文字列からなるリストです。最初
の文字列は、そのファイルがその年に変更されている場合に使用され、2番目の
文字列はそれより古いファイルに使用されます。2つの文字列では、日時の一部
を置換するために‘%’シーケンスを使用できます。たとえば:
     ("%b %e %H:%M" "%b %e  %Y")

これらの‘%’シーケンスにたいする文字列の置換は、カレントlocaleに依存する
ことに注意してください。日時のフォーマットの仕様については、*note
(elisp)Time Parsing::を参照してください。

   Emacsは通常、ファイルのタイムスタンプの日時フォーマットに、慣習にした
がったフォーマット、またはISOスタイルのフォーマットを使用します。しかし
変数‘ls-lisp-use-localized-time-format’の値が非‘nil’の場合、Emacsはファ
イルのタイムスタンプを、‘ls-lisp-format-time-list’の指定にしたがってフォ
ーマットします。‘ls-lisp-format-time-list’の‘%’シーケンスは、localeにし
たがった月の名前と曜日名を生成し、それによりDiredの列表示がずれるかもし
れません。

